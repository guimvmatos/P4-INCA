+version:  10/31/2000
+switches:  
+nfas_version: 6.1.0.1-preview.3243
+nfas_date: Oct  9 2018 17:02:52
+current_date: Fri Jan 22 04:29:03 2021

.chip_id nfp-4xxxc-b0 0x10 0x10

.%init_csr "default assembler setting" -1 mecsr:MISC_CONTROL.LEGACY_INDIRECT_REF_MODE const 0
.%init_csr "default assembler setting" -1 mecsr:MISC_CONTROL.THIRD_PARTY_ADDRESS_MODE const 0
.%init_csr "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb_iface.uc" 67 cls:Rings.RingBase15 const " nfd_out_sb_wq_mem0 &v 0x7 >> 0x0 << 0x50000 |"
.%init_csr "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb_iface.uc" 70 cls:Rings.RingPtrs15 const 0

.%num_contexts 8
.%ctx_range 0 7

.%local_mem0_mode rel
.%local_mem1_mode rel

.%local_mem2_mode rel
.%local_mem3_mode rel

.%init_nn_mode --
.%third_party_addressing 40bit
.%indirect_ref_mode nfp6000
.%neighbor_usage 0x00
.%case_sensitivity 1

.%resource CAM 0
.%resource CRC 0
.%resource T_INDEX 0
.%resource BYTE_INDEX 0


:M002# 0
:M065# 41
:M068# 47
:M069_add_wq_credits# 213
:M069_ctm_and_mu_dma# 72
:M069_ctm_only# 51
:M069_ctm_only_not_flagged# 206
:M069_mu_only_dma# 146
:M069_no_dma# 200
:M069_not_ctm_only# 65
:M069_start_packet_dma# 49
:M070# 49
:M071# 49
:M072# 49
:M1015# 1280
:M1015_complete_done# 1299
:M1015_no_ctm_buffer# 1288
:M1015_ticket_error# 1301
:M1015_ticket_ready# 1295
:M1016# 1280
:M1050# 1315
:M1051_add_wq_credits# 1481
:M1051_ctm_and_mu_dma# 1340
:M1051_ctm_only# 1319
:M1051_ctm_only_not_flagged# 1474
:M1051_mu_only_dma# 1414
:M1051_no_dma# 1468
:M1051_not_ctm_only# 1333
:M1051_start_packet_dma# 1317
:M1052# 1317
:M1053# 1317
:M1054# 1317
:M1099# 1340
:M1100# 1340
:M1169# 1474
:M117# 72
:M1170# 1474
:M1171# 1481
:M1172# 1481
:M1178# 1492
:M1179_add_wq_credits# 1658
:M1179_ctm_and_mu_dma# 1517
:M1179_ctm_only# 1496
:M1179_ctm_only_not_flagged# 1651
:M1179_mu_only_dma# 1591
:M1179_no_dma# 1645
:M1179_not_ctm_only# 1510
:M1179_start_packet_dma# 1494
:M118# 72
:M1180# 1494
:M1181# 1494
:M1182# 1494
:M1227# 1517
:M1228# 1517
:M1297# 1651
:M1298# 1651
:M1299# 1658
:M1300# 1658
:M1306# 1669
:M1307# 1669
:M1308_add_wq_credits# 1835
:M1308_ctm_and_mu_dma# 1694
:M1308_ctm_only# 1673
:M1308_ctm_only_not_flagged# 1828
:M1308_mu_only_dma# 1768
:M1308_no_dma# 1822
:M1308_not_ctm_only# 1687
:M1308_start_packet_dma# 1671
:M1309# 1671
:M1310# 1671
:M1311# 1671
:M1356# 1694
:M1357# 1694
:M1426# 1828
:M1427# 1828
:M1428# 1835
:M1429# 1835
:M1435# 1844
:M1435_complete_done# 1863
:M1435_no_ctm_buffer# 1852
:M1435_ticket_error# 1865
:M1435_ticket_ready# 1859
:M1436# 1844
:M1470# 1879
:M1471# 1879
:M1471_complete_done# 1898
:M1471_no_ctm_buffer# 1887
:M1471_ticket_error# 1900
:M1471_ticket_ready# 1894
:M1472# 1879
:M1506# 1914
:M1506_complete_done# 1933
:M1506_no_ctm_buffer# 1922
:M1506_ticket_error# 1935
:M1506_ticket_ready# 1929
:M1507# 1914
:M187# 206
:M188# 206
:M189# 213
:M190# 213
:M196# 224
:M197_add_wq_credits# 390
:M197_ctm_and_mu_dma# 249
:M197_ctm_only# 228
:M197_ctm_only_not_flagged# 383
:M197_mu_only_dma# 323
:M197_no_dma# 377
:M197_not_ctm_only# 242
:M197_start_packet_dma# 226
:M198# 226
:M199# 226
:M200# 226
:M245# 249
:M246# 249
:M315# 383
:M316# 383
:M317# 390
:M318# 390
:M324# 401
:M325# 401
:M326_add_wq_credits# 567
:M326_ctm_and_mu_dma# 426
:M326_ctm_only# 405
:M326_ctm_only_not_flagged# 560
:M326_mu_only_dma# 500
:M326_no_dma# 554
:M326_not_ctm_only# 419
:M326_start_packet_dma# 403
:M327# 403
:M328# 403
:M329# 403
:M374# 426
:M375# 426
:M444# 560
:M445# 560
:M446# 567
:M447# 567
:M453# 576
:M453_complete_done# 595
:M453_no_ctm_buffer# 584
:M453_ticket_error# 597
:M453_ticket_ready# 591
:M454# 576
:M488# 611
:M489# 611
:M489_complete_done# 630
:M489_no_ctm_buffer# 619
:M489_ticket_error# 632
:M489_ticket_ready# 626
:M490# 611
:M524# 646
:M524_complete_done# 665
:M524_no_ctm_buffer# 654
:M524_ticket_error# 667
:M524_ticket_ready# 661
:M525# 646
:M559# 681
:M560_add_wq_credits# 847
:M560_ctm_and_mu_dma# 706
:M560_ctm_only# 685
:M560_ctm_only_not_flagged# 840
:M560_mu_only_dma# 780
:M560_no_dma# 834
:M560_not_ctm_only# 699
:M560_start_packet_dma# 683
:M561# 683
:M562# 683
:M563# 683
:M608# 706
:M609# 706
:M678# 840
:M679# 840
:M680# 847
:M681# 847
:M687# 858
:M688_add_wq_credits# 1024
:M688_ctm_and_mu_dma# 883
:M688_ctm_only# 862
:M688_ctm_only_not_flagged# 1017
:M688_mu_only_dma# 957
:M688_no_dma# 1011
:M688_not_ctm_only# 876
:M688_start_packet_dma# 860
:M689# 860
:M690# 860
:M691# 860
:M736# 883
:M737# 883
:M806# 1017
:M807# 1017
:M808# 1024
:M809# 1024
:M815# 1035
:M816# 1035
:M817_add_wq_credits# 1201
:M817_ctm_and_mu_dma# 1060
:M817_ctm_only# 1039
:M817_ctm_only_not_flagged# 1194
:M817_mu_only_dma# 1134
:M817_no_dma# 1188
:M817_not_ctm_only# 1053
:M817_start_packet_dma# 1037
:M818# 1037
:M819# 1037
:M820# 1037
:M865# 1060
:M866# 1060
:M935# 1194
:M936# 1194
:M937# 1201
:M938# 1201
:M944# 1210
:M944_complete_done# 1229
:M944_no_ctm_buffer# 1218
:M944_ticket_error# 1231
:M944_ticket_ready# 1225
:M945# 1210
:M979# 1245
:M980# 1245
:M980_complete_done# 1264
:M980_no_ctm_buffer# 1253
:M980_ticket_error# 1266
:M980_ticket_ready# 1260
:M981# 1245
:kickstart# 41
:l000_01# 5
:l000_end# 5
:l001_01# 106
:l001_end# 145
:l002_01# 117
:l002_end# 117
:l003_cont# 116
:l003_start# 110
:l004_cont# 143
:l004_start# 124
:l005_01# 136
:l005_end# 142
:l006_01# 161
:l006_end# 199
:l007_01# 171
:l007_end# 171
:l008_cont# 170
:l008_start# 164
:l009_cont# 197
:l009_start# 178
:l010_01# 190
:l010_end# 196
:l011_01# 283
:l011_end# 322
:l012_01# 294
:l012_end# 294
:l013_cont# 293
:l013_start# 287
:l014_cont# 320
:l014_start# 301
:l015_01# 313
:l015_end# 319
:l016_01# 338
:l016_end# 376
:l017_01# 348
:l017_end# 348
:l018_cont# 347
:l018_start# 341
:l019_cont# 374
:l019_start# 355
:l020_01# 367
:l020_end# 373
:l021_01# 460
:l021_end# 499
:l022_01# 471
:l022_end# 471
:l023_cont# 470
:l023_start# 464
:l024_cont# 497
:l024_start# 478
:l025_01# 490
:l025_end# 496
:l026_01# 515
:l026_end# 553
:l027_01# 525
:l027_end# 525
:l028_cont# 524
:l028_start# 518
:l029_cont# 551
:l029_start# 532
:l030_01# 544
:l030_end# 550
:l031_01# 740
:l031_end# 779
:l032_01# 751
:l032_end# 751
:l033_cont# 750
:l033_start# 744
:l034_cont# 777
:l034_start# 758
:l035_01# 770
:l035_end# 776
:l036_01# 795
:l036_end# 833
:l037_01# 805
:l037_end# 805
:l038_cont# 804
:l038_start# 798
:l039_cont# 831
:l039_start# 812
:l040_01# 824
:l040_end# 830
:l041_01# 917
:l041_end# 956
:l042_01# 928
:l042_end# 928
:l043_cont# 927
:l043_start# 921
:l044_cont# 954
:l044_start# 935
:l045_01# 947
:l045_end# 953
:l046_01# 972
:l046_end# 1010
:l047_01# 982
:l047_end# 982
:l048_cont# 981
:l048_start# 975
:l049_cont# 1008
:l049_start# 989
:l050_01# 1001
:l050_end# 1007
:l051_01# 1094
:l051_end# 1133
:l052_01# 1105
:l052_end# 1105
:l053_cont# 1104
:l053_start# 1098
:l054_cont# 1131
:l054_start# 1112
:l055_01# 1124
:l055_end# 1130
:l056_01# 1149
:l056_end# 1187
:l057_01# 1159
:l057_end# 1159
:l058_cont# 1158
:l058_start# 1152
:l059_cont# 1185
:l059_start# 1166
:l060_01# 1178
:l060_end# 1184
:l061_01# 1374
:l061_end# 1413
:l062_01# 1385
:l062_end# 1385
:l063_cont# 1384
:l063_start# 1378
:l064_cont# 1411
:l064_start# 1392
:l065_01# 1404
:l065_end# 1410
:l066_01# 1429
:l066_end# 1467
:l067_01# 1439
:l067_end# 1439
:l068_cont# 1438
:l068_start# 1432
:l069_cont# 1465
:l069_start# 1446
:l070_01# 1458
:l070_end# 1464
:l071_01# 1551
:l071_end# 1590
:l072_01# 1562
:l072_end# 1562
:l073_cont# 1561
:l073_start# 1555
:l074_cont# 1588
:l074_start# 1569
:l075_01# 1581
:l075_end# 1587
:l076_01# 1606
:l076_end# 1644
:l077_01# 1616
:l077_end# 1616
:l078_cont# 1615
:l078_start# 1609
:l079_cont# 1642
:l079_start# 1623
:l080_01# 1635
:l080_end# 1641
:l081_01# 1728
:l081_end# 1767
:l082_01# 1739
:l082_end# 1739
:l083_cont# 1738
:l083_start# 1732
:l084_cont# 1765
:l084_start# 1746
:l085_01# 1758
:l085_end# 1764
:l086_01# 1783
:l086_end# 1821
:l087_01# 1793
:l087_end# 1793
:l088_cont# 1792
:l088_start# 1786
:l089_cont# 1819
:l089_start# 1800
:l090_01# 1812
:l090_end# 1818
:main# 0
:state_e0n0# 47
:state_e0n1# 681
:state_e0n2# 1315
:state_e1n0# 1490
:state_e1n1# 222
:state_e1n2# 856
:state_e2n0# 1033
:state_e2n1# 1667
:state_e2n2# 399
:state_e3n0# 576
:state_e3n1# 1210
:state_e3n2# 1844
:transition_e0n0_e1n1# 47
:transition_e0n1_e1n2# 681
:transition_e0n2_e1n0# 1315
:transition_e1n0_e0n0# 1879
:transition_e1n0_e2n1# 1492
:transition_e1n1_e0n1# 611
:transition_e1n1_e2n2# 224
:transition_e1n2_e0n2# 1245
:transition_e1n2_e2n0# 858
:transition_e2n0_e1n0# 1280
:transition_e2n0_e3n1# 1035
:transition_e2n1_e1n1# 1914
:transition_e2n1_e3n2# 1669
:transition_e2n2_e1n2# 646
:transition_e2n2_e3n0# 401
:transition_e3n0_e2n0# 576
:transition_e3n1_e2n1# 1210
:transition_e3n2_e2n2# 1844
:unreached# 1949
*-- no_destination 0
*l0000!g_sbpd_wq_hi gpr_a_rel 00
*l0000!g_sbpd_wq_lo gpr_b_rel 00
*l0000!g_dma_word0_mask gpr_a_rel 01
*l0000!g_dma_word1_vals gpr_b_rel 01
*l0000!g_dma_word3_vals gpr_b_rel 02
*l0000!g_bitmap_base gpr_b_rel 03
*l0000!g_seq_mask gpr_a_rel 02
*l0000!g_pkt_num_mask gpr_b_rel 04
*l0000!g_pkt_free_hi gpr_a_rel 03
*l0000!g_send_cntrs_addr_hi gpr_a_rel 04
*l0000!g_blm_addr_hi gpr_a_rel 05
*l0000!g_blm_iref gpr_b_rel 05
*l0000!g_add_imm_iref gpr_a_rel 06
*l0000!g_in_wq_hi gpr_b_rel 06
*l0000!g_in_wq_lo gpr_a_rel 07
*l0000!g_pcie_addr_lo gpr_a_rel 08
*l0000!g_pcie_addr_hi gpr_b_rel 07
*l0000!g_dma_max gpr_b_rel 08
*l0000!g_num_ticket_errors gpr_b_rel 09
*@l0000!ndequeued gpr_b_abs 0A
*$l0000!work_in0[0] xfer_rel 01 0 read 5 0x309
*$l0000!work_in0[1] xfer_rel 02 0 read 4 0x309
*$l0000!work_in0[2] xfer_rel 03 0 read 3 0x309
*$l0000!work_in0[3] xfer_rel 04 0 read 2 0x309
*$l0000!work_in0[4] xfer_rel 05 0 read 1 0x309
*$l0000!dma_out0[0] xfer_rel 01 0 write 4 0x305
*$l0000!dma_out0[1] xfer_rel 02 0 write 3 0x305
*$l0000!dma_out0[2] xfer_rel 03 0 write 2 0x305
*$l0000!dma_out0[3] xfer_rel 04 0 write 1 0x305
*$l0000!dma_out0x[0] xfer_rel 05 0 write 4 0x301
*$l0000!dma_out0x[1] xfer_rel 06 0 write 3 0x301
*$l0000!dma_out0x[2] xfer_rel 07 0 write 2 0x301
*$l0000!dma_out0x[3] xfer_rel 08 0 write 1 0x301
*$l0000!work_in1[0] xfer_rel 06 0 both 5 0x2F8
*$l0000!work_in1[1] xfer_rel 07 0 both 4 0x2F8
*$l0000!work_in1[2] xfer_rel 08 0 both 3 0x2F8
*$l0000!work_in1[3] xfer_rel 09 0 both 2 0x2F8
*$l0000!work_in1[4] xfer_rel 0A 0 both 1 0x2F8
*$l0000!dma_out1[0] xfer_rel 09 0 both 4 0x2F0
*$l0000!dma_out1[1] xfer_rel 0A 0 both 3 0x2F0
*$l0000!dma_out1[2] xfer_rel 0B 0 both 2 0x2F0
*$l0000!dma_out1[3] xfer_rel 0C 0 both 1 0x2F0
*$l0000!dma_out1x[0] xfer_rel 0D 0 both 4 0x2E8
*$l0000!dma_out1x[1] xfer_rel 0E 0 both 3 0x2E8
*$l0000!dma_out1x[2] xfer_rel 0F 0 both 2 0x2E8
*$l0000!dma_out1x[3] xfer_rel 10 0 both 1 0x2E8
*$l0000!work_in2[0] xfer_rel 0B 0 both 5 0x2DE
*$l0000!work_in2[1] xfer_rel 0C 0 both 4 0x2DE
*$l0000!work_in2[2] xfer_rel 0D 0 both 3 0x2DE
*$l0000!work_in2[3] xfer_rel 0E 0 both 2 0x2DE
*$l0000!work_in2[4] xfer_rel 0F 0 both 1 0x2DE
*$l0000!dma_out2[0] xfer_rel 11 0 both 4 0x2D6
*$l0000!dma_out2[1] xfer_rel 12 0 both 3 0x2D6
*$l0000!dma_out2[2] xfer_rel 13 0 both 2 0x2D6
*$l0000!dma_out2[3] xfer_rel 14 0 both 1 0x2D6
*$l0000!dma_out2x[0] xfer_rel 15 0 both 4 0x2CE
*$l0000!dma_out2x[1] xfer_rel 16 0 both 3 0x2CE
*$l0000!dma_out2x[2] xfer_rel 17 0 both 2 0x2CE
*$l0000!dma_out2x[3] xfer_rel 18 0 both 1 0x2CE
;*l0000!tmp!!2 gpr_a_rel 0D
;*l0000!tmp!!3 gpr_a_rel 0D
;*l0000!tmp!!4 gpr_a_rel 0D
;*l0000!tmp!!5 gpr_a_rel 0D
*l0000!tmp gpr_b_rel 0C
;*l0007!word!!2 gpr_a_rel 0A
;*l0007!word!!3 gpr_b_rel 0D
;*l0007!word!!4 gpr_a_rel 0A
;*l0007!word!!5 gpr_a_rel 0A
;*l0007!word!!6 gpr_a_rel 0A
;*l0007!word!!7 gpr_a_rel 0A
;*l0007!word!!8 gpr_a_rel 0A
*l0007!word gpr_b_rel 0D
;*l0007!tmp!!2 gpr_a_rel 0F
;*l0007!tmp!!3 gpr_b_rel 0B
;*l0007!tmp!!4 gpr_a_rel 0F
;*l0007!tmp!!5 gpr_a_rel 0F
;*l0007!tmp!!6 gpr_a_rel 0F
;*l0007!tmp!!7 gpr_a_rel 0F
;*l0007!tmp!!8 gpr_b_rel 0B
;*l0007!tmp!!9 gpr_a_rel 0F
;*l0007!tmp!!10 gpr_a_rel 0F
;*l0007!tmp!!11 gpr_a_rel 0F
;*l0007!tmp!!12 gpr_a_rel 0F
;*l0007!tmp!!13 gpr_a_rel 0F
;*l0007!tmp!!14 gpr_b_rel 0B
;*l0007!tmp!!15 gpr_a_rel 0F
;*l0007!tmp!!16 gpr_a_rel 0F
;*l0007!tmp!!17 gpr_a_rel 0F
;*l0007!tmp!!18 gpr_b_rel 0B
;*l0007!tmp!!19 gpr_b_rel 0B
;*l0007!tmp!!20 gpr_b_rel 0B
;*l0007!tmp!!21 gpr_b_rel 0B
*l0007!tmp gpr_b_rel 0B
*l0007!tmp2 gpr_b_rel 0C
*l0007!isl gpr_b_rel 0B
;*l0007!len!!2 gpr_b_rel 0C
;*l0007!len!!3 gpr_a_rel 0B
;*l0007!len!!4 gpr_a_rel 0B
;*l0007!len!!5 gpr_a_rel 0B
;*l0007!len!!6 gpr_a_rel 0B
*l0007!len gpr_b_rel 0C
*l0007!addr_lo gpr_b_rel 0E
;*l0007!pcie_hi_word!!2 gpr_b_rel 0D
;*l0007!pcie_hi_word!!3 gpr_b_rel 0D
;*l0007!pcie_hi_word!!4 gpr_b_rel 0D
;*l0007!pcie_hi_word!!5 gpr_b_rel 0D
*l0007!pcie_hi_word gpr_b_rel 0D
;*l0007!pcie_lo_start!!2 gpr_a_rel 0C
;*l0007!pcie_lo_start!!3 gpr_a_rel 0C
;*l0007!pcie_lo_start!!4 gpr_a_rel 0C
*l0007!pcie_lo_start gpr_a_rel 0C
;*l0007!mu_lo_start!!2 gpr_a_rel 09
;*l0007!mu_lo_start!!3 gpr_a_rel 09
;*l0007!mu_lo_start!!4 gpr_b_rel 0E
;*l0007!mu_lo_start!!5 gpr_a_rel 09
;*l0007!mu_lo_start!!6 gpr_a_rel 09
*l0007!mu_lo_start gpr_a_rel 09
*l0007!ctm_bytes gpr_b_rel 0F
*l0007!split_len gpr_b_rel 0B
*l0011!_wsm_mask gpr_b_rel 0C
*l0013!word gpr_b_rel 0E
*l0015!__immed_big_const gpr_b_rel 0C
*l0017!word gpr_b_rel 0E
*l0020!_wsm_mask gpr_b_rel 0F
*l0021!word gpr_b_rel 0F
*l0023!__immed_big_const gpr_b_rel 0B
*l0025!word gpr_b_rel 0C
*l0028!addr gpr_b_rel 0F
;*l0029!word!!2 gpr_a_rel 0B
;*l0029!word!!3 gpr_b_rel 0E
;*l0029!word!!4 gpr_a_rel 0B
;*l0029!word!!5 gpr_a_rel 0B
;*l0029!word!!6 gpr_a_rel 0B
;*l0029!word!!7 gpr_a_rel 0B
;*l0029!word!!8 gpr_a_rel 0B
*l0029!word gpr_b_rel 0E
;*l0029!tmp!!2 gpr_a_rel 09
;*l0029!tmp!!3 gpr_b_rel 0D
;*l0029!tmp!!4 gpr_a_rel 09
;*l0029!tmp!!5 gpr_a_rel 09
;*l0029!tmp!!6 gpr_a_rel 09
;*l0029!tmp!!7 gpr_a_rel 09
;*l0029!tmp!!8 gpr_b_rel 0D
;*l0029!tmp!!9 gpr_a_rel 09
;*l0029!tmp!!10 gpr_a_rel 09
;*l0029!tmp!!11 gpr_a_rel 09
;*l0029!tmp!!12 gpr_a_rel 09
;*l0029!tmp!!13 gpr_a_rel 09
;*l0029!tmp!!14 gpr_b_rel 0D
;*l0029!tmp!!15 gpr_a_rel 09
;*l0029!tmp!!16 gpr_a_rel 09
;*l0029!tmp!!17 gpr_a_rel 09
;*l0029!tmp!!18 gpr_b_rel 0D
;*l0029!tmp!!19 gpr_b_rel 0D
;*l0029!tmp!!20 gpr_b_rel 0D
;*l0029!tmp!!21 gpr_b_rel 0D
*l0029!tmp gpr_b_rel 0D
*l0029!tmp2 gpr_b_rel 0B
*l0029!isl gpr_b_rel 0E
;*l0029!len!!2 gpr_b_rel 0F
;*l0029!len!!3 gpr_a_rel 0D
;*l0029!len!!4 gpr_a_rel 0D
;*l0029!len!!5 gpr_a_rel 0D
;*l0029!len!!6 gpr_a_rel 0D
*l0029!len gpr_b_rel 0F
*l0029!addr_lo gpr_b_rel 0C
;*l0029!pcie_hi_word!!2 gpr_b_rel 0C
;*l0029!pcie_hi_word!!3 gpr_b_rel 0C
;*l0029!pcie_hi_word!!4 gpr_b_rel 0C
;*l0029!pcie_hi_word!!5 gpr_b_rel 0C
*l0029!pcie_hi_word gpr_b_rel 0C
;*l0029!pcie_lo_start!!2 gpr_a_rel 0E
;*l0029!pcie_lo_start!!3 gpr_a_rel 0E
;*l0029!pcie_lo_start!!4 gpr_a_rel 0E
*l0029!pcie_lo_start gpr_a_rel 0E
;*l0029!mu_lo_start!!2 gpr_a_rel 0A
;*l0029!mu_lo_start!!3 gpr_a_rel 0A
;*l0029!mu_lo_start!!4 gpr_b_rel 0D
;*l0029!mu_lo_start!!5 gpr_a_rel 0A
;*l0029!mu_lo_start!!6 gpr_a_rel 0A
*l0029!mu_lo_start gpr_a_rel 0A
*l0029!ctm_bytes gpr_b_rel 0E
*l0029!split_len gpr_b_rel 0F
*l0033!_wsm_mask gpr_b_rel 0B
*l0035!word gpr_b_rel 0D
*l0037!__immed_big_const gpr_b_rel 0F
*l0039!word gpr_b_rel 0B
*l0042!_wsm_mask gpr_b_rel 0E
*l0043!word gpr_b_rel 0E
*l0045!__immed_big_const gpr_b_rel 0F
*l0047!word gpr_b_rel 0B
*l0050!addr gpr_b_rel 0E
;*l0051!word!!2 gpr_a_rel 0D
;*l0051!word!!3 gpr_b_rel 0F
;*l0051!word!!4 gpr_a_rel 0D
;*l0051!word!!5 gpr_a_rel 0D
;*l0051!word!!6 gpr_a_rel 0D
;*l0051!word!!7 gpr_a_rel 0D
;*l0051!word!!8 gpr_a_rel 0D
*l0051!word gpr_b_rel 0F
;*l0051!tmp!!2 gpr_a_rel 0D
;*l0051!tmp!!3 gpr_b_rel 0C
;*l0051!tmp!!4 gpr_a_rel 0D
;*l0051!tmp!!5 gpr_a_rel 0D
;*l0051!tmp!!6 gpr_a_rel 0D
;*l0051!tmp!!7 gpr_a_rel 0D
;*l0051!tmp!!8 gpr_b_rel 0C
;*l0051!tmp!!9 gpr_a_rel 0D
;*l0051!tmp!!10 gpr_a_rel 0D
;*l0051!tmp!!11 gpr_a_rel 0D
;*l0051!tmp!!12 gpr_a_rel 0D
;*l0051!tmp!!13 gpr_a_rel 0D
;*l0051!tmp!!14 gpr_b_rel 0C
;*l0051!tmp!!15 gpr_a_rel 0D
;*l0051!tmp!!16 gpr_a_rel 0D
;*l0051!tmp!!17 gpr_a_rel 0D
;*l0051!tmp!!18 gpr_b_rel 0C
;*l0051!tmp!!19 gpr_b_rel 0C
;*l0051!tmp!!20 gpr_b_rel 0C
;*l0051!tmp!!21 gpr_b_rel 0C
*l0051!tmp gpr_b_rel 0C
*l0051!tmp2 gpr_b_rel 0F
*l0051!isl gpr_b_rel 0D
;*l0051!len!!2 gpr_b_rel 0E
;*l0051!len!!3 gpr_a_rel 0F
;*l0051!len!!4 gpr_a_rel 0F
;*l0051!len!!5 gpr_a_rel 0F
;*l0051!len!!6 gpr_a_rel 0F
*l0051!len gpr_b_rel 0E
*l0051!addr_lo gpr_b_rel 0B
;*l0051!pcie_hi_word!!2 gpr_b_rel 0B
;*l0051!pcie_hi_word!!3 gpr_b_rel 0B
;*l0051!pcie_hi_word!!4 gpr_b_rel 0B
;*l0051!pcie_hi_word!!5 gpr_b_rel 0B
*l0051!pcie_hi_word gpr_b_rel 0B
;*l0051!pcie_lo_start!!2 gpr_a_rel 0C
;*l0051!pcie_lo_start!!3 gpr_a_rel 0C
;*l0051!pcie_lo_start!!4 gpr_a_rel 0C
*l0051!pcie_lo_start gpr_a_rel 0C
;*l0051!mu_lo_start!!2 gpr_a_rel 0B
;*l0051!mu_lo_start!!3 gpr_a_rel 0B
;*l0051!mu_lo_start!!4 gpr_b_rel 0C
;*l0051!mu_lo_start!!5 gpr_a_rel 0B
;*l0051!mu_lo_start!!6 gpr_a_rel 0B
*l0051!mu_lo_start gpr_a_rel 0B
*l0051!ctm_bytes gpr_b_rel 0D
*l0051!split_len gpr_b_rel 0E
*l0055!_wsm_mask gpr_b_rel 0F
*l0057!word gpr_b_rel 0C
*l0059!__immed_big_const gpr_b_rel 0E
*l0061!word gpr_b_rel 0F
*l0064!_wsm_mask gpr_b_rel 0D
*l0065!word gpr_b_rel 0D
*l0067!__immed_big_const gpr_b_rel 0E
*l0069!word gpr_b_rel 0F
*l0072!addr gpr_b_rel 0F
*l0073!isl gpr_b_rel 0C
*l0073!qnum gpr_a_rel 0B
*l0073!addr_hi gpr_a_rel 0D
;*l0073!addr_lo!!2 gpr_b_rel 0B
*l0073!addr_lo gpr_b_rel 0B
*l0073!ring_num gpr_a_rel 0E
*l0073!bitmap_lo gpr_b_rel 0E
*l0073!cntr_addr_lo gpr_b_rel 0F
*l0073!seq gpr_b_rel 0B
*$l0073!ticket xfer_rel 00 0 both 1 0x0
*l0074!_wsm_mask gpr_b_rel 0C
;*l0075!tmp_cycle_count!!2 gpr_a_rel 0C
*l0075!tmp_cycle_count gpr_a_rel 0C
*l0075!_ixp_future_count_signal_num gpr_b_rel 0D
*l0076!isl gpr_b_rel 0D
*l0076!qnum gpr_a_rel 0B
*l0076!addr_hi gpr_a_rel 0D
;*l0076!addr_lo!!2 gpr_b_rel 0E
*l0076!addr_lo gpr_b_rel 0E
*l0076!ring_num gpr_a_rel 0E
*l0076!bitmap_lo gpr_b_rel 0F
*l0076!cntr_addr_lo gpr_b_rel 0B
*l0076!seq gpr_b_rel 0C
*$l0076!ticket xfer_rel 00 0 both 1 0x0
*l0077!_wsm_mask gpr_b_rel 0D
;*l0078!tmp_cycle_count!!2 gpr_a_rel 0E
*l0078!tmp_cycle_count gpr_a_rel 0E
*l0078!_ixp_future_count_signal_num gpr_b_rel 0E
*l0079!isl gpr_b_rel 0F
*l0079!qnum gpr_a_rel 0B
*l0079!addr_hi gpr_a_rel 0C
;*l0079!addr_lo!!2 gpr_b_rel 0F
*l0079!addr_lo gpr_b_rel 0F
*l0079!ring_num gpr_a_rel 0C
*l0079!bitmap_lo gpr_b_rel 0B
*l0079!cntr_addr_lo gpr_b_rel 0C
*l0079!seq gpr_b_rel 0D
*$l0079!ticket xfer_rel 00 0 both 1 0x0
*l0080!_wsm_mask gpr_b_rel 0E
;*l0081!tmp_cycle_count!!2 gpr_a_rel 0A
*l0081!tmp_cycle_count gpr_a_rel 0A
*l0081!_ixp_future_count_signal_num gpr_b_rel 0F
;*l0082!word!!2 gpr_a_rel 0C
;*l0082!word!!3 gpr_b_rel 0D
;*l0082!word!!4 gpr_a_rel 0C
;*l0082!word!!5 gpr_a_rel 0C
;*l0082!word!!6 gpr_a_rel 0C
;*l0082!word!!7 gpr_a_rel 0C
;*l0082!word!!8 gpr_a_rel 0C
*l0082!word gpr_b_rel 0D
;*l0082!tmp!!2 gpr_a_rel 0A
;*l0082!tmp!!3 gpr_b_rel 0B
;*l0082!tmp!!4 gpr_a_rel 0A
;*l0082!tmp!!5 gpr_a_rel 0A
;*l0082!tmp!!6 gpr_a_rel 0A
;*l0082!tmp!!7 gpr_a_rel 0A
;*l0082!tmp!!8 gpr_b_rel 0B
;*l0082!tmp!!9 gpr_a_rel 0A
;*l0082!tmp!!10 gpr_a_rel 0A
;*l0082!tmp!!11 gpr_a_rel 0A
;*l0082!tmp!!12 gpr_a_rel 0A
;*l0082!tmp!!13 gpr_a_rel 0A
;*l0082!tmp!!14 gpr_b_rel 0B
;*l0082!tmp!!15 gpr_a_rel 0A
;*l0082!tmp!!16 gpr_a_rel 0A
;*l0082!tmp!!17 gpr_a_rel 0A
;*l0082!tmp!!18 gpr_b_rel 0B
;*l0082!tmp!!19 gpr_b_rel 0B
;*l0082!tmp!!20 gpr_b_rel 0B
;*l0082!tmp!!21 gpr_b_rel 0B
*l0082!tmp gpr_b_rel 0B
*l0082!tmp2 gpr_b_rel 0C
*l0082!isl gpr_b_rel 0C
;*l0082!len!!2 gpr_b_rel 0E
;*l0082!len!!3 gpr_a_rel 0E
;*l0082!len!!4 gpr_a_rel 0E
;*l0082!len!!5 gpr_a_rel 0E
;*l0082!len!!6 gpr_a_rel 0E
*l0082!len gpr_b_rel 0E
*l0082!addr_lo gpr_b_rel 0F
;*l0082!pcie_hi_word!!2 gpr_b_rel 0D
;*l0082!pcie_hi_word!!3 gpr_b_rel 0D
;*l0082!pcie_hi_word!!4 gpr_b_rel 0D
;*l0082!pcie_hi_word!!5 gpr_b_rel 0D
*l0082!pcie_hi_word gpr_b_rel 0D
;*l0082!pcie_lo_start!!2 gpr_a_rel 0D
;*l0082!pcie_lo_start!!3 gpr_a_rel 0D
;*l0082!pcie_lo_start!!4 gpr_a_rel 0D
*l0082!pcie_lo_start gpr_a_rel 0D
;*l0082!mu_lo_start!!2 gpr_a_rel 0C
;*l0082!mu_lo_start!!3 gpr_a_rel 0C
;*l0082!mu_lo_start!!4 gpr_b_rel 0E
;*l0082!mu_lo_start!!5 gpr_a_rel 0C
;*l0082!mu_lo_start!!6 gpr_a_rel 0C
*l0082!mu_lo_start gpr_a_rel 0C
*l0082!ctm_bytes gpr_b_rel 0F
*l0082!split_len gpr_b_rel 0B
*l0086!_wsm_mask gpr_b_rel 0C
*l0088!word gpr_b_rel 0E
*l0090!__immed_big_const gpr_b_rel 0E
*l0092!word gpr_b_rel 0C
*l0095!_wsm_mask gpr_b_rel 0F
*l0096!word gpr_b_rel 0E
*l0098!__immed_big_const gpr_b_rel 0F
*l0100!word gpr_b_rel 0B
*l0103!addr gpr_b_rel 0F
;*l0104!word!!2 gpr_a_rel 0E
;*l0104!word!!3 gpr_b_rel 0C
;*l0104!word!!4 gpr_a_rel 0E
;*l0104!word!!5 gpr_a_rel 0E
;*l0104!word!!6 gpr_a_rel 0E
;*l0104!word!!7 gpr_a_rel 0E
;*l0104!word!!8 gpr_a_rel 0E
*l0104!word gpr_b_rel 0C
;*l0104!tmp!!2 gpr_a_rel 0B
;*l0104!tmp!!3 gpr_b_rel 0D
;*l0104!tmp!!4 gpr_a_rel 0B
;*l0104!tmp!!5 gpr_a_rel 0B
;*l0104!tmp!!6 gpr_a_rel 0B
;*l0104!tmp!!7 gpr_a_rel 0B
;*l0104!tmp!!8 gpr_b_rel 0D
;*l0104!tmp!!9 gpr_a_rel 0B
;*l0104!tmp!!10 gpr_a_rel 0B
;*l0104!tmp!!11 gpr_a_rel 0B
;*l0104!tmp!!12 gpr_a_rel 0B
;*l0104!tmp!!13 gpr_a_rel 0B
;*l0104!tmp!!14 gpr_b_rel 0D
;*l0104!tmp!!15 gpr_a_rel 0B
;*l0104!tmp!!16 gpr_a_rel 0B
;*l0104!tmp!!17 gpr_a_rel 0B
;*l0104!tmp!!18 gpr_b_rel 0D
;*l0104!tmp!!19 gpr_b_rel 0D
;*l0104!tmp!!20 gpr_b_rel 0D
;*l0104!tmp!!21 gpr_b_rel 0D
*l0104!tmp gpr_b_rel 0D
*l0104!tmp2 gpr_b_rel 0B
*l0104!isl gpr_b_rel 0E
;*l0104!len!!2 gpr_b_rel 0E
;*l0104!len!!3 gpr_a_rel 0F
;*l0104!len!!4 gpr_a_rel 0F
;*l0104!len!!5 gpr_a_rel 0F
;*l0104!len!!6 gpr_a_rel 0F
*l0104!len gpr_b_rel 0E
*l0104!addr_lo gpr_b_rel 0F
;*l0104!pcie_hi_word!!2 gpr_b_rel 0C
;*l0104!pcie_hi_word!!3 gpr_b_rel 0C
;*l0104!pcie_hi_word!!4 gpr_b_rel 0C
;*l0104!pcie_hi_word!!5 gpr_b_rel 0C
*l0104!pcie_hi_word gpr_b_rel 0C
;*l0104!pcie_lo_start!!2 gpr_a_rel 09
;*l0104!pcie_lo_start!!3 gpr_a_rel 09
;*l0104!pcie_lo_start!!4 gpr_a_rel 09
*l0104!pcie_lo_start gpr_a_rel 09
;*l0104!mu_lo_start!!2 gpr_a_rel 0D
;*l0104!mu_lo_start!!3 gpr_a_rel 0D
;*l0104!mu_lo_start!!4 gpr_b_rel 0D
;*l0104!mu_lo_start!!5 gpr_a_rel 0D
;*l0104!mu_lo_start!!6 gpr_a_rel 0D
*l0104!mu_lo_start gpr_a_rel 0D
*l0104!ctm_bytes gpr_b_rel 0E
*l0104!split_len gpr_b_rel 0F
*l0108!_wsm_mask gpr_b_rel 0B
*l0110!word gpr_b_rel 0D
*l0112!__immed_big_const gpr_b_rel 0F
*l0114!word gpr_b_rel 0B
*l0117!_wsm_mask gpr_b_rel 0E
*l0118!word gpr_b_rel 0D
*l0120!__immed_big_const gpr_b_rel 0E
*l0122!word gpr_b_rel 0F
*l0125!addr gpr_b_rel 0F
;*l0126!word!!2 gpr_a_rel 0E
;*l0126!word!!3 gpr_b_rel 0E
;*l0126!word!!4 gpr_a_rel 0E
;*l0126!word!!5 gpr_a_rel 0E
;*l0126!word!!6 gpr_a_rel 0E
;*l0126!word!!7 gpr_a_rel 0E
;*l0126!word!!8 gpr_a_rel 0E
*l0126!word gpr_b_rel 0E
;*l0126!tmp!!2 gpr_a_rel 0C
;*l0126!tmp!!3 gpr_b_rel 0C
;*l0126!tmp!!4 gpr_a_rel 0C
;*l0126!tmp!!5 gpr_a_rel 0C
;*l0126!tmp!!6 gpr_a_rel 0C
;*l0126!tmp!!7 gpr_a_rel 0C
;*l0126!tmp!!8 gpr_b_rel 0C
;*l0126!tmp!!9 gpr_a_rel 0C
;*l0126!tmp!!10 gpr_a_rel 0C
;*l0126!tmp!!11 gpr_a_rel 0C
;*l0126!tmp!!12 gpr_a_rel 0C
;*l0126!tmp!!13 gpr_a_rel 0C
;*l0126!tmp!!14 gpr_b_rel 0C
;*l0126!tmp!!15 gpr_a_rel 0C
;*l0126!tmp!!16 gpr_a_rel 0C
;*l0126!tmp!!17 gpr_a_rel 0C
;*l0126!tmp!!18 gpr_b_rel 0C
;*l0126!tmp!!19 gpr_b_rel 0C
;*l0126!tmp!!20 gpr_b_rel 0C
;*l0126!tmp!!21 gpr_b_rel 0C
*l0126!tmp gpr_b_rel 0C
*l0126!tmp2 gpr_b_rel 0F
*l0126!isl gpr_b_rel 0D
;*l0126!len!!2 gpr_b_rel 0F
;*l0126!len!!3 gpr_a_rel 0A
;*l0126!len!!4 gpr_a_rel 0A
;*l0126!len!!5 gpr_a_rel 0A
;*l0126!len!!6 gpr_a_rel 0A
*l0126!len gpr_b_rel 0F
*l0126!addr_lo gpr_b_rel 0B
;*l0126!pcie_hi_word!!2 gpr_b_rel 0B
;*l0126!pcie_hi_word!!3 gpr_b_rel 0B
;*l0126!pcie_hi_word!!4 gpr_b_rel 0B
;*l0126!pcie_hi_word!!5 gpr_b_rel 0B
*l0126!pcie_hi_word gpr_b_rel 0B
;*l0126!pcie_lo_start!!2 gpr_a_rel 09
;*l0126!pcie_lo_start!!3 gpr_a_rel 09
;*l0126!pcie_lo_start!!4 gpr_a_rel 09
*l0126!pcie_lo_start gpr_a_rel 09
;*l0126!mu_lo_start!!2 gpr_a_rel 0E
;*l0126!mu_lo_start!!3 gpr_a_rel 0E
;*l0126!mu_lo_start!!4 gpr_b_rel 0C
;*l0126!mu_lo_start!!5 gpr_a_rel 0E
;*l0126!mu_lo_start!!6 gpr_a_rel 0E
*l0126!mu_lo_start gpr_a_rel 0E
*l0126!ctm_bytes gpr_b_rel 0D
*l0126!split_len gpr_b_rel 0E
*l0130!_wsm_mask gpr_b_rel 0F
*l0132!word gpr_b_rel 0C
*l0134!__immed_big_const gpr_b_rel 0E
*l0136!word gpr_b_rel 0F
*l0139!_wsm_mask gpr_b_rel 0D
*l0140!word gpr_b_rel 0C
*l0142!__immed_big_const gpr_b_rel 0D
*l0144!word gpr_b_rel 0E
*l0147!addr gpr_b_rel 0E
*l0148!isl gpr_b_rel 0F
*l0148!qnum gpr_a_rel 0D
*l0148!addr_hi gpr_a_rel 0E
;*l0148!addr_lo!!2 gpr_b_rel 0B
*l0148!addr_lo gpr_b_rel 0B
*l0148!ring_num gpr_a_rel 0F
*l0148!bitmap_lo gpr_b_rel 0E
*l0148!cntr_addr_lo gpr_b_rel 0F
*l0148!seq gpr_b_rel 0B
*$l0148!ticket xfer_rel 00 0 both 1 0x0
*l0149!_wsm_mask gpr_b_rel 0C
;*l0150!tmp_cycle_count!!2 gpr_a_rel 0F
*l0150!tmp_cycle_count gpr_a_rel 0F
*l0150!_ixp_future_count_signal_num gpr_b_rel 0D
*l0151!isl gpr_b_rel 0C
*l0151!qnum gpr_a_rel 0B
*l0151!addr_hi gpr_a_rel 0D
;*l0151!addr_lo!!2 gpr_b_rel 0E
*l0151!addr_lo gpr_b_rel 0E
*l0151!ring_num gpr_a_rel 09
*l0151!bitmap_lo gpr_b_rel 0F
*l0151!cntr_addr_lo gpr_b_rel 0B
*l0151!seq gpr_b_rel 0C
*$l0151!ticket xfer_rel 00 0 both 1 0x0
*l0152!_wsm_mask gpr_b_rel 0D
;*l0153!tmp_cycle_count!!2 gpr_a_rel 0B
*l0153!tmp_cycle_count gpr_a_rel 0B
*l0153!_ixp_future_count_signal_num gpr_b_rel 0E
*l0154!isl gpr_b_rel 0D
*l0154!qnum gpr_a_rel 0E
*l0154!addr_hi gpr_a_rel 0A
;*l0154!addr_lo!!2 gpr_b_rel 0F
*l0154!addr_lo gpr_b_rel 0F
*l0154!ring_num gpr_a_rel 09
*l0154!bitmap_lo gpr_b_rel 0B
*l0154!cntr_addr_lo gpr_b_rel 0C
*l0154!seq gpr_b_rel 0D
*$l0154!ticket xfer_rel 00 0 both 1 0x0
*l0155!_wsm_mask gpr_b_rel 0E
;*l0156!tmp_cycle_count!!2 gpr_a_rel 0F
*l0156!tmp_cycle_count gpr_a_rel 0F
*l0156!_ixp_future_count_signal_num gpr_b_rel 0F
;*l0157!word!!2 gpr_a_rel 0F
;*l0157!word!!3 gpr_b_rel 0F
;*l0157!word!!4 gpr_a_rel 0F
;*l0157!word!!5 gpr_a_rel 0F
;*l0157!word!!6 gpr_a_rel 0F
;*l0157!word!!7 gpr_a_rel 0F
;*l0157!word!!8 gpr_a_rel 0F
*l0157!word gpr_b_rel 0F
;*l0157!tmp!!2 gpr_a_rel 0E
;*l0157!tmp!!3 gpr_b_rel 0B
;*l0157!tmp!!4 gpr_a_rel 0E
;*l0157!tmp!!5 gpr_a_rel 0E
;*l0157!tmp!!6 gpr_a_rel 0E
;*l0157!tmp!!7 gpr_a_rel 0E
;*l0157!tmp!!8 gpr_b_rel 0B
;*l0157!tmp!!9 gpr_a_rel 0E
;*l0157!tmp!!10 gpr_a_rel 0E
;*l0157!tmp!!11 gpr_a_rel 0E
;*l0157!tmp!!12 gpr_a_rel 0E
;*l0157!tmp!!13 gpr_a_rel 0E
;*l0157!tmp!!14 gpr_b_rel 0B
;*l0157!tmp!!15 gpr_a_rel 0E
;*l0157!tmp!!16 gpr_a_rel 0E
;*l0157!tmp!!17 gpr_a_rel 0E
;*l0157!tmp!!18 gpr_b_rel 0B
;*l0157!tmp!!19 gpr_b_rel 0B
;*l0157!tmp!!20 gpr_b_rel 0B
;*l0157!tmp!!21 gpr_b_rel 0B
*l0157!tmp gpr_b_rel 0B
*l0157!tmp2 gpr_b_rel 0C
*l0157!isl gpr_b_rel 0C
;*l0157!len!!2 gpr_b_rel 0D
;*l0157!len!!3 gpr_a_rel 0B
;*l0157!len!!4 gpr_a_rel 0B
;*l0157!len!!5 gpr_a_rel 0B
;*l0157!len!!6 gpr_a_rel 0B
*l0157!len gpr_b_rel 0D
*l0157!addr_lo gpr_b_rel 0E
;*l0157!pcie_hi_word!!2 gpr_b_rel 0D
;*l0157!pcie_hi_word!!3 gpr_b_rel 0D
;*l0157!pcie_hi_word!!4 gpr_b_rel 0D
;*l0157!pcie_hi_word!!5 gpr_b_rel 0D
*l0157!pcie_hi_word gpr_b_rel 0D
;*l0157!pcie_lo_start!!2 gpr_a_rel 0A
;*l0157!pcie_lo_start!!3 gpr_a_rel 0A
;*l0157!pcie_lo_start!!4 gpr_a_rel 0A
*l0157!pcie_lo_start gpr_a_rel 0A
;*l0157!mu_lo_start!!2 gpr_a_rel 0F
;*l0157!mu_lo_start!!3 gpr_a_rel 0F
;*l0157!mu_lo_start!!4 gpr_b_rel 0E
;*l0157!mu_lo_start!!5 gpr_a_rel 0F
;*l0157!mu_lo_start!!6 gpr_a_rel 0F
*l0157!mu_lo_start gpr_a_rel 0F
*l0157!ctm_bytes gpr_b_rel 0F
*l0157!split_len gpr_b_rel 0B
*l0161!_wsm_mask gpr_b_rel 0C
*l0163!word gpr_b_rel 0E
*l0165!__immed_big_const gpr_b_rel 0E
*l0167!word gpr_b_rel 0F
*l0170!_wsm_mask gpr_b_rel 0F
*l0171!word gpr_b_rel 0B
*l0173!__immed_big_const gpr_b_rel 0C
*l0175!word gpr_b_rel 0E
*l0178!addr gpr_b_rel 0E
;*l0179!word!!2 gpr_a_rel 0A
;*l0179!word!!3 gpr_b_rel 0F
;*l0179!word!!4 gpr_a_rel 0A
;*l0179!word!!5 gpr_a_rel 0A
;*l0179!word!!6 gpr_a_rel 0A
;*l0179!word!!7 gpr_a_rel 0A
;*l0179!word!!8 gpr_a_rel 0A
*l0179!word gpr_b_rel 0F
;*l0179!tmp!!2 gpr_a_rel 0F
;*l0179!tmp!!3 gpr_b_rel 0D
;*l0179!tmp!!4 gpr_a_rel 0F
;*l0179!tmp!!5 gpr_a_rel 0F
;*l0179!tmp!!6 gpr_a_rel 0F
;*l0179!tmp!!7 gpr_a_rel 0F
;*l0179!tmp!!8 gpr_b_rel 0D
;*l0179!tmp!!9 gpr_a_rel 0F
;*l0179!tmp!!10 gpr_a_rel 0F
;*l0179!tmp!!11 gpr_a_rel 0F
;*l0179!tmp!!12 gpr_a_rel 0F
;*l0179!tmp!!13 gpr_a_rel 0F
;*l0179!tmp!!14 gpr_b_rel 0D
;*l0179!tmp!!15 gpr_a_rel 0F
;*l0179!tmp!!16 gpr_a_rel 0F
;*l0179!tmp!!17 gpr_a_rel 0F
;*l0179!tmp!!18 gpr_b_rel 0D
;*l0179!tmp!!19 gpr_b_rel 0D
;*l0179!tmp!!20 gpr_b_rel 0D
;*l0179!tmp!!21 gpr_b_rel 0D
*l0179!tmp gpr_b_rel 0D
*l0179!tmp2 gpr_b_rel 0B
*l0179!isl gpr_b_rel 0F
;*l0179!len!!2 gpr_b_rel 0C
;*l0179!len!!3 gpr_a_rel 0C
;*l0179!len!!4 gpr_a_rel 0C
;*l0179!len!!5 gpr_a_rel 0C
;*l0179!len!!6 gpr_a_rel 0C
*l0179!len gpr_b_rel 0C
*l0179!addr_lo gpr_b_rel 0E
;*l0179!pcie_hi_word!!2 gpr_b_rel 0C
;*l0179!pcie_hi_word!!3 gpr_b_rel 0C
;*l0179!pcie_hi_word!!4 gpr_b_rel 0C
;*l0179!pcie_hi_word!!5 gpr_b_rel 0C
*l0179!pcie_hi_word gpr_b_rel 0C
;*l0179!pcie_lo_start!!2 gpr_a_rel 0D
;*l0179!pcie_lo_start!!3 gpr_a_rel 0D
;*l0179!pcie_lo_start!!4 gpr_a_rel 0D
*l0179!pcie_lo_start gpr_a_rel 0D
;*l0179!mu_lo_start!!2 gpr_a_rel 09
;*l0179!mu_lo_start!!3 gpr_a_rel 09
;*l0179!mu_lo_start!!4 gpr_b_rel 0D
;*l0179!mu_lo_start!!5 gpr_a_rel 09
;*l0179!mu_lo_start!!6 gpr_a_rel 09
*l0179!mu_lo_start gpr_a_rel 09
*l0179!ctm_bytes gpr_b_rel 0E
*l0179!split_len gpr_b_rel 0F
*l0183!_wsm_mask gpr_b_rel 0B
*l0185!word gpr_b_rel 0D
*l0187!__immed_big_const gpr_b_rel 0B
*l0189!word gpr_b_rel 0E
*l0192!_wsm_mask gpr_b_rel 0E
*l0193!word gpr_b_rel 0F
*l0195!__immed_big_const gpr_b_rel 0B
*l0197!word gpr_b_rel 0D
*l0200!addr gpr_b_rel 0E
;*l0201!word!!2 gpr_a_rel 0C
;*l0201!word!!3 gpr_b_rel 0F
;*l0201!word!!4 gpr_a_rel 0C
;*l0201!word!!5 gpr_a_rel 0C
;*l0201!word!!6 gpr_a_rel 0C
;*l0201!word!!7 gpr_a_rel 0C
;*l0201!word!!8 gpr_a_rel 0C
*l0201!word gpr_b_rel 0F
;*l0201!tmp!!2 gpr_a_rel 09
;*l0201!tmp!!3 gpr_b_rel 0C
;*l0201!tmp!!4 gpr_a_rel 09
;*l0201!tmp!!5 gpr_a_rel 09
;*l0201!tmp!!6 gpr_a_rel 09
;*l0201!tmp!!7 gpr_a_rel 09
;*l0201!tmp!!8 gpr_b_rel 0C
;*l0201!tmp!!9 gpr_a_rel 09
;*l0201!tmp!!10 gpr_a_rel 09
;*l0201!tmp!!11 gpr_a_rel 09
;*l0201!tmp!!12 gpr_a_rel 09
;*l0201!tmp!!13 gpr_a_rel 09
;*l0201!tmp!!14 gpr_b_rel 0C
;*l0201!tmp!!15 gpr_a_rel 09
;*l0201!tmp!!16 gpr_a_rel 09
;*l0201!tmp!!17 gpr_a_rel 09
;*l0201!tmp!!18 gpr_b_rel 0C
;*l0201!tmp!!19 gpr_b_rel 0C
;*l0201!tmp!!20 gpr_b_rel 0C
;*l0201!tmp!!21 gpr_b_rel 0C
*l0201!tmp gpr_b_rel 0C
*l0201!tmp2 gpr_b_rel 0F
*l0201!isl gpr_b_rel 0E
;*l0201!len!!2 gpr_b_rel 0B
;*l0201!len!!3 gpr_a_rel 0E
;*l0201!len!!4 gpr_a_rel 0E
;*l0201!len!!5 gpr_a_rel 0E
;*l0201!len!!6 gpr_a_rel 0E
*l0201!len gpr_b_rel 0B
*l0201!addr_lo gpr_b_rel 0E
;*l0201!pcie_hi_word!!2 gpr_b_rel 0B
;*l0201!pcie_hi_word!!3 gpr_b_rel 0B
;*l0201!pcie_hi_word!!4 gpr_b_rel 0B
;*l0201!pcie_hi_word!!5 gpr_b_rel 0B
*l0201!pcie_hi_word gpr_b_rel 0B
;*l0201!pcie_lo_start!!2 gpr_a_rel 0B
;*l0201!pcie_lo_start!!3 gpr_a_rel 0B
;*l0201!pcie_lo_start!!4 gpr_a_rel 0B
*l0201!pcie_lo_start gpr_a_rel 0B
;*l0201!mu_lo_start!!2 gpr_a_rel 0A
;*l0201!mu_lo_start!!3 gpr_a_rel 0A
;*l0201!mu_lo_start!!4 gpr_b_rel 0C
;*l0201!mu_lo_start!!5 gpr_a_rel 0A
;*l0201!mu_lo_start!!6 gpr_a_rel 0A
*l0201!mu_lo_start gpr_a_rel 0A
*l0201!ctm_bytes gpr_b_rel 0D
*l0201!split_len gpr_b_rel 0E
*l0205!_wsm_mask gpr_b_rel 0F
*l0207!word gpr_b_rel 0C
*l0209!__immed_big_const gpr_b_rel 0F
*l0211!word gpr_b_rel 0D
*l0214!_wsm_mask gpr_b_rel 0D
*l0215!word gpr_b_rel 0E
*l0217!__immed_big_const gpr_b_rel 0F
*l0219!word gpr_b_rel 0C
*l0222!addr gpr_b_rel 0E
*l0223!isl gpr_b_rel 0D
*l0223!qnum gpr_a_rel 0B
*l0223!addr_hi gpr_a_rel 0C
;*l0223!addr_lo!!2 gpr_b_rel 0B
*l0223!addr_lo gpr_b_rel 0B
*l0223!ring_num gpr_a_rel 0B
*l0223!bitmap_lo gpr_b_rel 0E
*l0223!cntr_addr_lo gpr_b_rel 0F
*l0223!seq gpr_b_rel 0B
*$l0223!ticket xfer_rel 00 0 both 1 0x0
*l0224!_wsm_mask gpr_b_rel 0C
;*l0225!tmp_cycle_count!!2 gpr_a_rel 0B
*l0225!tmp_cycle_count gpr_a_rel 0B
*l0225!_ixp_future_count_signal_num gpr_b_rel 0D
*l0226!isl gpr_b_rel 0E
*l0226!qnum gpr_a_rel 0D
*l0226!addr_hi gpr_a_rel 0A
;*l0226!addr_lo!!2 gpr_b_rel 0E
*l0226!addr_lo gpr_b_rel 0E
*l0226!ring_num gpr_a_rel 0D
*l0226!bitmap_lo gpr_b_rel 0F
*l0226!cntr_addr_lo gpr_b_rel 0B
*l0226!seq gpr_b_rel 0C
*$l0226!ticket xfer_rel 00 0 both 1 0x0
*l0227!_wsm_mask gpr_b_rel 0D
;*l0228!tmp_cycle_count!!2 gpr_a_rel 09
*l0228!tmp_cycle_count gpr_a_rel 09
*l0228!_ixp_future_count_signal_num gpr_b_rel 0E
*l0229!isl gpr_b_rel 0F
*l0229!qnum gpr_a_rel 0B
*l0229!addr_hi gpr_a_rel 0C
;*l0229!addr_lo!!2 gpr_b_rel 0F
*l0229!addr_lo gpr_b_rel 0F
*l0229!ring_num gpr_a_rel 0D
*l0229!bitmap_lo gpr_b_rel 0B
*l0229!cntr_addr_lo gpr_b_rel 0C
*l0229!seq gpr_b_rel 0D
*$l0229!ticket xfer_rel 00 0 both 1 0x0
*l0230!_wsm_mask gpr_b_rel 0E
;*l0231!tmp_cycle_count!!2 gpr_a_rel 0A
*l0231!tmp_cycle_count gpr_a_rel 0A
*l0231!_ixp_future_count_signal_num gpr_b_rel 0F
*l0231!_ixp_future_count_signal_name signal 07 0
*l0229!ticket_sig signal 08 0
*l0229!ticket_sig!!2 signal 08 0
*l0228!_ixp_future_count_signal_name signal 07 0
*l0226!ticket_sig signal 08 0
*l0226!ticket_sig!!2 signal 08 0
*l0225!_ixp_future_count_signal_name signal 07 0
*l0223!ticket_sig signal 08 0
*l0223!ticket_sig!!2 signal 08 0
*l0156!_ixp_future_count_signal_name signal 07 0
*l0154!ticket_sig signal 08 0
*l0154!ticket_sig!!2 signal 08 0
*l0153!_ixp_future_count_signal_name signal 07 0
*l0151!ticket_sig signal 08 0
*l0151!ticket_sig!!2 signal 08 0
*l0150!_ixp_future_count_signal_name signal 07 0
*l0148!ticket_sig signal 08 0
*l0148!ticket_sig!!2 signal 08 0
*l0081!_ixp_future_count_signal_name signal 07 0
*l0079!ticket_sig signal 08 0
*l0079!ticket_sig!!2 signal 08 0
*l0078!_ixp_future_count_signal_name signal 07 0
*l0076!ticket_sig signal 08 0
*l0076!ticket_sig!!2 signal 08 0
*l0075!_ixp_future_count_signal_name signal 07 0
*l0073!ticket_sig signal 08 0
*l0073!ticket_sig!!2 signal 08 0
*l0000!dma_sig2 signal 06 0
*l0000!work_sig2 signal 05 0
*l0000!dma_sig1 signal 04 0
*l0000!work_sig1 signal 03 0
*l0000!dma_sig0 signal 02 0
*l0000!work_sig0 signal 01 0
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 110 emem0_queues global 0x400
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 121 emem1_queues global 0x400
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 162 cls_rings island 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 181 cls_apsignals island 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 197 cls_apfilters island 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 366 pcie0_cpp2pcie_bars global 0x8
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 367 pcie0_dma_cfg_regs global 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 369 pcie0_topci_hi global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 370 pcie0_topci_med global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 371 pcie0_topci_lo global 0x80
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 372 pcie0_frompci_hi global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 373 pcie0_frompci_med global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 374 pcie0_frompci_lo global 0x80
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 378 pcie1_cpp2pcie_bars global 0x8
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 379 pcie1_dma_cfg_regs global 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 381 pcie1_topci_hi global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 382 pcie1_topci_med global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 383 pcie1_topci_lo global 0x80
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 384 pcie1_frompci_hi global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 385 pcie1_frompci_med global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 386 pcie1_frompci_lo global 0x80
.%declare_resource "/opt/netronome/components/flowenv/me/blocks/blm/_h/blm_uc.h" 169 BLQ_EMU_RINGS global 0x4 0x4 emem0_queues
.%alloc_resource "/opt/netronome/components/flowenv/me/blocks/blm/_h/blm_uc.h" 171 BLM_NBI8_BLQ0_EMU_QID BLQ_EMU_RINGS global 0x1 0 0
.%alloc_resource "/opt/netronome/components/flowenv/me/blocks/blm/_h/blm_uc.h" 172 BLM_NBI8_BLQ1_EMU_QID BLQ_EMU_RINGS global 0x1 0 0x1
.%alloc_resource "/opt/netronome/components/flowenv/me/blocks/blm/_h/blm_uc.h" 173 BLM_NBI8_BLQ2_EMU_QID BLQ_EMU_RINGS global 0x1 0 0x2
.%alloc_resource "/opt/netronome/components/flowenv/me/blocks/blm/_h/blm_uc.h" 174 BLM_NBI8_BLQ3_EMU_QID BLQ_EMU_RINGS global 0x1 0 0x3
.%alloc_mem _BLM_NBI8_BLQ0_EMU_QD_BASE i24.emem global 0x10 0x10 addr40
.%alloc_mem _BLM_NBI8_BLQ1_EMU_QD_BASE i24.emem global 0x10 0x10 addr40
.%alloc_mem _BLM_NBI8_BLQ2_EMU_QD_BASE i24.emem global 0x10 0x10 addr40
.%alloc_mem _BLM_NBI8_BLQ3_EMU_QD_BASE i24.emem global 0x10 0x10 addr40
.%alloc_mem _BLM_NBI8_BLQ0_EMU_Q_BASE i24.emem global 0x8000 0x8000 addr40
.%alloc_mem _BLM_NBI8_BLQ1_EMU_Q_BASE i24.emem global 0x800 0x800 addr40
.%alloc_mem _BLM_NBI8_BLQ2_EMU_Q_BASE i24.emem global 0x800 0x800 addr40
.%alloc_mem _BLM_NBI8_BLQ3_EMU_Q_BASE i24.emem global 0x800 0x800 addr40
.%alloc_mem _BLM_NBI8_BLQ0_EMU_EMEM0_BUFS_BASE emem0 global 0x2800000 0x800 addr40
.%alloc_mem _BLM_NBI8_BLQ0_BDSRAM_EMEM0_BUFS_BASE emem0 global 0xA00000 0x800 addr40
.%alloc_mem _BLM_NBI9_BLQ0_BDSRAM_EMEM0_BUFS_BASE emem0 global 0xA00000 0x800 addr40
.%alloc_mem nfd_cfg_base0 emem0 global 0x200000 0x200000 addr40
.%alloc_mem nfd_out_atomics0 i4.ctm global 0x400 0x0 0x0 addr40
.%alloc_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 293 nfd_out_data_dma pcie0_topci_lo me 0x30 0
.%alloc_mem nfd_out_sb_release0 ctm island 0x400 0x400 addr40
.%alloc_mem nfd_out_sb_wq_credits0 ctm island 0x4 0x4 addr40
.%alloc_mem nfd_out_sb_wq_mem0 cls island 0x1000 0x1000 addr40
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb_iface.uc" 65 nfd_out_sb_ring_num0 cls_rings island 0x1 0x1 0xf
.%init_reg @B10 64
.%type R
.%type SI
.%scope global
.%var l0231!_ixp_future_count_signal_num 0 R
.%liverange 0 B15 1941:1948
.%liverange 0 ~B15 222:237 242:252 323:338 376:382 390:405 419:427 500:534 553:559 567:571 576:587 611:614 646:646 1929:1940 1949:1949
.%var l0231!tmp_cycle_count 0 R
.%liverange 0 A10 1943:1948
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:326 377:674 681:703 834:839 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%var l0230!_wsm_mask 0 R
.%liverange 0 B14 1938:1948
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var $l0229!ticket 0 R
.%liverange 0 $W0 1919:1948
.%liverange 0 ~$W0 222:580 611:615 646:650 1949:1949
.%liverange 0 $R0 1923:1948
.%liverange 0 ~$R0 222:584 611:619 646:654 1949:1949
.%var l0229!seq 0 R
.%liverange 0 B13 1939:1948
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 1929:1938 1949:1949
.%var l0229!cntr_addr_lo 0 R
.%liverange 0 B12 1926:1948
.%liverange 0 ~B12 222:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%var l0229!bitmap_lo 0 R
.%liverange 0 B11 1918:1948
.%liverange 0 ~B11 222:250 323:357 376:382 390:420 554:559 567:567 576:582 584:585 611:622 646:649 1949:1949
.%var l0229!ring_num 0 R
.%liverange 0 A13 1927:1948
.%liverange 0 ~A13 222:248 377:382 390:407 419:423 554:559 567:581 584:616 619:699 834:839 847:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0229!addr_lo 0 R
.%liverange 0 B15 1921:1921 1924:1928
.%liverange 0 ~B15 222:237 242:252 323:338 376:382 390:405 419:427 500:534 553:559 567:571 576:587 611:614 646:646 1922:1923 1929:1940 1949:1949
.%var l0229!addr_hi 0 R
.%liverange 0 A12 1920:1921
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:783 834:839 847:1057 1188:1193 1201:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0229!qnum 0 R
.%liverange 0 A11 1917:1948
.%liverange 0 ~A11 222:230 242:257 323:382 390:445 500:503 554:578 611:613 646:648 1949:1949
.%var l0229!isl 0 R
.%liverange 0 B15 1915:1920
.%liverange 0 ~B15 1922:1923
.%var l0228!_ixp_future_count_signal_num 0 R
.%liverange 0 B14 1906:1913
.%liverange 0 ~B14 47:94 146:146 200:213 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1894:1905 1914:1937 1949:1949
.%var l0228!tmp_cycle_count 0 R
.%liverange 0 A9 1908:1913
.%liverange 0 ~A9 47:91 146:149 200:246 377:382 390:876 1011:1016 1024:1053 1188:1193 1201:1257 1280:1292 1667:1691 1822:1827 1835:1878 1894:1907 1914:1949
.%var l0227!_wsm_mask 0 R
.%liverange 0 B13 1903:1913
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 1894:1902 1949:1949
.%var $l0226!ticket 0 R
.%liverange 0 $W0 1884:1913
.%liverange 0 ~$W0 47:580 611:615 646:650 1949:1949
.%liverange 0 $R0 1888:1913
.%liverange 0 ~$R0 47:584 611:619 646:654 1949:1949
.%var l0226!seq 0 R
.%liverange 0 B12 1904:1913
.%liverange 0 ~B12 47:60 65:73 146:180 199:205 213:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1894:1903 1949:1949
.%var l0226!cntr_addr_lo 0 R
.%liverange 0 B11 1891:1913
.%liverange 0 ~B11 47:58 65:67 200:201 213:221
.%var l0226!bitmap_lo 0 R
.%liverange 0 B15 1883:1913
.%liverange 0 ~B15 47:78 146:147 200:205 213:217 222:237 242:252 323:338 376:382 390:405 419:427 500:534 553:559 567:571 576:587 611:614 646:646 1949:1949
.%var l0226!ring_num 0 R
.%liverange 0 A13 1892:1913
.%liverange 0 ~A13 47:248 377:382 390:407 419:423 554:559 567:581 584:616 619:699 834:839 847:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0226!addr_lo 0 R
.%liverange 0 B14 1886:1886 1889:1893
.%liverange 0 ~B14 47:94 146:146 200:213 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1887:1888 1894:1905 1914:1937 1949:1949
.%var l0226!addr_hi 0 R
.%liverange 0 A10 1885:1886
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:326 377:674 681:703 834:839 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%var l0226!qnum 0 R
.%liverange 0 A13 1882:1891
.%var l0226!isl 0 R
.%liverange 0 B14 1880:1885
.%liverange 0 ~B14 1887:1888
.%var l0225!_ixp_future_count_signal_num 0 R
.%liverange 0 B13 1871:1878
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:421 554:559 567:602 611:611 646:670 856:869 876:883 957:957 1011:1012 1024:1055 1188:1193 1201:1236 1245:1268 1280:1280 1315:1328 1333:1334 1468:1473 1481:1503 1510:1517 1591:1591 1645:1646 1658:1700 1768:1769 1822:1827 1835:1844 1859:1870 1879:1902 1914:1938 1949:1949
.%var l0225!tmp_cycle_count 0 R
.%liverange 0 A11 1873:1878
.%liverange 0 ~A11 399:445 500:503 554:578 646:648 1859:1872 1949:1949
.%var l0224!_wsm_mask 0 R
.%liverange 0 B12 1868:1878
.%liverange 0 ~B12 399:412 419:426 500:500 554:555 567:575 646:657 1859:1867 1949:1949
.%var $l0223!ticket 0 R
.%liverange 0 $W0 1849:1878
.%liverange 0 ~$W0 399:580 646:650 1949:1949
.%liverange 0 $R0 1853:1878
.%liverange 0 ~$R0 399:584 646:654 1949:1949
.%var l0223!seq 0 R
.%liverange 0 B11 1869:1878
.%liverange 0 ~B11 399:420 554:559 567:567 576:582 584:585 646:649 1859:1868 1949:1949
.%var l0223!cntr_addr_lo 0 R
.%liverange 0 B15 1856:1878
.%liverange 0 ~B15 399:405 419:427 500:534 553:559 567:571 576:587 646:646 1949:1949
.%var l0223!bitmap_lo 0 R
.%liverange 0 B14 1848:1878
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0223!ring_num 0 R
.%liverange 0 A11 1857:1858
.%liverange 0 ~A11 399:445 500:503 554:578 646:648 1859:1872 1949:1949
.%var l0223!addr_lo 0 R
.%liverange 0 B11 1851:1851 1854:1858
.%liverange 0 ~B11 399:420 554:559 567:567 576:582 584:585 646:649 1852:1853 1859:1868 1949:1949
.%var l0223!addr_hi 0 R
.%liverange 0 A12 1850:1851
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:783 834:839 847:1057 1188:1193 1201:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0223!qnum 0 R
.%liverange 0 A11 1847:1856
.%var l0223!isl 0 R
.%liverange 0 B13 1845:1858
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:421 554:559 567:602 611:611 646:670 856:869 876:883 957:957 1011:1012 1024:1055 1188:1193 1201:1236 1245:1268 1280:1280 1315:1328 1333:1334 1468:1473 1481:1503 1510:1517 1591:1591 1645:1646 1658:1700 1768:1769 1822:1827 1835:1844 1859:1870 1879:1902 1914:1938 1949:1949
.%var l0222!addr 0 R
.%liverange 0 B14 1840:1843
.%liverange 0 ~B14 1671:1689 1822:1827 1844:1847
.%var l0219!word 0 R
.%liverange 0 B12 1803:1820
.%liverange 0 ~B12 399:412 419:426 500:500 554:555 567:575 646:657 1800:1802 1821:1821 1844:1867 1949:1949
.%var l0217!__immed_big_const 0 R
.%liverange 0 B15 1784:1820
.%liverange 0 ~B15 1821:1821 1844:1855
.%var l0215!word 0 R
.%liverange 0 B14 1774:1821
.%liverange 0 ~B14 1844:1847
.%var l0214!_wsm_mask 0 R
.%liverange 0 B13 1770:1821
.%liverange 0 ~B13 1844:1844
.%var l0211!word 0 R
.%liverange 0 B13 1749:1766
.%liverange 0 ~B13 1746:1748 1767:1767 1844:1844
.%var l0209!__immed_big_const 0 R
.%liverange 0 B15 1730:1766
.%liverange 0 ~B15 1767:1767 1844:1855
.%var l0207!word 0 R
.%liverange 0 B12 1717:1731 1739:1767
.%liverange 0 ~B12 399:412 419:426 500:500 554:555 567:575 646:657 1732:1732 1844:1867 1949:1949
.%var l0205!_wsm_mask 0 R
.%liverange 0 B15 1699:1729 1828:1834
.%liverange 0 ~B15 1767:1783 1821:1821 1844:1855
.%var l0201!split_len 0 R
.%liverange 0 B14 1698:1767 1828:1834
.%liverange 0 ~B14 1768:1773 1844:1847
.%var l0201!ctm_bytes 0 R
.%liverange 0 B13 1701:1745 1828:1834
.%liverange 0 ~B13 1746:1748 1767:1769 1844:1844
.%var l0201!mu_lo_start 0 R
.%liverange 0 A10 1714:1767 1772:1821
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:326 377:674 681:703 834:839 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1768 1822:1884 1887:1942 1949:1949
.%liverange 0 B12 1769:1771
.%var l0201!pcie_lo_start 0 R
.%liverange 0 A11 1688:1821 1828:1834
.%liverange 0 ~A11 1844:1846
.%var l0201!pcie_hi_word 0 R
.%liverange 0 B11 1689:1821 1828:1834
.%liverange 0 ~B11 1844:1850 1852:1853
.%var l0201!addr_lo 0 R
.%liverange 0 B14 1836:1839
.%var l0201!len 0 R
.%liverange 0 B11 1683:1686
.%liverange 0 ~B11 1844:1850 1852:1853
.%liverange 0 A14 1694:1821 1828:1834
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:864 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1682 1687:1693 1822:1827 1835:1949
.%var l0201!isl 0 R
.%liverange 0 B14 1690:1697
.%liverange 0 ~B14 1768:1773
.%var l0201!tmp2 0 R
.%liverange 0 B15 1696:1698
.%var l0201!tmp 0 R
.%liverange 0 B12 1681:1686 1695:1699 1733:1738 1787:1792 1824:1827 1829:1834
.%liverange 0 ~B12 399:412 419:426 500:500 554:555 567:575 646:657 1732:1732 1786:1786 1828:1828 1844:1867 1949:1949
.%liverange 0 A9 1692:1694 1700:1731 1739:1785 1793:1821
.%liverange 0 ~A9 222:246 377:382 390:876 1011:1016 1024:1053 1188:1193 1201:1257 1280:1292 1667:1680 1687:1691 1732:1732 1786:1786 1822:1823 1828:1828 1835:1878 1914:1949
.%var l0201!word 0 R
.%liverange 0 B15 1674:1675 1677:1679
.%liverange 0 A12 1676:1676 1680:1686 1703:1767 1828:1834
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:783 834:839 847:1057 1188:1193 1201:1516 1645:1650 1658:1673 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0200!addr 0 R
.%liverange 0 B14 1663:1666
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0197!word 0 R
.%liverange 0 B13 1626:1643
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 1623:1625 1644:1644 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0195!__immed_big_const 0 R
.%liverange 0 B11 1607:1643
.%liverange 0 ~B11 1644:1644 1667:1682 1687:1688 1822:1827 1835:1850 1852:1853 1914:1917 1949:1949
.%var l0193!word 0 R
.%liverange 0 B15 1597:1644
.%liverange 0 ~B15 1667:1673 1687:1695 1768:1783 1821:1827 1835:1855 1914:1914 1949:1949
.%var l0192!_wsm_mask 0 R
.%liverange 0 B14 1593:1644
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0189!word 0 R
.%liverange 0 B14 1572:1589
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1569:1571 1590:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0187!__immed_big_const 0 R
.%liverange 0 B11 1553:1589
.%liverange 0 ~B11 1590:1590 1667:1682 1687:1688 1822:1827 1835:1850 1852:1853 1914:1917 1949:1949
.%var l0185!word 0 R
.%liverange 0 B13 1540:1554 1562:1590
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 1555:1555 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0183!_wsm_mask 0 R
.%liverange 0 B11 1522:1552 1651:1657
.%liverange 0 ~B11 1590:1606 1644:1644 1667:1682 1687:1688 1822:1827 1835:1850 1852:1853 1914:1917 1949:1949
.%var l0179!split_len 0 R
.%liverange 0 B15 1521:1590 1651:1657
.%liverange 0 ~B15 1591:1596 1667:1673 1687:1695 1768:1783 1821:1827 1835:1855 1914:1914 1949:1949
.%var l0179!ctm_bytes 0 R
.%liverange 0 B14 1524:1568 1651:1657
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1569:1571 1590:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0179!mu_lo_start 0 R
.%liverange 0 A9 1537:1590 1595:1644
.%liverange 0 ~A9 222:246 377:382 390:876 1011:1016 1024:1053 1188:1193 1201:1257 1280:1292 1667:1691 1822:1827 1835:1878 1914:1949
.%liverange 0 B13 1592:1594
.%var l0179!pcie_lo_start 0 R
.%liverange 0 A13 1511:1644 1651:1657
.%liverange 0 ~A13 399:407 419:423 554:559 567:581 584:610 646:680 856:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0179!pcie_hi_word 0 R
.%liverange 0 B12 1512:1644 1651:1657
.%liverange 0 ~B12 1667:1680 1687:1694 1768:1768 1822:1823 1835:1843 1914:1925 1949:1949
.%var l0179!addr_lo 0 R
.%liverange 0 B14 1659:1662
.%var l0179!len 0 R
.%liverange 0 B12 1506:1509
.%liverange 0 ~B12 1667:1680 1687:1694 1768:1768 1822:1823 1835:1843 1914:1925 1949:1949
.%liverange 0 A12 1517:1644 1651:1657
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:783 834:839 847:1057 1188:1193 1201:1505 1510:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0179!isl 0 R
.%liverange 0 B15 1513:1520
.%liverange 0 ~B15 1591:1596
.%var l0179!tmp2 0 R
.%liverange 0 B11 1519:1521
.%var l0179!tmp 0 R
.%liverange 0 B13 1504:1509 1518:1522 1556:1561 1610:1615 1647:1650 1652:1657
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 1555:1555 1609:1609 1651:1651 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%liverange 0 A15 1515:1517 1523:1554 1562:1608 1616:1644
.%liverange 0 ~A15 47:69 200:205 213:425 554:559 567:882 1011:1016 1024:1222 1245:1308 1315:1321 1333:1348 1414:1417 1468:1473 1481:1503 1510:1514 1555:1555 1609:1609 1645:1646 1651:1651 1658:1949
.%var l0179!word 0 R
.%liverange 0 B15 1497:1498 1500:1502
.%liverange 0 A10 1499:1499 1503:1509 1526:1590 1651:1657
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:326 377:674 681:703 834:839 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1496 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%var l0178!addr 0 R
.%liverange 0 B14 1486:1489
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1317:1362 1414:1414 1468:1480 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0175!word 0 R
.%liverange 0 B14 1449:1466
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1446:1448 1467:1467 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0173!__immed_big_const 0 R
.%liverange 0 B12 1430:1466
.%liverange 0 ~B12 47:60 65:73 146:180 199:205 213:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1467:1467 1490:1505 1510:1511 1645:1650 1658:1680 1687:1694 1768:1768 1822:1823 1835:1843 1879:1903 1914:1925 1949:1949
.%var l0171!word 0 R
.%liverange 0 B11 1420:1431 1439:1467
.%liverange 0 ~B11 1432:1432 1490:1518 1591:1606 1644:1650 1658:1682 1687:1688 1822:1827 1835:1850 1852:1853 1879:1890 1914:1917 1949:1949
.%var l0170!_wsm_mask 0 R
.%liverange 0 B15 1416:1467
.%liverange 0 ~B15 1490:1496 1510:1512 1645:1650 1658:1673 1687:1695 1768:1783 1821:1827 1835:1855 1879:1882 1914:1914 1949:1949
.%var l0167!word 0 R
.%liverange 0 B15 1395:1412
.%liverange 0 ~B15 1392:1394 1413:1413 1490:1496 1510:1512 1645:1650 1658:1673 1687:1695 1768:1783 1821:1827 1835:1855 1879:1882 1914:1914 1949:1949
.%var l0165!__immed_big_const 0 R
.%liverange 0 B14 1376:1412
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1413:1413 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0163!word 0 R
.%liverange 0 B14 1363:1375
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1413:1413 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0161!_wsm_mask 0 R
.%liverange 0 B12 1345:1413 1474:1480
.%liverange 0 ~B12 47:60 65:73 146:180 199:205 213:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1414:1429 1467:1467 1490:1505 1510:1511 1645:1650 1658:1680 1687:1694 1768:1768 1822:1823 1835:1843 1879:1903 1914:1925 1949:1949
.%var l0157!split_len 0 R
.%liverange 0 B11 1344:1377 1385:1413
.%liverange 0 ~B11 1378:1378 1414:1419 1474:1474 1490:1518 1591:1606 1644:1650 1658:1682 1687:1688 1822:1827 1835:1850 1852:1853 1879:1890 1914:1917 1949:1949
.%var l0157!ctm_bytes 0 R
.%liverange 0 B15 1347:1391 1474:1480
.%liverange 0 ~B15 1392:1394 1413:1415 1490:1496 1510:1512 1645:1650 1658:1673 1687:1695 1768:1783 1821:1827 1835:1855 1879:1882 1914:1914 1949:1949
.%var l0157!mu_lo_start 0 R
.%liverange 0 A15 1360:1413 1418:1467
.%liverange 0 ~A15 47:69 200:205 213:425 554:559 567:882 1011:1016 1024:1222 1245:1308 1315:1321 1333:1348 1414:1414 1468:1473 1481:1514 1645:1650 1658:1949
.%liverange 0 B14 1415:1417
.%var l0157!pcie_lo_start 0 R
.%liverange 0 A10 1334:1467 1474:1480
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:326 377:674 681:703 834:839 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%var l0157!pcie_hi_word 0 R
.%liverange 0 B13 1335:1467 1474:1480
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 1490:1503 1510:1517 1591:1591 1645:1646 1658:1666 1879:1902 1949:1949
.%var l0157!addr_lo 0 R
.%liverange 0 B14 1482:1485
.%var l0157!len 0 R
.%liverange 0 B13 1329:1332
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 1490:1503 1510:1517 1591:1591 1645:1646 1658:1666 1879:1902 1949:1949
.%liverange 0 A11 1340:1467 1474:1480
.%liverange 0 ~A11 47:71 200:205 213:230 242:257 323:382 390:445 500:503 554:578 611:613 646:648 1490:1687 1822:1827 1835:1846 1879:1916 1949:1949
.%var l0157!isl 0 R
.%liverange 0 B12 1336:1341
.%liverange 0 ~B12 47:60 65:73 146:180 199:205 213:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1414:1429 1467:1467 1490:1505 1510:1511 1645:1650 1658:1680 1687:1694 1768:1768 1822:1823 1835:1843 1879:1903 1914:1925 1949:1949
.%var l0157!tmp2 0 R
.%liverange 0 B12 1342:1344
.%var l0157!tmp 0 R
.%liverange 0 B11 1327:1332 1341:1343 1379:1384 1433:1438 1470:1473 1475:1480
.%liverange 0 ~B11 1378:1378 1432:1432 1474:1474 1490:1518 1591:1606 1644:1650 1658:1682 1687:1688 1822:1827 1835:1850 1852:1853 1879:1890 1914:1917 1949:1949
.%liverange 0 A14 1338:1340 1346:1377 1385:1431 1439:1467
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:864 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1326 1333:1337 1378:1378 1432:1432 1468:1469 1474:1474 1481:1693 1822:1827 1835:1949
.%var l0157!word 0 R
.%liverange 0 B15 1320:1321 1323:1325
.%liverange 0 A15 1322:1322 1326:1332 1349:1359 1474:1480
.%liverange 0 ~A15 47:69 200:205 213:425 554:559 567:882 1011:1016 1024:1222 1245:1308 1315:1319 1333:1348 1414:1417 1468:1473 1481:1514 1645:1650 1658:1949
.%var l0156!_ixp_future_count_signal_num 0 R
.%liverange 0 B15 1307:1314
.%liverange 0 ~B15 1295:1306 1490:1496 1510:1512 1645:1650 1658:1673 1687:1695 1768:1783 1821:1827 1835:1855 1879:1882 1914:1914 1949:1949
.%var l0156!tmp_cycle_count 0 R
.%liverange 0 A15 1309:1314
.%liverange 0 ~A15 47:69 200:205 213:425 554:559 567:882 1011:1016 1024:1222 1245:1308 1315:1321 1333:1348 1414:1417 1468:1473 1481:1514 1645:1650 1658:1949
.%var l0155!_wsm_mask 0 R
.%liverange 0 B14 1304:1314
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var $l0154!ticket 0 R
.%liverange 0 $W0 1285:1314
.%liverange 0 ~$W0 1490:1848 1879:1883 1914:1918 1949:1949
.%liverange 0 $R0 1289:1314
.%liverange 0 ~$R0 1490:1852 1879:1887 1914:1922 1949:1949
.%var l0154!seq 0 R
.%liverange 0 B13 1305:1314
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 1295:1304 1490:1503 1510:1517 1591:1591 1645:1646 1658:1666 1879:1902 1949:1949
.%var l0154!cntr_addr_lo 0 R
.%liverange 0 B12 1292:1314
.%liverange 0 ~B12 47:60 65:73 146:180 199:205 213:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1490:1505 1510:1511 1645:1650 1658:1680 1687:1694 1768:1768 1822:1823 1835:1843 1879:1903 1914:1925 1949:1949
.%var l0154!bitmap_lo 0 R
.%liverange 0 B11 1284:1314
.%liverange 0 ~B11 1490:1518 1591:1606 1644:1650 1658:1682 1687:1688 1822:1827 1835:1850 1852:1853 1879:1890 1914:1917 1949:1949
.%var l0154!ring_num 0 R
.%liverange 0 A9 1293:1314
.%liverange 0 ~A9 47:91 146:149 200:246 377:382 390:876 1011:1016 1024:1053 1188:1193 1201:1257 1280:1292 1490:1536 1591:1594 1645:1691 1822:1827 1835:1907 1914:1949
.%var l0154!addr_lo 0 R
.%liverange 0 B15 1287:1287 1290:1294
.%liverange 0 ~B15 1288:1289 1295:1306 1490:1496 1510:1512 1645:1650 1658:1673 1687:1695 1768:1783 1821:1827 1835:1855 1879:1882 1914:1914 1949:1949
.%var l0154!addr_hi 0 R
.%liverange 0 A10 1286:1287
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:326 377:674 681:703 834:839 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%var l0154!qnum 0 R
.%liverange 0 A14 1283:1314
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:864 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%var l0154!isl 0 R
.%liverange 0 B13 1281:1294
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 1295:1304 1490:1503 1510:1517 1591:1591 1645:1646 1658:1666 1879:1902 1949:1949
.%var l0153!_ixp_future_count_signal_num 0 R
.%liverange 0 B14 1272:1279
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1260:1271 1280:1303 1315:1362 1414:1414 1468:1481 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0153!tmp_cycle_count 0 R
.%liverange 0 A11 1274:1279
.%liverange 0 ~A11 47:71 200:205 213:230 242:257 323:382 390:445 500:503 554:578 611:613 646:648 1260:1273 1315:1339 1468:1473 1481:1687 1822:1827 1835:1846 1879:1916 1949:1949
.%var l0152!_wsm_mask 0 R
.%liverange 0 B13 1269:1279
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 1260:1268 1315:1328 1333:1334 1468:1473 1481:1503 1510:1517 1591:1591 1645:1646 1658:1666 1879:1902 1949:1949
.%var $l0151!ticket 0 R
.%liverange 0 $W0 1250:1279 1315:1489
.%liverange 0 ~$W0 1490:1848 1879:1883 1914:1918 1949:1949
.%liverange 0 $R0 1254:1279 1315:1489
.%liverange 0 ~$R0 1490:1852 1879:1887 1914:1922 1949:1949
.%var l0151!seq 0 R
.%liverange 0 B12 1270:1279
.%liverange 0 ~B12 47:60 65:73 146:180 199:205 213:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1260:1269 1280:1291 1315:1335 1468:1473 1481:1505 1510:1511 1645:1650 1658:1680 1687:1694 1768:1768 1822:1823 1835:1843 1879:1903 1914:1925 1949:1949
.%var l0151!cntr_addr_lo 0 R
.%liverange 0 B11 1257:1279 1315:1326 1333:1340 1468:1469 1481:1489
.%liverange 0 ~B11 1414:1419
.%var l0151!bitmap_lo 0 R
.%liverange 0 B15 1249:1279 1315:1319 1333:1346 1468:1473 1481:1489
.%liverange 0 ~B15 1414:1415 1490:1496 1510:1512 1645:1650 1658:1673 1687:1695 1768:1783 1821:1827 1835:1855 1879:1882 1914:1914 1949:1949
.%var l0151!ring_num 0 R
.%liverange 0 A9 1258:1279 1315:1489
.%liverange 0 ~A9 47:91 146:149 200:246 377:382 390:876 1011:1016 1024:1053 1188:1193 1201:1257 1280:1292 1490:1536 1591:1594 1645:1691 1822:1827 1835:1907 1914:1949
.%var l0151!addr_lo 0 R
.%liverange 0 B14 1252:1252 1255:1259
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1260:1271 1280:1303 1315:1362 1414:1414 1468:1481 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0151!addr_hi 0 R
.%liverange 0 A13 1251:1252
.%liverange 0 ~A13 399:407 419:423 554:559 567:581 584:610 646:680 856:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0151!qnum 0 R
.%liverange 0 A11 1248:1259
.%liverange 0 ~A11 47:71 200:205 213:230 242:257 323:382 390:445 500:503 554:578 611:613 646:648 1260:1273 1315:1339 1468:1473 1481:1687 1822:1827 1835:1846 1879:1916 1949:1949
.%var l0151!isl 0 R
.%liverange 0 B12 1246:1259
.%liverange 0 ~B12 47:60 65:73 146:180 199:205 213:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1260:1269 1280:1291 1315:1335 1468:1473 1481:1505 1510:1511 1645:1650 1658:1680 1687:1694 1768:1768 1822:1823 1835:1843 1879:1903 1914:1925 1949:1949
.%var l0150!_ixp_future_count_signal_num 0 R
.%liverange 0 B13 1237:1244
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 1225:1236 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0150!tmp_cycle_count 0 R
.%liverange 0 A15 1239:1244
.%liverange 0 ~A15 47:69 200:205 213:425 554:559 567:882 1011:1016 1024:1222 1225:1238 1245:1308 1315:1321 1333:1348 1414:1417 1468:1473 1481:1514 1645:1650 1658:1949
.%var l0149!_wsm_mask 0 R
.%liverange 0 B12 1234:1244
.%liverange 0 ~B12 1225:1233 1667:1680 1687:1694 1768:1768 1822:1823 1835:1843 1914:1925 1949:1949
.%var $l0148!ticket 0 R
.%liverange 0 $W0 1215:1244
.%liverange 0 ~$W0 1667:1848 1914:1918 1949:1949
.%liverange 0 $R0 1219:1244
.%liverange 0 ~$R0 1667:1852 1914:1922 1949:1949
.%var l0148!seq 0 R
.%liverange 0 B11 1235:1244
.%liverange 0 ~B11 1225:1234 1667:1682 1687:1688 1822:1827 1835:1850 1852:1853 1914:1917 1949:1949
.%var l0148!cntr_addr_lo 0 R
.%liverange 0 B15 1222:1244
.%liverange 0 ~B15 1667:1673 1687:1695 1768:1783 1821:1827 1835:1855 1914:1914 1949:1949
.%var l0148!bitmap_lo 0 R
.%liverange 0 B14 1214:1244
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0148!ring_num 0 R
.%liverange 0 A15 1223:1224
.%liverange 0 ~A15 47:69 200:205 213:425 554:559 567:882 1011:1016 1024:1222 1225:1238 1245:1308 1315:1321 1333:1348 1414:1417 1468:1473 1481:1514 1645:1650 1658:1949
.%var l0148!addr_lo 0 R
.%liverange 0 B11 1217:1217 1220:1224
.%liverange 0 ~B11 1218:1219 1225:1234 1667:1682 1687:1688 1822:1827 1835:1850 1852:1853 1914:1917 1949:1949
.%var l0148!addr_hi 0 R
.%liverange 0 A14 1216:1217
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:864 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%var l0148!qnum 0 R
.%liverange 0 A13 1213:1244
.%liverange 0 ~A13 399:407 419:423 554:559 567:581 584:610 646:680 856:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0148!isl 0 R
.%liverange 0 B15 1211:1221
.%var l0147!addr 0 R
.%liverange 0 B14 1206:1209
.%liverange 0 ~B14 1037:1039 1053:1063 1134:1168 1187:1193 1210:1213
.%var l0144!word 0 R
.%liverange 0 B14 1169:1186
.%liverange 0 ~B14 1166:1168 1187:1187 1210:1213
.%var l0142!__immed_big_const 0 R
.%liverange 0 B13 1150:1186
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 1187:1187 1210:1236 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0140!word 0 R
.%liverange 0 B12 1140:1151 1159:1187
.%liverange 0 ~B12 1152:1152 1210:1233 1667:1680 1687:1694 1768:1768 1822:1823 1835:1843 1914:1925 1949:1949
.%var l0139!_wsm_mask 0 R
.%liverange 0 B13 1136:1149
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 1187:1187 1210:1236 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0136!word 0 R
.%liverange 0 B15 1115:1132
.%liverange 0 ~B15 1112:1114 1133:1133 1210:1210
.%var l0134!__immed_big_const 0 R
.%liverange 0 B14 1096:1132
.%liverange 0 ~B14 1133:1133 1210:1213
.%var l0132!word 0 R
.%liverange 0 B12 1083:1097 1105:1133
.%liverange 0 ~B12 1098:1098 1210:1233 1667:1680 1687:1694 1768:1768 1822:1823 1835:1843 1914:1925 1949:1949
.%var l0130!_wsm_mask 0 R
.%liverange 0 B15 1065:1111 1194:1200
.%liverange 0 ~B15 1112:1114 1133:1187 1210:1210
.%var l0126!split_len 0 R
.%liverange 0 B14 1064:1095 1194:1200
.%liverange 0 ~B14 1133:1168 1187:1187 1210:1213
.%var l0126!ctm_bytes 0 R
.%liverange 0 B13 1067:1133 1194:1200
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 1134:1135 1210:1236 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0126!mu_lo_start 0 R
.%liverange 0 A14 1080:1133 1138:1187
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:864 876:891 957:1016 1024:1041 1053:1068 1134:1134 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%liverange 0 B12 1135:1137
.%var l0126!pcie_lo_start 0 R
.%liverange 0 A9 1054:1187 1194:1200
.%liverange 0 ~A9 222:246 377:382 390:876 1011:1016 1024:1053 1188:1193 1201:1257 1280:1292 1667:1691 1822:1827 1835:1878 1914:1949
.%var l0126!pcie_hi_word 0 R
.%liverange 0 B11 1055:1187 1194:1200
.%liverange 0 ~B11 1210:1216 1218:1219
.%var l0126!addr_lo 0 R
.%liverange 0 B11 1202:1209
.%liverange 0 ~B11 1037:1054 1188:1193 1210:1216 1218:1219
.%var l0126!len 0 R
.%liverange 0 B15 1049:1052
.%liverange 0 ~B15 1210:1210
.%liverange 0 A10 1060:1187 1194:1200
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:326 377:674 681:703 834:839 847:1048 1053:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%var l0126!isl 0 R
.%liverange 0 B13 1056:1066
.%liverange 0 ~B13 1134:1135
.%var l0126!tmp2 0 R
.%liverange 0 B15 1062:1064
.%var l0126!tmp 0 R
.%liverange 0 B12 1047:1052 1061:1065 1099:1104 1153:1158 1190:1193 1195:1200
.%liverange 0 ~B12 1098:1098 1152:1152 1194:1194 1210:1233 1667:1680 1687:1694 1768:1768 1822:1823 1835:1843 1914:1925 1949:1949
.%liverange 0 A12 1058:1060 1066:1097 1105:1151 1159:1187
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:783 834:839 847:1046 1053:1057 1098:1098 1152:1152 1188:1189 1194:1194 1201:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0126!word 0 R
.%liverange 0 B14 1040:1041 1043:1045
.%liverange 0 A14 1042:1042 1046:1052 1069:1079 1194:1200
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:864 876:891 957:1016 1024:1039 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%var l0125!addr 0 R
.%liverange 0 B15 1029:1032
.%liverange 0 ~B15 860:886 957:991 1010:1016 1033:1048 1053:1061 1134:1193 1201:1210 1280:1286 1288:1289 1949:1949
.%var l0122!word 0 R
.%liverange 0 B15 992:1009
.%liverange 0 ~B15 989:991 1010:1010 1033:1048 1053:1061 1134:1193 1201:1210 1280:1286 1288:1289 1949:1949
.%var l0120!__immed_big_const 0 R
.%liverange 0 B14 973:1009
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1010:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0118!word 0 R
.%liverange 0 B13 963:974 982:1010
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 975:975 1033:1055 1188:1193 1201:1236 1280:1280 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0117!_wsm_mask 0 R
.%liverange 0 B14 959:972
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1010:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0114!word 0 R
.%liverange 0 B11 938:955
.%liverange 0 ~B11 935:937 956:956 1033:1054 1188:1193 1201:1201 1210:1216 1218:1219 1280:1283 1949:1949
.%var l0112!__immed_big_const 0 R
.%liverange 0 B15 919:955
.%liverange 0 ~B15 956:956 1033:1048 1053:1061 1134:1193 1201:1210 1280:1286 1288:1289 1949:1949
.%var l0110!word 0 R
.%liverange 0 B13 906:920 928:956
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 921:921 1033:1055 1188:1193 1201:1236 1280:1280 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0108!_wsm_mask 0 R
.%liverange 0 B11 888:934 1017:1023
.%liverange 0 ~B11 935:937 956:1010 1033:1054 1188:1193 1201:1201 1210:1216 1218:1219 1280:1283 1949:1949
.%var l0104!split_len 0 R
.%liverange 0 B15 887:918 1017:1023
.%liverange 0 ~B15 956:991 1010:1010 1033:1048 1053:1061 1134:1193 1201:1210 1280:1286 1288:1289 1949:1949
.%var l0104!ctm_bytes 0 R
.%liverange 0 B14 890:956 1017:1023
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 957:958 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0104!mu_lo_start 0 R
.%liverange 0 A13 903:956 961:1010
.%liverange 0 ~A13 399:407 419:423 554:559 567:581 584:610 646:680 856:902 957:957 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%liverange 0 B13 958:960
.%var l0104!pcie_lo_start 0 R
.%liverange 0 A9 877:1010 1017:1023
.%liverange 0 ~A9 222:246 377:382 390:876 1011:1016 1024:1053 1188:1193 1201:1257 1280:1292 1667:1691 1822:1827 1835:1878 1914:1949
.%var l0104!pcie_hi_word 0 R
.%liverange 0 B12 878:1010 1017:1023
.%liverange 0 ~B12 1033:1046 1053:1060 1134:1134 1188:1189 1201:1209 1280:1291 1949:1949
.%var l0104!addr_lo 0 R
.%liverange 0 B15 1025:1028
.%var l0104!len 0 R
.%liverange 0 B14 872:875
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%liverange 0 A15 883:1010 1017:1023
.%liverange 0 ~A15 47:69 200:205 213:425 554:559 567:871 876:882 1011:1016 1024:1222 1245:1308 1315:1321 1333:1348 1414:1417 1468:1473 1481:1514 1645:1650 1658:1949
.%var l0104!isl 0 R
.%liverange 0 B14 879:889
.%liverange 0 ~B14 957:958
.%var l0104!tmp2 0 R
.%liverange 0 B11 885:887
.%var l0104!tmp 0 R
.%liverange 0 B13 870:875 884:888 922:927 976:981 1013:1016 1018:1023
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 921:921 975:975 1017:1017 1033:1055 1188:1193 1201:1236 1280:1280 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%liverange 0 A11 881:883 889:920 928:974 982:1010
.%liverange 0 ~A11 47:71 200:205 213:230 242:257 323:382 390:445 500:503 554:578 611:613 646:648 921:921 975:975 1017:1017 1033:1244 1280:1314 1490:1687 1822:1827 1835:1846 1879:1916 1949:1949
.%var l0104!word 0 R
.%liverange 0 B12 863:864 866:868
.%liverange 0 A14 865:865 869:875 892:956 1017:1023
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:862 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%var l0103!addr 0 R
.%liverange 0 B15 852:855
.%liverange 0 ~B15 683:712 780:781 834:839 856:886 957:991 1010:1016 1024:1024 1033:1048 1053:1061 1134:1193 1201:1210 1245:1248 1280:1286 1288:1289 1949:1949
.%var l0100!word 0 R
.%liverange 0 B11 815:832
.%liverange 0 ~B11 812:814 833:833 856:884 957:1016 1024:1054 1188:1193 1201:1201 1210:1216 1218:1219 1245:1256 1280:1283 1949:1949
.%var l0098!__immed_big_const 0 R
.%liverange 0 B15 796:832
.%liverange 0 ~B15 833:833 856:886 957:991 1010:1016 1024:1024 1033:1048 1053:1061 1134:1193 1201:1210 1245:1248 1280:1286 1288:1289 1949:1949
.%var l0096!word 0 R
.%liverange 0 B14 786:833
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0095!_wsm_mask 0 R
.%liverange 0 B15 782:795
.%liverange 0 ~B15 833:833 856:886 957:991 1010:1016 1024:1024 1033:1048 1053:1061 1134:1193 1201:1210 1245:1248 1280:1286 1288:1289 1949:1949
.%var l0092!word 0 R
.%liverange 0 B12 761:778
.%liverange 0 ~B12 758:760 779:779 856:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%var l0090!__immed_big_const 0 R
.%liverange 0 B14 742:778
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 779:779 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0088!word 0 R
.%liverange 0 B14 729:741
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 779:779 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0086!_wsm_mask 0 R
.%liverange 0 B12 711:757 840:846
.%liverange 0 ~B12 758:760 779:833 856:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%var l0082!split_len 0 R
.%liverange 0 B11 710:743 751:779
.%liverange 0 ~B11 744:744 780:798 805:814 833:833 840:840 856:884 957:1016 1024:1054 1188:1193 1201:1201 1210:1216 1218:1219 1245:1256 1280:1283 1949:1949
.%var l0082!ctm_bytes 0 R
.%liverange 0 B15 713:779 840:846
.%liverange 0 ~B15 780:781 856:886 957:991 1010:1016 1024:1024 1033:1048 1053:1061 1134:1193 1201:1210 1245:1248 1280:1286 1288:1289 1949:1949
.%var l0082!mu_lo_start 0 R
.%liverange 0 A12 726:779 784:833
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:780 834:839 847:1057 1188:1193 1201:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%liverange 0 B14 781:783
.%var l0082!pcie_lo_start 0 R
.%liverange 0 A13 700:833 840:846
.%liverange 0 ~A13 399:407 419:423 554:559 567:581 584:610 646:680 856:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0082!pcie_hi_word 0 R
.%liverange 0 B13 701:833 840:846
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 856:869 876:883 957:957 1011:1012 1024:1032 1245:1268 1315:1328 1333:1334 1468:1473 1481:1503 1510:1517 1591:1591 1645:1646 1658:1666 1879:1902 1949:1949
.%var l0082!addr_lo 0 R
.%liverange 0 B15 848:851
.%var l0082!len 0 R
.%liverange 0 B14 695:698
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%liverange 0 A14 706:833 840:846
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:864 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%var l0082!isl 0 R
.%liverange 0 B12 702:707
.%liverange 0 ~B12 780:833 856:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%var l0082!tmp2 0 R
.%liverange 0 B12 708:710
.%var l0082!tmp 0 R
.%liverange 0 B11 693:698 707:709 745:750 799:804 836:839 841:846
.%liverange 0 ~B11 744:744 798:798 840:840 856:884 957:1016 1024:1054 1188:1193 1201:1201 1210:1216 1218:1219 1245:1256 1280:1283 1949:1949
.%liverange 0 A10 704:706 712:743 751:797 805:833
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:326 377:674 681:692 699:703 744:744 798:798 834:835 840:840 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%var l0082!word 0 R
.%liverange 0 B13 686:687 689:691
.%liverange 0 A12 688:688 692:698 715:725 840:846
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:685 699:714 780:783 834:839 847:1057 1188:1193 1201:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0081!_ixp_future_count_signal_num 0 R
.%liverange 0 B15 673:680
.%liverange 0 ~B15 661:672 856:886 957:991 1010:1016 1024:1024 1033:1048 1053:1061 1134:1193 1201:1210 1245:1248 1280:1286 1288:1289 1949:1949
.%var l0081!tmp_cycle_count 0 R
.%liverange 0 A10 675:680
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:326 377:674 681:703 834:839 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%var l0080!_wsm_mask 0 R
.%liverange 0 B14 670:680
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var $l0079!ticket 0 R
.%liverange 0 $W0 651:680
.%liverange 0 ~$W0 856:1214 1245:1249 1280:1284 1949:1949
.%liverange 0 $R0 655:680
.%liverange 0 ~$R0 856:1218 1245:1253 1280:1288 1949:1949
.%var l0079!seq 0 R
.%liverange 0 B13 671:680
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 661:670 856:869 876:883 957:957 1011:1012 1024:1032 1245:1268 1315:1328 1333:1334 1468:1473 1481:1503 1510:1517 1591:1591 1645:1646 1658:1666 1879:1902 1949:1949
.%var l0079!cntr_addr_lo 0 R
.%liverange 0 B12 658:680
.%liverange 0 ~B12 856:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%var l0079!bitmap_lo 0 R
.%liverange 0 B11 650:680
.%liverange 0 ~B11 856:884 957:1016 1024:1054 1188:1193 1201:1201 1210:1216 1218:1219 1245:1256 1280:1283 1949:1949
.%var l0079!ring_num 0 R
.%liverange 0 A12 659:680
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:783 834:839 847:1057 1188:1193 1201:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0079!addr_lo 0 R
.%liverange 0 B15 653:653 656:660
.%liverange 0 ~B15 654:655 661:672 856:886 957:991 1010:1016 1024:1024 1033:1048 1053:1061 1134:1193 1201:1210 1245:1248 1280:1286 1288:1289 1949:1949
.%var l0079!addr_hi 0 R
.%liverange 0 A12 652:653
.%liverange 0 ~A12 654:658
.%var l0079!qnum 0 R
.%liverange 0 A11 649:680
.%liverange 0 ~A11 47:71 200:205 213:230 242:257 323:382 390:445 500:503 554:578 611:613 646:648 856:880 1011:1016 1024:1247 1280:1314 1490:1687 1822:1827 1835:1846 1879:1916 1949:1949
.%var l0079!isl 0 R
.%liverange 0 B15 647:652
.%liverange 0 ~B15 654:655
.%var l0078!_ixp_future_count_signal_num 0 R
.%liverange 0 B14 638:645
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 626:637 646:669 681:694 699:728 780:780 834:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0078!tmp_cycle_count 0 R
.%liverange 0 A14 640:645
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 626:639 646:705 834:839 847:864 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%var l0077!_wsm_mask 0 R
.%liverange 0 B13 635:645
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 626:634 681:685 699:700 834:839 847:869 876:883 957:957 1011:1012 1024:1032 1245:1268 1315:1328 1333:1334 1468:1473 1481:1503 1510:1517 1591:1591 1645:1646 1658:1666 1879:1902 1949:1949
.%var $l0076!ticket 0 R
.%liverange 0 $W0 616:645 681:855
.%liverange 0 ~$W0 856:1214 1245:1249 1280:1284 1949:1949
.%liverange 0 $R0 620:645 681:855
.%liverange 0 ~$R0 856:1218 1245:1253 1280:1288 1949:1949
.%var l0076!seq 0 R
.%liverange 0 B12 636:645
.%liverange 0 ~B12 626:635 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%var l0076!cntr_addr_lo 0 R
.%liverange 0 B11 623:645 681:692 699:706 834:835 847:855
.%liverange 0 ~B11 780:798 805:814 833:833 856:884 957:1016 1024:1054 1188:1193 1201:1201 1210:1216 1218:1219 1245:1256 1280:1283 1949:1949
.%var l0076!bitmap_lo 0 R
.%liverange 0 B15 615:645 681:682 847:847
.%liverange 0 ~B15 683:712 780:781 834:839 856:886 957:991 1010:1016 1024:1024 1033:1048 1053:1061 1134:1193 1201:1210 1245:1248 1280:1286 1288:1289 1949:1949
.%var l0076!ring_num 0 R
.%liverange 0 A14 624:625
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 626:639 646:705 834:839 847:864 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%var l0076!addr_lo 0 R
.%liverange 0 B14 618:618 621:625
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 626:637 646:669 681:694 699:728 780:780 834:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0076!addr_hi 0 R
.%liverange 0 A13 617:618
.%liverange 0 ~A13 399:407 419:423 554:559 567:581 584:610 619:699 834:839 847:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0076!qnum 0 R
.%liverange 0 A11 614:645 681:855
.%liverange 0 ~A11 47:71 200:205 213:230 242:257 323:382 390:445 500:503 554:578 611:613 646:648 856:880 1011:1016 1024:1247 1280:1314 1490:1687 1822:1827 1835:1846 1879:1916 1949:1949
.%var l0076!isl 0 R
.%liverange 0 B13 612:625
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 323:323 377:378 390:398 611:611 626:634 681:685 699:700 834:839 847:869 876:883 957:957 1011:1012 1024:1032 1245:1268 1315:1328 1333:1334 1468:1473 1481:1503 1510:1517 1591:1591 1645:1646 1658:1666 1879:1902 1949:1949
.%var l0075!_ixp_future_count_signal_num 0 R
.%liverange 0 B13 603:610
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 591:602 611:611 1033:1055 1188:1193 1201:1236 1280:1280 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0075!tmp_cycle_count 0 R
.%liverange 0 A12 605:610
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:783 834:839 847:1057 1188:1193 1201:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0074!_wsm_mask 0 R
.%liverange 0 B12 600:610
.%liverange 0 ~B12 591:599 1033:1046 1053:1060 1134:1134 1188:1189 1201:1209 1280:1291 1949:1949
.%var $l0073!ticket 0 R
.%liverange 0 $W0 581:610
.%liverange 0 ~$W0 1033:1214 1280:1284 1949:1949
.%liverange 0 $R0 585:610
.%liverange 0 ~$R0 1033:1218 1280:1288 1949:1949
.%var l0073!seq 0 R
.%liverange 0 B11 601:610
.%liverange 0 ~B11 591:600 1033:1054 1188:1193 1201:1201 1210:1216 1218:1219 1280:1283 1949:1949
.%var l0073!cntr_addr_lo 0 R
.%liverange 0 B15 588:610
.%liverange 0 ~B15 1033:1048 1053:1061 1134:1193 1201:1210 1280:1286 1288:1289 1949:1949
.%var l0073!bitmap_lo 0 R
.%liverange 0 B14 580:610
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0073!ring_num 0 R
.%liverange 0 A14 589:610
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:864 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%var l0073!addr_lo 0 R
.%liverange 0 B11 583:583 586:590
.%liverange 0 ~B11 584:585 591:600 1033:1054 1188:1193 1201:1201 1210:1216 1218:1219 1280:1283 1949:1949
.%var l0073!addr_hi 0 R
.%liverange 0 A13 582:583
.%liverange 0 ~A13 399:407 419:423 554:559 567:581 584:610 646:680 856:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0073!qnum 0 R
.%liverange 0 A11 579:610
.%liverange 0 ~A11 47:71 200:205 213:230 242:257 323:382 390:445 500:503 554:578 611:613 646:648 1033:1244 1280:1314 1490:1687 1822:1827 1835:1846 1879:1916 1949:1949
.%var l0073!isl 0 R
.%liverange 0 B12 577:590
.%liverange 0 ~B12 591:599 1033:1046 1053:1060 1134:1134 1188:1189 1201:1209 1280:1291 1949:1949
.%var l0072!addr 0 R
.%liverange 0 B15 572:575
.%liverange 0 ~B15 403:405 419:427 500:534 553:559 576:587
.%var l0069!word 0 R
.%liverange 0 B15 535:552
.%liverange 0 ~B15 532:534 553:553 576:587
.%var l0067!__immed_big_const 0 R
.%liverange 0 B14 516:552
.%liverange 0 ~B14 553:553 576:579
.%var l0065!word 0 R
.%liverange 0 B13 506:553
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 576:602 611:611 1033:1055 1188:1193 1201:1236 1280:1280 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0064!_wsm_mask 0 R
.%liverange 0 B13 502:505
.%var l0061!word 0 R
.%liverange 0 B15 481:498
.%liverange 0 ~B15 478:480 499:499 576:587
.%var l0059!__immed_big_const 0 R
.%liverange 0 B14 462:498
.%liverange 0 ~B14 499:499 576:579
.%var l0057!word 0 R
.%liverange 0 B12 449:463 471:499
.%liverange 0 ~B12 464:464 576:576
.%var l0055!_wsm_mask 0 R
.%liverange 0 B15 431:477 560:566
.%liverange 0 ~B15 478:480 499:534 553:553 576:587
.%var l0051!split_len 0 R
.%liverange 0 B14 430:461 560:566
.%liverange 0 ~B14 499:515 553:553 576:579
.%var l0051!ctm_bytes 0 R
.%liverange 0 B13 433:499 560:566
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 500:501 576:602 611:611 1033:1055 1188:1193 1201:1236 1280:1280 1667:1700 1768:1769 1822:1827 1835:1844 1914:1938 1949:1949
.%var l0051!mu_lo_start 0 R
.%liverange 0 A11 446:499 504:553
.%liverange 0 ~A11 576:578
.%liverange 0 B12 501:503
.%var l0051!pcie_lo_start 0 R
.%liverange 0 A12 420:553 560:566
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:783 834:839 847:1057 1188:1193 1201:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0051!pcie_hi_word 0 R
.%liverange 0 B11 421:553 560:566
.%liverange 0 ~B11 576:582 584:585
.%var l0051!addr_lo 0 R
.%liverange 0 B11 568:575
.%liverange 0 ~B11 403:420 554:559 576:582 584:585
.%var l0051!len 0 R
.%liverange 0 B14 415:418
.%liverange 0 ~B14 576:579
.%liverange 0 A15 426:553 560:566
.%liverange 0 ~A15 47:69 200:205 213:414 419:425 554:559 567:882 1011:1016 1024:1222 1245:1308 1315:1321 1333:1348 1414:1417 1468:1473 1481:1514 1645:1650 1658:1949
.%var l0051!isl 0 R
.%liverange 0 B13 422:432
.%liverange 0 ~B13 500:501
.%var l0051!tmp2 0 R
.%liverange 0 B15 428:430
.%var l0051!tmp 0 R
.%liverange 0 B12 413:418 427:431 465:470 519:524 556:559 561:566
.%liverange 0 ~B12 464:464 518:518 560:560 576:576
.%liverange 0 A13 424:426 432:434 441:463 471:517 525:553
.%liverange 0 ~A13 399:407 419:423 464:464 518:518 554:555 560:560 567:581 584:610 646:680 856:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0051!word 0 R
.%liverange 0 B15 406:407 409:411
.%liverange 0 A13 408:408 412:418 435:440
.%liverange 0 ~A13 399:405 419:423 554:559 567:581 584:610 646:680 856:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0050!addr 0 R
.%liverange 0 B14 395:398
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0047!word 0 R
.%liverange 0 B11 358:375
.%liverange 0 ~B11 355:357 376:376 399:420 554:559 567:567 576:582 584:585 646:649 1949:1949
.%var l0045!__immed_big_const 0 R
.%liverange 0 B15 339:375
.%liverange 0 ~B15 376:376 399:405 419:427 500:534 553:559 567:571 576:587 646:646 1949:1949
.%var l0043!word 0 R
.%liverange 0 B14 329:376
.%liverange 0 ~B14 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0042!_wsm_mask 0 R
.%liverange 0 B14 325:328
.%var l0039!word 0 R
.%liverange 0 B11 304:321
.%liverange 0 ~B11 301:303 322:322 399:420 554:559 567:567 576:582 584:585 646:649 1949:1949
.%var l0037!__immed_big_const 0 R
.%liverange 0 B15 285:321
.%liverange 0 ~B15 322:322 399:405 419:427 500:534 553:559 567:571 576:587 646:646 1949:1949
.%var l0035!word 0 R
.%liverange 0 B13 272:286 294:322
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:249 287:287 323:323 377:378 390:421 554:559 567:602 611:611 646:670 856:869 876:883 957:957 1011:1012 1024:1055 1188:1193 1201:1236 1245:1268 1280:1280 1315:1328 1333:1334 1468:1473 1481:1503 1510:1517 1591:1591 1645:1646 1658:1700 1768:1769 1822:1827 1835:1844 1879:1902 1914:1938 1949:1949
.%var l0033!_wsm_mask 0 R
.%liverange 0 B11 254:300 383:389
.%liverange 0 ~B11 301:303 322:357 376:376 399:420 554:559 567:567 576:582 584:585 646:649 1949:1949
.%var l0029!split_len 0 R
.%liverange 0 B15 253:284 383:389
.%liverange 0 ~B15 322:338 376:376 399:405 419:427 500:534 553:559 567:571 576:587 646:646 1949:1949
.%var l0029!ctm_bytes 0 R
.%liverange 0 B14 256:322 383:389
.%liverange 0 ~B14 222:228 242:244 323:324 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0029!mu_lo_start 0 R
.%liverange 0 A10 269:322 327:376
.%liverange 0 ~A10 47:53 65:80 146:205 213:268 323:323 377:674 681:703 834:839 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%liverange 0 B13 324:326
.%var l0029!pcie_lo_start 0 R
.%liverange 0 A14 243:376 383:389
.%liverange 0 ~A14 47:242 377:382 390:588 611:623 646:680 856:864 876:891 957:1016 1024:1041 1053:1068 1134:1137 1188:1193 1201:1215 1218:1282 1315:1337 1468:1473 1481:1693 1822:1827 1835:1949
.%var l0029!pcie_hi_word 0 R
.%liverange 0 B12 244:376 383:389
.%liverange 0 ~B12 399:412 419:426 500:500 554:555 567:575 646:657 1949:1949
.%var l0029!addr_lo 0 R
.%liverange 0 B12 391:398
.%liverange 0 ~B12 226:243 377:382 399:412 419:426 500:500 554:555 567:575 646:657 1949:1949
.%var l0029!len 0 R
.%liverange 0 B15 238:241
.%liverange 0 ~B15 399:405 419:427 500:534 553:559 567:571 576:587 646:646 1949:1949
.%liverange 0 A13 249:376 383:389
.%liverange 0 ~A13 399:407 419:423 554:559 567:581 584:610 646:680 856:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var l0029!isl 0 R
.%liverange 0 B14 245:255
.%liverange 0 ~B14 323:324
.%var l0029!tmp2 0 R
.%liverange 0 B11 251:253
.%var l0029!tmp 0 R
.%liverange 0 B13 236:241 250:254 288:293 342:347 379:382 384:389
.%liverange 0 ~B13 47:51 65:66 200:205 213:235 242:246 287:287 341:341 377:378 383:383 390:421 554:559 567:602 611:611 646:670 856:869 876:883 957:957 1011:1012 1024:1055 1188:1193 1201:1236 1245:1268 1280:1280 1315:1328 1333:1334 1468:1473 1481:1503 1510:1517 1591:1591 1645:1646 1658:1700 1768:1769 1822:1827 1835:1844 1879:1902 1914:1938 1949:1949
.%liverange 0 A9 247:249 255:286 294:340 348:376
.%liverange 0 ~A9 222:235 242:246 287:287 341:341 377:378 383:383 390:876 1011:1016 1024:1053 1188:1193 1201:1257 1280:1292 1667:1691 1822:1827 1835:1878 1914:1949
.%var l0029!word 0 R
.%liverange 0 B14 229:230 232:234
.%liverange 0 A11 231:231 235:241 258:322 383:389
.%liverange 0 ~A11 399:445 500:503 554:578 646:648 1949:1949
.%var l0028!addr 0 R
.%liverange 0 B15 218:221
.%liverange 0 ~B15 49:78 146:147 200:205 222:237 242:252 323:338 376:382 390:405 419:427 500:534 553:559 567:571 576:587 611:614 646:646 1949:1949
.%var l0025!word 0 R
.%liverange 0 B12 181:198
.%liverange 0 ~B12 178:180 199:199 222:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%var l0023!__immed_big_const 0 R
.%liverange 0 B11 162:163 171:198
.%liverange 0 ~B11 164:164 199:199 222:250 323:357 376:382 390:420 554:559 567:567 576:582 584:585 611:622 646:649 1949:1949
.%var l0021!word 0 R
.%liverange 0 B15 152:199
.%liverange 0 ~B15 222:237 242:252 323:338 376:382 390:405 419:427 500:534 553:559 567:571 576:587 611:614 646:646 1949:1949
.%var l0020!_wsm_mask 0 R
.%liverange 0 B15 148:151
.%var l0017!word 0 R
.%liverange 0 B14 127:144
.%liverange 0 ~B14 124:126 145:145 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0015!__immed_big_const 0 R
.%liverange 0 B12 108:144
.%liverange 0 ~B12 145:145 222:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%var l0013!word 0 R
.%liverange 0 B14 95:123
.%liverange 0 ~B14 124:126 145:145 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0011!_wsm_mask 0 R
.%liverange 0 B12 77:107 206:212
.%liverange 0 ~B12 145:180 199:199 222:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%var l0007!split_len 0 R
.%liverange 0 B11 76:109 117:145
.%liverange 0 ~B11 110:110 146:161 199:199 206:206 222:250 323:357 376:382 390:420 554:559 567:567 576:582 584:585 611:622 646:649 1949:1949
.%var l0007!ctm_bytes 0 R
.%liverange 0 B15 79:145 206:212
.%liverange 0 ~B15 146:147 222:237 242:252 323:338 376:382 390:405 419:427 500:534 553:559 567:571 576:587 611:614 646:646 1949:1949
.%var l0007!mu_lo_start 0 R
.%liverange 0 A9 92:145 150:199
.%liverange 0 ~A9 222:246 377:382 390:876 1011:1016 1024:1053 1188:1193 1201:1257 1280:1292 1667:1691 1822:1827 1835:1878 1914:1949
.%liverange 0 B14 147:149
.%var l0007!pcie_lo_start 0 R
.%liverange 0 A12 66:199 206:212
.%liverange 0 ~A12 47:65 200:205 213:419 554:559 567:604 611:651 654:658 681:687 699:714 780:783 834:839 847:1057 1188:1193 1201:1516 1645:1650 1658:1675 1687:1702 1768:1827 1835:1849 1852:1919 1922:1949
.%var l0007!pcie_hi_word 0 R
.%liverange 0 B13 67:199 206:212
.%liverange 0 ~B13 222:235 242:249 323:323 377:378 390:398 611:611 1949:1949
.%var l0007!addr_lo 0 R
.%liverange 0 B14 214:221
.%liverange 0 ~B14 49:94 146:146 200:212 222:228 242:244 377:382 390:394 399:414 419:429 500:515 553:559 567:579 611:617 619:620 646:669 856:871 876:878 1011:1016 1024:1039 1053:1063 1134:1168 1187:1193 1201:1205 1210:1213 1245:1251 1253:1254 1280:1303 1490:1523 1591:1592 1645:1650 1658:1658 1667:1689 1822:1827 1835:1835 1844:1847 1879:1879 1914:1937 1949:1949
.%var l0007!len 0 R
.%liverange 0 B12 61:64
.%liverange 0 ~B12 222:243 377:382 390:390 399:412 419:426 500:500 554:555 567:575 611:635 646:657 681:701 834:839 847:862 876:877 1011:1016 1024:1046 1053:1060 1134:1134 1188:1189 1201:1209 1245:1245 1280:1291 1949:1949
.%liverange 0 A11 72:199 206:212
.%liverange 0 ~A11 222:230 242:257 323:382 390:445 500:503 554:578 611:613 646:648 1949:1949
.%var l0007!isl 0 R
.%liverange 0 B11 68:72
.%liverange 0 ~B11 146:161 199:199 222:250 323:357 376:382 390:420 554:559 567:567 576:582 584:585 611:622 646:649 1949:1949
.%var l0007!tmp2 0 R
.%liverange 0 B12 74:76
.%var l0007!tmp 0 R
.%liverange 0 B11 59:64 73:75 111:116 165:170 202:205 207:212
.%liverange 0 ~B11 110:110 164:164 206:206 222:250 323:357 376:382 390:420 554:559 567:567 576:582 584:585 611:622 646:649 1949:1949
.%liverange 0 A15 70:72 78:109 117:163 171:199
.%liverange 0 ~A15 47:58 65:69 110:110 164:164 200:201 206:206 213:425 554:559 567:882 1011:1016 1024:1222 1245:1308 1315:1321 1333:1348 1414:1417 1468:1473 1481:1514 1645:1650 1658:1949
.%var l0007!word 0 R
.%liverange 0 B13 52:53 55:57
.%liverange 0 A10 54:54 58:64 81:145 206:212
.%liverange 0 ~A10 47:51 65:80 146:205 213:268 323:326 377:674 681:703 834:839 847:1059 1188:1193 1201:1285 1288:1333 1468:1473 1481:1498 1510:1525 1591:1650 1658:1713 1768:1771 1822:1884 1887:1942 1949:1949
.%var l0000!tmp 0 R
.%liverange 0 B12 15:15
.%liverange 0 A13 16:46
.%liverange 0 ~A13 47:248 377:382 390:407 419:423 554:559 567:581 584:616 619:699 834:839 847:902 957:960 1011:1212 1245:1250 1253:1510 1645:1650 1658:1881 1914:1926 1949:1949
.%var $l0000!dma_out2x[3] 0 R
.%liverange 0 $W24 458:459 473:499 915:916 930:956 1372:1373 1387:1413
.%liverange 0 ~$W24 47:457 460:472 500:914 917:929 957:1371 1374:1386 1414:1949
.%liverange 0 $R24 1950:1950
.%var $l0000!dma_out2x[2] 0 R
.%liverange 0 $W23 456:499 913:956 1370:1413
.%liverange 0 ~$W23 47:455 500:912 957:1369 1414:1949
.%liverange 0 $R23 1950:1950
.%var $l0000!dma_out2x[1] 0 R
.%liverange 0 $W22 455:499 912:956 1369:1413
.%liverange 0 ~$W22 47:454 500:911 957:1368 1414:1949
.%liverange 0 $R22 1950:1950
.%var $l0000!dma_out2x[0] 0 R
.%liverange 0 $W21 448:499 905:956 1362:1413
.%liverange 0 ~$W21 47:447 500:904 957:1361 1414:1949
.%liverange 0 $R21 1950:1950
.%var $l0000!dma_out2[3] 0 R
.%liverange 0 $W20 442:499 513:514 527:553 560:566 899:956 970:971 984:1010 1017:1023 1356:1413 1427:1428 1441:1467 1474:1480
.%liverange 0 ~$W20 47:441 500:512 515:526 554:559 567:898 957:969 972:983 1011:1016 1024:1355 1414:1426 1429:1440 1468:1473 1481:1949
.%liverange 0 $R20 1950:1950
.%var $l0000!dma_out2[2] 0 R
.%liverange 0 $W19 411:418 440:499 511:553 560:566 868:875 897:956 968:1010 1017:1023 1325:1332 1354:1413 1425:1467 1474:1480
.%liverange 0 ~$W19 47:410 419:439 500:510 554:559 567:867 876:896 957:967 1011:1016 1024:1324 1333:1353 1414:1424 1468:1473 1481:1949
.%liverange 0 $R19 1950:1950
.%var $l0000!dma_out2[1] 0 R
.%liverange 0 $W18 410:418 439:499 510:553 560:566 867:875 896:956 967:1010 1017:1023 1324:1332 1353:1413 1424:1467 1474:1480
.%liverange 0 ~$W18 47:409 419:438 500:509 554:559 567:866 876:895 957:966 1011:1016 1024:1323 1333:1352 1414:1423 1468:1473 1481:1949
.%liverange 0 $R18 1950:1950
.%var $l0000!dma_out2[0] 0 R
.%liverange 0 $W17 407:418 436:499 505:553 560:566 864:875 893:956 962:1010 1017:1023 1321:1332 1350:1413 1419:1467 1474:1480
.%liverange 0 ~$W17 47:406 419:435 500:504 554:559 567:863 876:892 957:961 1011:1016 1024:1320 1333:1349 1414:1418 1468:1473 1481:1949
.%liverange 0 $R17 1950:1950
.%var $l0000!work_in2[4] 0 R
.%liverange 0 $W15 1950:1950
.%liverange 0 $R15 44:1949
.%var $l0000!work_in2[3] 0 R
.%liverange 0 $W14 1950:1950
.%liverange 0 $R14 44:1949
.%var $l0000!work_in2[2] 0 R
.%liverange 0 $W13 1950:1950
.%liverange 0 $R13 44:1949
.%var $l0000!work_in2[1] 0 R
.%liverange 0 $W12 1950:1950
.%liverange 0 $R12 44:1949
.%var $l0000!work_in2[0] 0 R
.%liverange 0 $W11 1950:1950
.%liverange 0 $R11 44:1949
.%var $l0000!dma_out1x[3] 0 R
.%liverange 0 $W16 281:282 296:322 738:739 753:779 1726:1727 1741:1767
.%liverange 0 ~$W16 47:280 283:295 323:737 740:752 780:1725 1728:1740 1768:1949
.%liverange 0 $R16 1950:1950
.%var $l0000!dma_out1x[2] 0 R
.%liverange 0 $W15 279:322 736:779 1724:1767
.%liverange 0 ~$W15 47:278 323:735 780:1723 1768:1949
.%liverange 0 $R15 1950:1950
.%var $l0000!dma_out1x[1] 0 R
.%liverange 0 $W14 278:322 735:779 1723:1767
.%liverange 0 ~$W14 47:277 323:734 780:1722 1768:1949
.%liverange 0 $R14 1950:1950
.%var $l0000!dma_out1x[0] 0 R
.%liverange 0 $W13 271:322 728:779 1716:1767
.%liverange 0 ~$W13 47:270 323:727 780:1715 1768:1949
.%liverange 0 $R13 1950:1950
.%var $l0000!dma_out1[3] 0 R
.%liverange 0 $W12 265:322 336:337 350:376 383:389 722:779 793:794 807:833 840:846 1710:1767 1781:1782 1795:1821 1828:1834
.%liverange 0 ~$W12 47:264 323:335 338:349 377:382 390:721 780:792 795:806 834:839 847:1709 1768:1780 1783:1794 1822:1827 1835:1949
.%liverange 0 $R12 1950:1950
.%var $l0000!dma_out1[2] 0 R
.%liverange 0 $W11 234:241 263:322 334:376 383:389 691:698 720:779 791:833 840:846 1679:1686 1708:1767 1779:1821 1828:1834
.%liverange 0 ~$W11 47:233 242:262 323:333 377:382 390:690 699:719 780:790 834:839 847:1678 1687:1707 1768:1778 1822:1827 1835:1949
.%liverange 0 $R11 1950:1950
.%var $l0000!dma_out1[1] 0 R
.%liverange 0 $W10 233:241 262:322 333:376 383:389 690:698 719:779 790:833 840:846 1678:1686 1707:1767 1778:1821 1828:1834
.%liverange 0 ~$W10 47:232 242:261 323:332 377:382 390:689 699:718 780:789 834:839 847:1677 1687:1706 1768:1777 1822:1827 1835:1949
.%liverange 0 $R10 1950:1950
.%var $l0000!dma_out1[0] 0 R
.%liverange 0 $W9 230:241 259:322 328:376 383:389 687:698 716:779 785:833 840:846 1675:1686 1704:1767 1773:1821 1828:1834
.%liverange 0 ~$W9 47:229 242:258 323:327 377:382 390:686 699:715 780:784 834:839 847:1674 1687:1703 1768:1772 1822:1827 1835:1949
.%liverange 0 $R9 1950:1950
.%var $l0000!work_in1[4] 0 R
.%liverange 0 $W10 1950:1950
.%liverange 0 $R10 43:1949
.%var $l0000!work_in1[3] 0 R
.%liverange 0 $W9 1950:1950
.%liverange 0 $R9 43:1949
.%var $l0000!work_in1[2] 0 R
.%liverange 0 $W8 1950:1950
.%liverange 0 $R8 43:1949
.%var $l0000!work_in1[1] 0 R
.%liverange 0 $W7 1950:1950
.%liverange 0 $R7 43:1949
.%var $l0000!work_in1[0] 0 R
.%liverange 0 $W6 1950:1950
.%liverange 0 $R6 43:1949
.%var $l0000!dma_out0x[3] 0 R
.%liverange 0 $W8 104:105 119:145 1092:1093 1107:1133 1549:1550 1564:1590
.%liverange 0 ~$W8 47:103 106:118 146:1091 1094:1106 1134:1548 1551:1563 1591:1949
.%var $l0000!dma_out0x[2] 0 R
.%liverange 0 $W7 102:145 1090:1133 1547:1590
.%liverange 0 ~$W7 47:101 146:1089 1134:1546 1591:1949
.%var $l0000!dma_out0x[1] 0 R
.%liverange 0 $W6 101:145 1089:1133 1546:1590
.%liverange 0 ~$W6 47:100 146:1088 1134:1545 1591:1949
.%var $l0000!dma_out0x[0] 0 R
.%liverange 0 $W5 94:145 1082:1133 1539:1590
.%liverange 0 ~$W5 47:93 146:1081 1134:1538 1591:1949
.%var $l0000!dma_out0[3] 0 R
.%liverange 0 $W4 88:145 159:160 173:199 206:212 1076:1133 1147:1148 1161:1187 1194:1200 1533:1590 1604:1605 1618:1644 1651:1657
.%liverange 0 ~$W4 47:87 146:158 161:172 200:205 213:1075 1134:1146 1149:1160 1188:1193 1201:1532 1591:1603 1606:1617 1645:1650 1658:1949
.%var $l0000!dma_out0[2] 0 R
.%liverange 0 $W3 57:64 86:145 157:199 206:212 1045:1052 1074:1133 1145:1187 1194:1200 1502:1509 1531:1590 1602:1644 1651:1657
.%liverange 0 ~$W3 47:56 65:85 146:156 200:205 213:1044 1053:1073 1134:1144 1188:1193 1201:1501 1510:1530 1591:1601 1645:1650 1658:1949
.%var $l0000!dma_out0[1] 0 R
.%liverange 0 $W2 56:64 85:145 156:199 206:212 1044:1052 1073:1133 1144:1187 1194:1200 1501:1509 1530:1590 1601:1644 1651:1657
.%liverange 0 ~$W2 47:55 65:84 146:155 200:205 213:1043 1053:1072 1134:1143 1188:1193 1201:1500 1510:1529 1591:1600 1645:1650 1658:1949
.%var $l0000!dma_out0[0] 0 R
.%liverange 0 $W1 53:64 82:145 151:199 206:212 1041:1052 1070:1133 1139:1187 1194:1200 1498:1509 1527:1590 1596:1644 1651:1657
.%liverange 0 ~$W1 47:52 65:81 146:150 200:205 213:1040 1053:1069 1134:1138 1188:1193 1201:1497 1510:1526 1591:1595 1645:1650 1658:1949
.%var $l0000!work_in0[4] 0 R
.%liverange 0 $R5 42:1949
.%var $l0000!work_in0[3] 0 R
.%liverange 0 $R4 42:1949
.%var $l0000!work_in0[2] 0 R
.%liverange 0 $R3 42:1949
.%var $l0000!work_in0[1] 0 R
.%liverange 0 $R2 42:1949
.%var $l0000!work_in0[0] 0 R
.%liverange 0 $R1 42:1949
.%var @l0000!ndequeued 0 R
.%liverange 0 @B10 0:1949
.%var l0000!g_num_ticket_errors 0 R
.%liverange 0 B9 0:1949
.%var l0000!g_dma_max 0 R
.%liverange 0 B8 0:1949
.%var l0000!g_pcie_addr_hi 0 R
.%liverange 0 B7 0:1949
.%var l0000!g_pcie_addr_lo 0 R
.%liverange 0 A8 0:1949
.%var l0000!g_in_wq_lo 0 R
.%liverange 0 A7 0:1949
.%var l0000!g_in_wq_hi 0 R
.%liverange 0 B6 0:1949
.%var l0000!g_add_imm_iref 0 R
.%liverange 0 A6 0:1949
.%var l0000!g_blm_iref 0 R
.%liverange 0 B5 0:1949
.%var l0000!g_blm_addr_hi 0 R
.%liverange 0 A5 0:1949
.%var l0000!g_send_cntrs_addr_hi 0 R
.%liverange 0 A4 0:1949
.%var l0000!g_pkt_free_hi 0 R
.%liverange 0 A3 0:1949
.%var l0000!g_pkt_num_mask 0 R
.%liverange 0 B4 0:1949
.%var l0000!g_seq_mask 0 R
.%liverange 0 A2 0:1949
.%var l0000!g_bitmap_base 0 R
.%liverange 0 B3 0:1949
.%var l0000!g_dma_word3_vals 0 R
.%liverange 0 B2 0:1949
.%var l0000!g_dma_word1_vals 0 R
.%liverange 0 B1 0:1949
.%var l0000!g_dma_word0_mask 0 R
.%liverange 0 A1 0:1949
.%var l0000!g_sbpd_wq_lo 0 R
.%liverange 0 B0 7:1949
.%var l0000!g_sbpd_wq_hi 0 R
.%liverange 0 A0 6:1949
.%var l0231!_ixp_future_count_signal_name 1 R
.%liverange 0 G7 1940:1947
.%var l0229!ticket_sig 1 R
.%liverange 0 D8 1923:1927 1929:1929 1948:1948
.%var l0228!_ixp_future_count_signal_name 1 R
.%liverange 0 G7 1905:1912
.%var l0226!ticket_sig 1 R
.%liverange 0 D8 1888:1892 1894:1894 1913:1913
.%var l0225!_ixp_future_count_signal_name 1 R
.%liverange 0 G7 1870:1877
.%var l0223!ticket_sig 1 R
.%liverange 0 D8 1853:1857 1859:1859 1878:1878
.%var l0156!_ixp_future_count_signal_name 1 R
.%liverange 0 G7 1306:1313
.%var l0154!ticket_sig 1 R
.%liverange 0 D8 1289:1293 1295:1295 1314:1314
.%var l0153!_ixp_future_count_signal_name 1 R
.%liverange 0 G7 1271:1278
.%var l0151!ticket_sig 1 R
.%liverange 0 D8 1254:1258 1260:1260 1279:1279
.%var l0150!_ixp_future_count_signal_name 1 R
.%liverange 0 G7 1236:1243
.%var l0148!ticket_sig 1 R
.%liverange 0 D8 1219:1223 1225:1225 1244:1244
.%var l0081!_ixp_future_count_signal_name 1 R
.%liverange 0 G7 672:679
.%var l0079!ticket_sig 1 R
.%liverange 0 D8 655:659 661:661 680:680
.%var l0078!_ixp_future_count_signal_name 1 R
.%liverange 0 G7 637:644
.%var l0076!ticket_sig 1 R
.%liverange 0 D8 620:624 626:626 645:645
.%var l0075!_ixp_future_count_signal_name 1 R
.%liverange 0 G7 602:609
.%var l0073!ticket_sig 1 R
.%liverange 0 D8 585:589 591:591 610:610
.%var l0000!dma_sig2 1 R
.%liverange 0 G6 0:44 47:68 72:98 102:128 132:133 136:153 157:182 186:187 190:203 206:245 249:275 279:305 309:310 313:330 334:359 363:364 367:380 383:422 426:452 456:482 486:487 490:507 511:536 540:541 544:557 560:577 581:606 609:612 616:641 644:647 651:676 679:702 706:732 736:762 766:767 770:787 791:816 820:821 824:837 840:879 883:909 913:939 943:944 947:964 968:993 997:998 1001:1014 1017:1056 1060:1086 1090:1116 1120:1121 1124:1141 1145:1170 1174:1175 1178:1191 1194:1211 1215:1240 1243:1246 1250:1275 1278:1281 1285:1310 1313:1336 1340:1366 1370:1396 1400:1401 1404:1421 1425:1450 1454:1455 1458:1513 1517:1543 1547:1573 1577:1578 1581:1598 1602:1627 1631:1632 1635:1690 1694:1720 1724:1750 1754:1755 1758:1775 1779:1804 1808:1809 1812:1845 1849:1874 1877:1880 1884:1909 1912:1915 1919:1944 1947:1949
.%var l0000!work_sig2 1 R
.%liverange 0 G5 0:422 426:452 456:482 486:487 490:507 511:536 540:541 544:557 560:577 581:606 609:879 883:909 913:939 943:944 947:964 968:993 997:998 1001:1014 1017:1056 1060:1086 1090:1116 1120:1121 1124:1141 1145:1170 1174:1175 1178:1191 1194:1211 1215:1240 1243:1281 1285:1310 1313:1336 1340:1366 1370:1396 1400:1401 1404:1421 1425:1450 1454:1455 1458:1471 1474:1513 1517:1543 1547:1573 1577:1578 1581:1598 1602:1627 1631:1632 1635:1648 1651:1690 1694:1720 1724:1750 1754:1755 1758:1775 1779:1804 1808:1809 1812:1825 1828:1845 1849:1874 1877:1880 1884:1909 1912:1915 1919:1944 1947:1949
.%var l0000!dma_sig1 1 R
.%liverange 0 G4 0:44 47:68 72:98 102:128 132:133 136:153 157:182 186:187 190:203 206:245 249:275 279:305 309:310 313:330 334:359 363:364 367:380 383:422 426:452 456:482 486:487 490:507 511:536 540:541 544:557 560:577 581:606 609:612 616:641 644:647 651:676 679:702 706:732 736:762 766:767 770:787 791:816 820:821 824:879 883:909 913:939 943:944 947:964 968:993 997:998 1001:1056 1060:1086 1090:1116 1120:1121 1124:1141 1145:1170 1174:1175 1178:1211 1215:1240 1243:1246 1250:1275 1278:1281 1285:1310 1313:1336 1340:1366 1370:1396 1400:1401 1404:1421 1425:1450 1454:1455 1458:1471 1474:1513 1517:1543 1547:1573 1577:1578 1581:1598 1602:1627 1631:1632 1635:1648 1651:1690 1694:1720 1724:1750 1754:1755 1758:1775 1779:1804 1808:1809 1812:1825 1828:1845 1849:1874 1877:1880 1884:1909 1912:1915 1919:1944 1947:1949
.%var l0000!work_sig1 1 R
.%liverange 0 G3 0:245 249:275 279:305 309:310 313:330 334:359 363:364 367:380 383:422 426:452 456:482 486:487 490:507 511:536 540:541 544:557 560:577 581:606 609:647 651:676 679:702 706:732 736:762 766:767 770:787 791:816 820:821 824:837 840:879 883:909 913:939 943:944 947:964 968:993 997:998 1001:1014 1017:1056 1060:1086 1090:1116 1120:1121 1124:1141 1145:1170 1174:1175 1178:1191 1194:1211 1215:1240 1243:1246 1250:1275 1278:1281 1285:1310 1313:1690 1694:1720 1724:1750 1754:1755 1758:1775 1779:1804 1808:1809 1812:1825 1828:1845 1849:1874 1877:1949
.%var l0000!dma_sig0 1 R
.%liverange 0 G2 0:44 47:68 72:98 102:128 132:133 136:153 157:182 186:187 190:245 249:275 279:305 309:310 313:330 334:359 363:364 367:422 426:452 456:482 486:487 490:507 511:536 540:541 544:577 581:606 609:612 616:641 644:647 651:676 679:702 706:732 736:762 766:767 770:787 791:816 820:821 824:837 840:879 883:909 913:939 943:944 947:964 968:993 997:998 1001:1014 1017:1056 1060:1086 1090:1116 1120:1121 1124:1141 1145:1170 1174:1175 1178:1191 1194:1211 1215:1240 1243:1246 1250:1275 1278:1281 1285:1310 1313:1336 1340:1366 1370:1396 1400:1401 1404:1421 1425:1450 1454:1455 1458:1471 1474:1513 1517:1543 1547:1573 1577:1578 1581:1598 1602:1627 1631:1632 1635:1648 1651:1690 1694:1720 1724:1750 1754:1755 1758:1775 1779:1804 1808:1809 1812:1825 1828:1845 1849:1874 1877:1880 1884:1909 1912:1915 1919:1944 1947:1949
.%var l0000!work_sig0 1 R
.%liverange 0 G1 0:68 72:98 102:128 132:133 136:153 157:182 186:187 190:203 206:245 249:275 279:305 309:310 313:330 334:359 363:364 367:380 383:422 426:452 456:482 486:487 490:507 511:536 540:541 544:557 560:577 581:606 609:612 616:641 644:647 651:676 679:1056 1060:1086 1090:1116 1120:1121 1124:1141 1145:1170 1174:1175 1178:1191 1194:1211 1215:1240 1243:1513 1517:1543 1547:1573 1577:1578 1581:1598 1602:1627 1631:1632 1635:1648 1651:1690 1694:1720 1724:1750 1754:1755 1758:1775 1779:1804 1808:1809 1812:1825 1828:1845 1849:1874 1877:1915 1919:1944 1947:1949
.%scope end
.%import_expr common_code 6 <27:20:8,7:0:0> nfd_out_sb_ring_num0 &v 0x2 << 0xFFFF &
.%import_expr common_code 7 <27:20:8,7:0:0> nfd_out_sb_ring_num0 &v 0x2 << 0x10 >> 0xFFFF &
.%import_expr common_code 17 <27:20:8,17:10:0> __island &i 0xFFFF &
.%import_expr common_code 18 <27:20:8,17:10:0> __island &i 0x10 >> 0xFFFF &
.%import_expr common_code 20 <27:20:8,17:10:0> __meid &i 0xF & 0xFFFF &
.%import_expr common_code 21 <27:20:8,17:10:0> __meid &i 0xF & 0x10 >> 0xFFFF &
.%import_expr common_code 24 <27:20:8,7:0:0> nfd_out_sb_release0 &v 0xFFFF &
.%import_expr common_code 25 <27:20:8,7:0:0> nfd_out_sb_release0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 29 <27:20:8,17:10:0> nfd_out_atomics0 &v 0x8 >> 0xFFFF &
.%import_expr common_code 30 <27:20:8,17:10:0> nfd_out_atomics0 &v 0x8 >> 0x10 >> 0xFFFF &
.%import_expr common_code 32 <27:20:8,17:10:0> BLM_NBI8_BLQ0_EMU_QID &v 0xFFFF &
.%import_expr common_code 33 <27:20:8,17:10:0> BLM_NBI8_BLQ0_EMU_QID &v 0x10 >> 0xFFFF &
.%import_expr common_code 35 <27:20:8,17:10:0> __addr_emem0 &i 0x8 >> 0xFF000000 & 0xFFFF &
.%import_expr common_code 36 <27:20:8,17:10:0> __addr_emem0 &i 0x8 >> 0xFF000000 & 0x10 >> 0xFFFF &
.%import_expr common_code 213 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 214 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 390 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 391 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 567 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 568 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 847 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 848 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 1024 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 1025 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 1201 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 1202 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 1481 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 1482 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 1658 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 1659 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 1835 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 1836 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 1949 <40:40:13,34:22:0> 1949 &bp +
.%import_expr common_code 1948 <40:40:13,34:22:0> 1929 &bp +
.%import_expr common_code 1934 <40:40:13,34:22:0> 222 &bp +
.%import_expr common_code 1930 <40:40:13,34:22:0> 1935 &bp +
.%import_expr common_code 1929 <40:40:13,34:22:0> 1933 &bp +
.%import_expr common_code 1915 <40:40:13,34:22:0> 1922 &bp +
.%import_expr common_code 1913 <40:40:13,34:22:0> 1894 &bp +
.%import_expr common_code 1899 <40:40:13,34:22:0> 47 &bp +
.%import_expr common_code 1895 <40:40:13,34:22:0> 1900 &bp +
.%import_expr common_code 1894 <40:40:13,34:22:0> 1898 &bp +
.%import_expr common_code 1880 <40:40:13,34:22:0> 1887 &bp +
.%import_expr common_code 1878 <40:40:13,34:22:0> 1859 &bp +
.%import_expr common_code 1864 <40:40:13,34:22:0> 399 &bp +
.%import_expr common_code 1860 <40:40:13,34:22:0> 1865 &bp +
.%import_expr common_code 1859 <40:40:13,34:22:0> 1863 &bp +
.%import_expr common_code 1845 <40:40:13,34:22:0> 1852 &bp +
.%import_expr common_code 1842 <40:40:13,34:22:0> 1671 &bp +
.%import_expr common_code 1834 <40:40:13,34:22:0> 1828 &bp +
.%import_expr common_code 1825 <40:40:13,34:22:0> 1844 &bp +
.%import_expr common_code 1821 <40:40:13,34:22:0> 1844 &bp +
.%import_expr common_code 1820 <40:40:13,34:22:0> 1800 &bp +
.%import_expr common_code 1809 <40:40:13,34:22:0> 1818 &bp +
.%import_expr common_code 1804 <40:40:13,34:22:0> 1812 &bp +
.%import_expr common_code 1792 <40:40:13,34:22:0> 1786 &bp +
.%import_expr common_code 1785 <40:40:13,34:22:0> 1793 &bp +
.%import_expr common_code 1782 <40:40:13,34:22:0> 1821 &bp +
.%import_expr common_code 1775 <40:40:13,34:22:0> 1783 &bp +
.%import_expr common_code 1767 <40:40:13,34:22:0> 1844 &bp +
.%import_expr common_code 1766 <40:40:13,34:22:0> 1746 &bp +
.%import_expr common_code 1755 <40:40:13,34:22:0> 1764 &bp +
.%import_expr common_code 1750 <40:40:13,34:22:0> 1758 &bp +
.%import_expr common_code 1738 <40:40:13,34:22:0> 1732 &bp +
.%import_expr common_code 1731 <40:40:13,34:22:0> 1739 &bp +
.%import_expr common_code 1727 <40:40:13,34:22:0> 1767 &bp +
.%import_expr common_code 1720 <40:40:13,34:22:0> 1728 &bp +
.%import_expr common_code 1712 <40:40:13,34:22:0> 1828 &bp +
.%import_expr common_code 1701 <40:40:13,34:22:0> 1768 &bp +
.%import_expr common_code 1690 <40:40:13,34:22:0> 1768 &bp +
.%import_expr common_code 1684 <40:40:13,34:22:0> 1844 &bp +
.%import_expr common_code 1672 <40:40:13,34:22:0> 1687 &bp +
.%import_expr common_code 1671 <40:40:13,34:22:0> 1822 &bp +
.%import_expr common_code 1670 <40:40:13,34:22:0> 1835 &bp +
.%import_expr common_code 1668 <40:40:13,34:22:0> 1949 &bp +
.%import_expr common_code 1667 <40:40:13,34:22:0> 1914 &bp +
.%import_expr common_code 1665 <40:40:13,34:22:0> 1494 &bp +
.%import_expr common_code 1657 <40:40:13,34:22:0> 1651 &bp +
.%import_expr common_code 1648 <40:40:13,34:22:0> 1667 &bp +
.%import_expr common_code 1644 <40:40:13,34:22:0> 1667 &bp +
.%import_expr common_code 1643 <40:40:13,34:22:0> 1623 &bp +
.%import_expr common_code 1632 <40:40:13,34:22:0> 1641 &bp +
.%import_expr common_code 1627 <40:40:13,34:22:0> 1635 &bp +
.%import_expr common_code 1615 <40:40:13,34:22:0> 1609 &bp +
.%import_expr common_code 1608 <40:40:13,34:22:0> 1616 &bp +
.%import_expr common_code 1605 <40:40:13,34:22:0> 1644 &bp +
.%import_expr common_code 1598 <40:40:13,34:22:0> 1606 &bp +
.%import_expr common_code 1590 <40:40:13,34:22:0> 1667 &bp +
.%import_expr common_code 1589 <40:40:13,34:22:0> 1569 &bp +
.%import_expr common_code 1578 <40:40:13,34:22:0> 1587 &bp +
.%import_expr common_code 1573 <40:40:13,34:22:0> 1581 &bp +
.%import_expr common_code 1561 <40:40:13,34:22:0> 1555 &bp +
.%import_expr common_code 1554 <40:40:13,34:22:0> 1562 &bp +
.%import_expr common_code 1550 <40:40:13,34:22:0> 1590 &bp +
.%import_expr common_code 1543 <40:40:13,34:22:0> 1551 &bp +
.%import_expr common_code 1535 <40:40:13,34:22:0> 1651 &bp +
.%import_expr common_code 1524 <40:40:13,34:22:0> 1591 &bp +
.%import_expr common_code 1513 <40:40:13,34:22:0> 1591 &bp +
.%import_expr common_code 1507 <40:40:13,34:22:0> 1667 &bp +
.%import_expr common_code 1495 <40:40:13,34:22:0> 1510 &bp +
.%import_expr common_code 1494 <40:40:13,34:22:0> 1645 &bp +
.%import_expr common_code 1493 <40:40:13,34:22:0> 1658 &bp +
.%import_expr common_code 1491 <40:40:13,34:22:0> 1949 &bp +
.%import_expr common_code 1490 <40:40:13,34:22:0> 1879 &bp +
.%import_expr common_code 1488 <40:40:13,34:22:0> 1317 &bp +
.%import_expr common_code 1480 <40:40:13,34:22:0> 1474 &bp +
.%import_expr common_code 1471 <40:40:13,34:22:0> 1490 &bp +
.%import_expr common_code 1467 <40:40:13,34:22:0> 1490 &bp +
.%import_expr common_code 1466 <40:40:13,34:22:0> 1446 &bp +
.%import_expr common_code 1455 <40:40:13,34:22:0> 1464 &bp +
.%import_expr common_code 1450 <40:40:13,34:22:0> 1458 &bp +
.%import_expr common_code 1438 <40:40:13,34:22:0> 1432 &bp +
.%import_expr common_code 1431 <40:40:13,34:22:0> 1439 &bp +
.%import_expr common_code 1428 <40:40:13,34:22:0> 1467 &bp +
.%import_expr common_code 1421 <40:40:13,34:22:0> 1429 &bp +
.%import_expr common_code 1413 <40:40:13,34:22:0> 1490 &bp +
.%import_expr common_code 1412 <40:40:13,34:22:0> 1392 &bp +
.%import_expr common_code 1401 <40:40:13,34:22:0> 1410 &bp +
.%import_expr common_code 1396 <40:40:13,34:22:0> 1404 &bp +
.%import_expr common_code 1384 <40:40:13,34:22:0> 1378 &bp +
.%import_expr common_code 1377 <40:40:13,34:22:0> 1385 &bp +
.%import_expr common_code 1373 <40:40:13,34:22:0> 1413 &bp +
.%import_expr common_code 1366 <40:40:13,34:22:0> 1374 &bp +
.%import_expr common_code 1358 <40:40:13,34:22:0> 1474 &bp +
.%import_expr common_code 1347 <40:40:13,34:22:0> 1414 &bp +
.%import_expr common_code 1336 <40:40:13,34:22:0> 1414 &bp +
.%import_expr common_code 1330 <40:40:13,34:22:0> 1490 &bp +
.%import_expr common_code 1318 <40:40:13,34:22:0> 1333 &bp +
.%import_expr common_code 1317 <40:40:13,34:22:0> 1468 &bp +
.%import_expr common_code 1316 <40:40:13,34:22:0> 1481 &bp +
.%import_expr common_code 1314 <40:40:13,34:22:0> 1295 &bp +
.%import_expr common_code 1300 <40:40:13,34:22:0> 1490 &bp +
.%import_expr common_code 1296 <40:40:13,34:22:0> 1301 &bp +
.%import_expr common_code 1295 <40:40:13,34:22:0> 1299 &bp +
.%import_expr common_code 1281 <40:40:13,34:22:0> 1288 &bp +
.%import_expr common_code 1279 <40:40:13,34:22:0> 1260 &bp +
.%import_expr common_code 1265 <40:40:13,34:22:0> 1315 &bp +
.%import_expr common_code 1261 <40:40:13,34:22:0> 1266 &bp +
.%import_expr common_code 1260 <40:40:13,34:22:0> 1264 &bp +
.%import_expr common_code 1246 <40:40:13,34:22:0> 1253 &bp +
.%import_expr common_code 1244 <40:40:13,34:22:0> 1225 &bp +
.%import_expr common_code 1230 <40:40:13,34:22:0> 1667 &bp +
.%import_expr common_code 1226 <40:40:13,34:22:0> 1231 &bp +
.%import_expr common_code 1225 <40:40:13,34:22:0> 1229 &bp +
.%import_expr common_code 1211 <40:40:13,34:22:0> 1218 &bp +
.%import_expr common_code 1208 <40:40:13,34:22:0> 1037 &bp +
.%import_expr common_code 1200 <40:40:13,34:22:0> 1194 &bp +
.%import_expr common_code 1191 <40:40:13,34:22:0> 1210 &bp +
.%import_expr common_code 1187 <40:40:13,34:22:0> 1210 &bp +
.%import_expr common_code 1186 <40:40:13,34:22:0> 1166 &bp +
.%import_expr common_code 1175 <40:40:13,34:22:0> 1184 &bp +
.%import_expr common_code 1170 <40:40:13,34:22:0> 1178 &bp +
.%import_expr common_code 1158 <40:40:13,34:22:0> 1152 &bp +
.%import_expr common_code 1151 <40:40:13,34:22:0> 1159 &bp +
.%import_expr common_code 1148 <40:40:13,34:22:0> 1187 &bp +
.%import_expr common_code 1141 <40:40:13,34:22:0> 1149 &bp +
.%import_expr common_code 1133 <40:40:13,34:22:0> 1210 &bp +
.%import_expr common_code 1132 <40:40:13,34:22:0> 1112 &bp +
.%import_expr common_code 1121 <40:40:13,34:22:0> 1130 &bp +
.%import_expr common_code 1116 <40:40:13,34:22:0> 1124 &bp +
.%import_expr common_code 1104 <40:40:13,34:22:0> 1098 &bp +
.%import_expr common_code 1097 <40:40:13,34:22:0> 1105 &bp +
.%import_expr common_code 1093 <40:40:13,34:22:0> 1133 &bp +
.%import_expr common_code 1086 <40:40:13,34:22:0> 1094 &bp +
.%import_expr common_code 1078 <40:40:13,34:22:0> 1194 &bp +
.%import_expr common_code 1067 <40:40:13,34:22:0> 1134 &bp +
.%import_expr common_code 1056 <40:40:13,34:22:0> 1134 &bp +
.%import_expr common_code 1050 <40:40:13,34:22:0> 1210 &bp +
.%import_expr common_code 1038 <40:40:13,34:22:0> 1053 &bp +
.%import_expr common_code 1037 <40:40:13,34:22:0> 1188 &bp +
.%import_expr common_code 1036 <40:40:13,34:22:0> 1201 &bp +
.%import_expr common_code 1034 <40:40:13,34:22:0> 1949 &bp +
.%import_expr common_code 1033 <40:40:13,34:22:0> 1280 &bp +
.%import_expr common_code 1031 <40:40:13,34:22:0> 860 &bp +
.%import_expr common_code 1023 <40:40:13,34:22:0> 1017 &bp +
.%import_expr common_code 1014 <40:40:13,34:22:0> 1033 &bp +
.%import_expr common_code 1010 <40:40:13,34:22:0> 1033 &bp +
.%import_expr common_code 1009 <40:40:13,34:22:0> 989 &bp +
.%import_expr common_code 998 <40:40:13,34:22:0> 1007 &bp +
.%import_expr common_code 993 <40:40:13,34:22:0> 1001 &bp +
.%import_expr common_code 981 <40:40:13,34:22:0> 975 &bp +
.%import_expr common_code 974 <40:40:13,34:22:0> 982 &bp +
.%import_expr common_code 971 <40:40:13,34:22:0> 1010 &bp +
.%import_expr common_code 964 <40:40:13,34:22:0> 972 &bp +
.%import_expr common_code 956 <40:40:13,34:22:0> 1033 &bp +
.%import_expr common_code 955 <40:40:13,34:22:0> 935 &bp +
.%import_expr common_code 944 <40:40:13,34:22:0> 953 &bp +
.%import_expr common_code 939 <40:40:13,34:22:0> 947 &bp +
.%import_expr common_code 927 <40:40:13,34:22:0> 921 &bp +
.%import_expr common_code 920 <40:40:13,34:22:0> 928 &bp +
.%import_expr common_code 916 <40:40:13,34:22:0> 956 &bp +
.%import_expr common_code 909 <40:40:13,34:22:0> 917 &bp +
.%import_expr common_code 901 <40:40:13,34:22:0> 1017 &bp +
.%import_expr common_code 890 <40:40:13,34:22:0> 957 &bp +
.%import_expr common_code 879 <40:40:13,34:22:0> 957 &bp +
.%import_expr common_code 873 <40:40:13,34:22:0> 1033 &bp +
.%import_expr common_code 861 <40:40:13,34:22:0> 876 &bp +
.%import_expr common_code 860 <40:40:13,34:22:0> 1011 &bp +
.%import_expr common_code 859 <40:40:13,34:22:0> 1024 &bp +
.%import_expr common_code 857 <40:40:13,34:22:0> 1949 &bp +
.%import_expr common_code 856 <40:40:13,34:22:0> 1245 &bp +
.%import_expr common_code 854 <40:40:13,34:22:0> 683 &bp +
.%import_expr common_code 846 <40:40:13,34:22:0> 840 &bp +
.%import_expr common_code 837 <40:40:13,34:22:0> 856 &bp +
.%import_expr common_code 833 <40:40:13,34:22:0> 856 &bp +
.%import_expr common_code 832 <40:40:13,34:22:0> 812 &bp +
.%import_expr common_code 821 <40:40:13,34:22:0> 830 &bp +
.%import_expr common_code 816 <40:40:13,34:22:0> 824 &bp +
.%import_expr common_code 804 <40:40:13,34:22:0> 798 &bp +
.%import_expr common_code 797 <40:40:13,34:22:0> 805 &bp +
.%import_expr common_code 794 <40:40:13,34:22:0> 833 &bp +
.%import_expr common_code 787 <40:40:13,34:22:0> 795 &bp +
.%import_expr common_code 779 <40:40:13,34:22:0> 856 &bp +
.%import_expr common_code 778 <40:40:13,34:22:0> 758 &bp +
.%import_expr common_code 767 <40:40:13,34:22:0> 776 &bp +
.%import_expr common_code 762 <40:40:13,34:22:0> 770 &bp +
.%import_expr common_code 750 <40:40:13,34:22:0> 744 &bp +
.%import_expr common_code 743 <40:40:13,34:22:0> 751 &bp +
.%import_expr common_code 739 <40:40:13,34:22:0> 779 &bp +
.%import_expr common_code 732 <40:40:13,34:22:0> 740 &bp +
.%import_expr common_code 724 <40:40:13,34:22:0> 840 &bp +
.%import_expr common_code 713 <40:40:13,34:22:0> 780 &bp +
.%import_expr common_code 702 <40:40:13,34:22:0> 780 &bp +
.%import_expr common_code 696 <40:40:13,34:22:0> 856 &bp +
.%import_expr common_code 684 <40:40:13,34:22:0> 699 &bp +
.%import_expr common_code 683 <40:40:13,34:22:0> 834 &bp +
.%import_expr common_code 682 <40:40:13,34:22:0> 847 &bp +
.%import_expr common_code 680 <40:40:13,34:22:0> 661 &bp +
.%import_expr common_code 666 <40:40:13,34:22:0> 856 &bp +
.%import_expr common_code 662 <40:40:13,34:22:0> 667 &bp +
.%import_expr common_code 661 <40:40:13,34:22:0> 665 &bp +
.%import_expr common_code 647 <40:40:13,34:22:0> 654 &bp +
.%import_expr common_code 645 <40:40:13,34:22:0> 626 &bp +
.%import_expr common_code 631 <40:40:13,34:22:0> 681 &bp +
.%import_expr common_code 627 <40:40:13,34:22:0> 632 &bp +
.%import_expr common_code 626 <40:40:13,34:22:0> 630 &bp +
.%import_expr common_code 612 <40:40:13,34:22:0> 619 &bp +
.%import_expr common_code 610 <40:40:13,34:22:0> 591 &bp +
.%import_expr common_code 596 <40:40:13,34:22:0> 1033 &bp +
.%import_expr common_code 592 <40:40:13,34:22:0> 597 &bp +
.%import_expr common_code 591 <40:40:13,34:22:0> 595 &bp +
.%import_expr common_code 577 <40:40:13,34:22:0> 584 &bp +
.%import_expr common_code 574 <40:40:13,34:22:0> 403 &bp +
.%import_expr common_code 566 <40:40:13,34:22:0> 560 &bp +
.%import_expr common_code 557 <40:40:13,34:22:0> 576 &bp +
.%import_expr common_code 553 <40:40:13,34:22:0> 576 &bp +
.%import_expr common_code 552 <40:40:13,34:22:0> 532 &bp +
.%import_expr common_code 541 <40:40:13,34:22:0> 550 &bp +
.%import_expr common_code 536 <40:40:13,34:22:0> 544 &bp +
.%import_expr common_code 524 <40:40:13,34:22:0> 518 &bp +
.%import_expr common_code 517 <40:40:13,34:22:0> 525 &bp +
.%import_expr common_code 514 <40:40:13,34:22:0> 553 &bp +
.%import_expr common_code 507 <40:40:13,34:22:0> 515 &bp +
.%import_expr common_code 499 <40:40:13,34:22:0> 576 &bp +
.%import_expr common_code 498 <40:40:13,34:22:0> 478 &bp +
.%import_expr common_code 487 <40:40:13,34:22:0> 496 &bp +
.%import_expr common_code 482 <40:40:13,34:22:0> 490 &bp +
.%import_expr common_code 470 <40:40:13,34:22:0> 464 &bp +
.%import_expr common_code 463 <40:40:13,34:22:0> 471 &bp +
.%import_expr common_code 459 <40:40:13,34:22:0> 499 &bp +
.%import_expr common_code 452 <40:40:13,34:22:0> 460 &bp +
.%import_expr common_code 444 <40:40:13,34:22:0> 560 &bp +
.%import_expr common_code 433 <40:40:13,34:22:0> 500 &bp +
.%import_expr common_code 422 <40:40:13,34:22:0> 500 &bp +
.%import_expr common_code 416 <40:40:13,34:22:0> 576 &bp +
.%import_expr common_code 404 <40:40:13,34:22:0> 419 &bp +
.%import_expr common_code 403 <40:40:13,34:22:0> 554 &bp +
.%import_expr common_code 402 <40:40:13,34:22:0> 567 &bp +
.%import_expr common_code 400 <40:40:13,34:22:0> 1949 &bp +
.%import_expr common_code 399 <40:40:13,34:22:0> 646 &bp +
.%import_expr common_code 397 <40:40:13,34:22:0> 226 &bp +
.%import_expr common_code 389 <40:40:13,34:22:0> 383 &bp +
.%import_expr common_code 380 <40:40:13,34:22:0> 399 &bp +
.%import_expr common_code 376 <40:40:13,34:22:0> 399 &bp +
.%import_expr common_code 375 <40:40:13,34:22:0> 355 &bp +
.%import_expr common_code 364 <40:40:13,34:22:0> 373 &bp +
.%import_expr common_code 359 <40:40:13,34:22:0> 367 &bp +
.%import_expr common_code 347 <40:40:13,34:22:0> 341 &bp +
.%import_expr common_code 340 <40:40:13,34:22:0> 348 &bp +
.%import_expr common_code 337 <40:40:13,34:22:0> 376 &bp +
.%import_expr common_code 330 <40:40:13,34:22:0> 338 &bp +
.%import_expr common_code 322 <40:40:13,34:22:0> 399 &bp +
.%import_expr common_code 321 <40:40:13,34:22:0> 301 &bp +
.%import_expr common_code 310 <40:40:13,34:22:0> 319 &bp +
.%import_expr common_code 305 <40:40:13,34:22:0> 313 &bp +
.%import_expr common_code 293 <40:40:13,34:22:0> 287 &bp +
.%import_expr common_code 286 <40:40:13,34:22:0> 294 &bp +
.%import_expr common_code 282 <40:40:13,34:22:0> 322 &bp +
.%import_expr common_code 275 <40:40:13,34:22:0> 283 &bp +
.%import_expr common_code 267 <40:40:13,34:22:0> 383 &bp +
.%import_expr common_code 256 <40:40:13,34:22:0> 323 &bp +
.%import_expr common_code 245 <40:40:13,34:22:0> 323 &bp +
.%import_expr common_code 239 <40:40:13,34:22:0> 399 &bp +
.%import_expr common_code 227 <40:40:13,34:22:0> 242 &bp +
.%import_expr common_code 226 <40:40:13,34:22:0> 377 &bp +
.%import_expr common_code 225 <40:40:13,34:22:0> 390 &bp +
.%import_expr common_code 223 <40:40:13,34:22:0> 1949 &bp +
.%import_expr common_code 222 <40:40:13,34:22:0> 611 &bp +
.%import_expr common_code 220 <40:40:13,34:22:0> 49 &bp +
.%import_expr common_code 212 <40:40:13,34:22:0> 206 &bp +
.%import_expr common_code 203 <40:40:13,34:22:0> 222 &bp +
.%import_expr common_code 199 <40:40:13,34:22:0> 222 &bp +
.%import_expr common_code 198 <40:40:13,34:22:0> 178 &bp +
.%import_expr common_code 187 <40:40:13,34:22:0> 196 &bp +
.%import_expr common_code 182 <40:40:13,34:22:0> 190 &bp +
.%import_expr common_code 170 <40:40:13,34:22:0> 164 &bp +
.%import_expr common_code 163 <40:40:13,34:22:0> 171 &bp +
.%import_expr common_code 160 <40:40:13,34:22:0> 199 &bp +
.%import_expr common_code 153 <40:40:13,34:22:0> 161 &bp +
.%import_expr common_code 145 <40:40:13,34:22:0> 222 &bp +
.%import_expr common_code 144 <40:40:13,34:22:0> 124 &bp +
.%import_expr common_code 133 <40:40:13,34:22:0> 142 &bp +
.%import_expr common_code 128 <40:40:13,34:22:0> 136 &bp +
.%import_expr common_code 116 <40:40:13,34:22:0> 110 &bp +
.%import_expr common_code 109 <40:40:13,34:22:0> 117 &bp +
.%import_expr common_code 105 <40:40:13,34:22:0> 145 &bp +
.%import_expr common_code 98 <40:40:13,34:22:0> 106 &bp +
.%import_expr common_code 90 <40:40:13,34:22:0> 206 &bp +
.%import_expr common_code 79 <40:40:13,34:22:0> 146 &bp +
.%import_expr common_code 68 <40:40:13,34:22:0> 146 &bp +
.%import_expr common_code 62 <40:40:13,34:22:0> 222 &bp +
.%import_expr common_code 50 <40:40:13,34:22:0> 65 &bp +
.%import_expr common_code 49 <40:40:13,34:22:0> 200 &bp +
.%import_expr common_code 48 <40:40:13,34:22:0> 213 &bp +
.%import_expr common_code 44 <40:40:13,34:22:0> 47 &bp +
.%import_expr common_code 0 <40:40:13,34:22:0> 5 &bp +
.%assert ("/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_pd.uc" 69) "(BLM_NBI8_BLQ0_EMU_QID & 0x3) == 0" BLM_NBI8_BLQ0_EMU_QID &v 0x3 & 0x0 ==
.0 00D801400031 common_code
	.page
	#pragma warningdisable: 5145
	        .declare_resource emem0_queues global 1024
	        .declare_resource emem1_queues global 1024
	.declare_resource cls_rings island 16
	    .declare_resource cls_apsignals island 16
	.declare_resource cls_apfilters island 16
	    .declare_resource pcie0_cpp2pcie_bars global 8
	    .declare_resource pcie0_dma_cfg_regs global 16
	    .declare_resource pcie0_topci_hi global 64
	    .declare_resource pcie0_topci_med global 64
	    .declare_resource pcie0_topci_lo global 128
	    .declare_resource pcie0_frompci_hi global 64
	    .declare_resource pcie0_frompci_med global 64
	    .declare_resource pcie0_frompci_lo global 128
	    .declare_resource pcie1_cpp2pcie_bars global 8
	    .declare_resource pcie1_dma_cfg_regs global 16
	    .declare_resource pcie1_topci_hi global 64
	    .declare_resource pcie1_topci_med global 64
	    .declare_resource pcie1_topci_lo global 128
	    .declare_resource pcie1_frompci_hi global 64
	    .declare_resource pcie1_frompci_med global 64
	    .declare_resource pcie1_frompci_lo global 128
	    .declare_resource BLQ_EMU_RINGS global 4 emem0_queues+4
	    .alloc_resource BLM_NBI8_BLQ0_EMU_QID BLQ_EMU_RINGS+0 global 1
	    .alloc_resource BLM_NBI8_BLQ1_EMU_QID BLQ_EMU_RINGS+1 global 1
	    .alloc_resource BLM_NBI8_BLQ2_EMU_QID BLQ_EMU_RINGS+2 global 1
	    .alloc_resource BLM_NBI8_BLQ3_EMU_QID BLQ_EMU_RINGS+3 global 1
	    .alloc_mem _BLM_NBI8_BLQ0_EMU_QD_BASE   i24.emem  global  16                      16
	    .alloc_mem _BLM_NBI8_BLQ1_EMU_QD_BASE   i24.emem  global  16                      16
	    .alloc_mem _BLM_NBI8_BLQ2_EMU_QD_BASE   i24.emem  global  16                      16
	    .alloc_mem _BLM_NBI8_BLQ3_EMU_QD_BASE   i24.emem  global  16                      16
	    .alloc_mem _BLM_NBI8_BLQ0_EMU_Q_BASE    i24.emem  global  32768    32768
	    .alloc_mem _BLM_NBI8_BLQ1_EMU_Q_BASE    i24.emem  global  2048    2048
	    .alloc_mem _BLM_NBI8_BLQ2_EMU_Q_BASE    i24.emem  global  2048    2048
	    .alloc_mem _BLM_NBI8_BLQ3_EMU_Q_BASE    i24.emem  global  2048    2048
	                    .alloc_mem _BLM_NBI8_BLQ0_EMU_EMEM0_BUFS_BASE emem0 global 41943040 2048
	                .alloc_mem _BLM_NBI8_BLQ0_BDSRAM_EMEM0_BUFS_BASE emem0 global 10485760 2048
	                .alloc_mem _BLM_NBI9_BLQ0_BDSRAM_EMEM0_BUFS_BASE emem0 global 10485760 2048
	.macro_ref nfd_cfg_define_bars(0)
	.alloc_mem nfd_cfg_base0 emem0 global     2097152 0x200000
	.end_macro_ref nfd_cfg_define_bars
	.alloc_mem nfd_out_atomics0     i4.ctm+0     global 1024
	.assert((BLM_NBI8_BLQ0_EMU_QID & 0x3) == 0)
	.macro_ref     PCIE_DMA_ALLOC(nfd_out_data_dma, me, 0, topci_lo,                    48)
	            .alloc_resource nfd_out_data_dma pcie0_topci_lo me 48
	.end_macro_ref     PCIE_DMA_ALLOC
	main#:
	.macro_ref     pci_out_sb_iface_declare()
	        .alloc_mem nfd_out_sb_release0 ctm island         1024 1024
	        .alloc_mem nfd_out_sb_wq_credits0 ctm island 4 4
	            .alloc_mem nfd_out_sb_wq_mem0 cls             island 4096 4096
	            .alloc_resource nfd_out_sb_ring_num0             cls_rings+15 island 1 1
	            .init_csr cls:Rings.RingBase15             (((nfd_out_sb_wq_mem0 >> 7) << 0) |              ((log2(1024) - 5) << 16))
	            .init_csr cls:Rings.RingPtrs15 0
	        .reg l0000!g_sbpd_wq_hi
	        .reg l0000!g_sbpd_wq_lo
	.end_macro_ref     pci_out_sb_iface_declare
	    .reg volatile l0000!g_dma_word0_mask
	    .reg volatile l0000!g_dma_word1_vals
	    .reg volatile l0000!g_dma_word3_vals
	    .reg volatile l0000!g_bitmap_base
	    .reg volatile l0000!g_seq_mask
	    .reg volatile l0000!g_pkt_num_mask
	    .reg volatile l0000!g_pkt_free_hi
	    .reg volatile l0000!g_send_cntrs_addr_hi
	    .reg volatile l0000!g_blm_addr_hi
	    .reg volatile l0000!g_blm_iref
	    .reg volatile l0000!g_add_imm_iref
	    .reg volatile l0000!g_in_wq_hi
	    .reg volatile l0000!g_in_wq_lo
	    .reg volatile l0000!g_pcie_addr_lo
	    .reg volatile l0000!g_pcie_addr_hi
	    .reg volatile l0000!g_dma_max
	    .reg volatile l0000!g_num_ticket_errors
	    .reg @l0000!ndequeued
	    .init @l0000!ndequeued 64
	    .reg read $l0000!work_in0[5]
	    .xfer_order $l0000!work_in0[0]
	    .reg write $l0000!dma_out0[4]
	    .xfer_order $l0000!dma_out0[0]
	    .reg write $l0000!dma_out0x[4]
	    .xfer_order $l0000!dma_out0x[0]
	    .sig volatile l0000!work_sig0
	    .sig volatile l0000!dma_sig0
	    .reg $l0000!work_in1[5]
	    .xfer_order $l0000!work_in1[0]
	    .reg $l0000!dma_out1[4]
	    .xfer_order $l0000!dma_out1[0]
	    .reg $l0000!dma_out1x[4]
	    .xfer_order $l0000!dma_out1x[0]
	    .sig volatile l0000!work_sig1
	    .sig volatile l0000!dma_sig1
	    .reg $l0000!work_in2[5]
	    .xfer_order $l0000!work_in2[0]
	    .reg $l0000!dma_out2[4]
	    .xfer_order $l0000!dma_out2[0]
	    .reg $l0000!dma_out2x[4]
	    .xfer_order $l0000!dma_out2x[0]
	    .sig volatile l0000!work_sig2
	    .sig volatile l0000!dma_sig2
	    .reg l0000!tmp
	    .if (ctx() == 0)
	M002#:
	    br!=ctx[0,l000_01#]
.1 00FC172C0300 common_code
	        local_csr_wr[mailbox0, 0]
.2 00FC176C0300 common_code
	        local_csr_wr[mailbox1, 0]
.3 00FC17AC0300 common_code
	        local_csr_wr[mailbox2, 0]
.4 00FC17EC0300 common_code
	        local_csr_wr[mailbox3, 0]
.5 00F0000C0000 common_code
	    .endif
	    l000_01#: 
	    l000_end#: 
	.macro_ref     pci_out_sb_iface_init()
	    .begin
	.macro_ref             move(l0000!g_sbpd_wq_hi, 0)
	.macro_ref                     immed32(l0000!g_sbpd_wq_hi, 0)
	                            immed[l0000!g_sbpd_wq_hi, 0]
.6 00F000000300 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	.macro_ref             move(l0000!g_sbpd_wq_lo, ((nfd_out_sb_ring_num0) << 2))
	.macro_ref                     immed32(l0000!g_sbpd_wq_lo, ((nfd_out_sb_ring_num0) << 2))
	                                immed[l0000!g_sbpd_wq_lo, ((((nfd_out_sb_ring_num0) << 2)) & 0xFFFF)]
.7 00F440000300 common_code
	                                immed_w1[l0000!g_sbpd_wq_lo, (((((nfd_out_sb_ring_num0) << 2)) >> 16) & 0xFFFF)]
.8 00F001FFFC01 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	    .end
	.end_macro_ref     pci_out_sb_iface_init
	.macro_ref     move(l0000!g_dma_word0_mask, 0x01FF1FFF)
	.macro_ref             immed32(l0000!g_dma_word0_mask, 0x01FF1FFF)
	                        immed[l0000!g_dma_word0_mask, 8191]
.9 00F4401FFC01 common_code
	                        immed_w1[l0000!g_dma_word0_mask, 511]
.10 00F000000780 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_dma_word1_vals, 0x80)
	.macro_ref             immed32(l0000!g_dma_word1_vals, 0x80)
	                    immed[l0000!g_dma_word1_vals, 128]
.11 009B80180626 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     sm_set_noclr(l0000!g_dma_word1_vals, PCIE_DMA_CFG_IDX, 6)
	.macro_ref         sm_set_noclr(l0000!g_dma_word1_vals, PCIE_DMA_CFG_IDX, 6, 0)
	.macro_ref             sm_set_noclr_to(l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, PCIE_DMA_CFG_IDX, 6, 0)
	            .begin
	.macro_ref                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                 _wsm_validate_size
	                alu_shf[l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, or, 6, <<8]
.12 009B40180622 common_code
	            .end
	.end_macro_ref             sm_set_noclr_to
	.end_macro_ref         sm_set_noclr
	.end_macro_ref     sm_set_noclr
	.macro_ref     sm_set_noclr(l0000!g_dma_word1_vals,  PCIE_DMA_TOKEN, 2)
	.macro_ref         sm_set_noclr(l0000!g_dma_word1_vals, PCIE_DMA_TOKEN, 2, 0)
	.macro_ref             sm_set_noclr_to(l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, PCIE_DMA_TOKEN, 2, 0)
	            .begin
	.macro_ref                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                 _wsm_validate_size
	                alu_shf[l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, or, 2, <<12]
.13 00FC044C0000 common_code
	            .end
	.end_macro_ref             sm_set_noclr_to
	.end_macro_ref         sm_set_noclr
	.end_macro_ref     sm_set_noclr
	    local_csr_rd[active_ctx_sts]
.14 00F000003300 common_code
	    immed[l0000!tmp, 0]
.15 00A440D03307 common_code
	    alu[l0000!tmp, l0000!tmp, and, 7]
.16 009AE018060D common_code
	.macro_ref     sm_set_noclr(l0000!g_dma_word1_vals,  PCIE_DMA_SIGCTX, l0000!tmp)
	.macro_ref         sm_set_noclr(l0000!g_dma_word1_vals, PCIE_DMA_SIGCTX, l0000!tmp, 0)
	.macro_ref             sm_set_noclr_to(l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, PCIE_DMA_SIGCTX, l0000!tmp, 0)
	            .begin
	.macro_ref                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                 _wsm_validate_size
	                alu_shf[l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, or, l0000!tmp, <<18]
.17 00F0000C000D common_code
	            .end
	.end_macro_ref             sm_set_noclr_to
	.end_macro_ref         sm_set_noclr
	.end_macro_ref     sm_set_noclr
	.macro_ref     move(l0000!tmp, __ISLAND)
	.macro_ref             immed32(l0000!tmp, __ISLAND)
	                        immed[l0000!tmp, ((__ISLAND) & 0xFFFF)]
.18 00F4400C000D common_code
	                        immed_w1[l0000!tmp, (((__ISLAND) >> 16) & 0xFFFF)]
.19 009AB018060D common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     sm_set_noclr(l0000!g_dma_word1_vals,  PCIE_DMA_MASTER_ISL, l0000!tmp)
	.macro_ref         sm_set_noclr(l0000!g_dma_word1_vals, PCIE_DMA_MASTER_ISL, l0000!tmp, 0)
	.macro_ref             sm_set_noclr_to(l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, PCIE_DMA_MASTER_ISL, l0000!tmp, 0)
	            .begin
	.macro_ref                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                 _wsm_validate_size
	                alu_shf[l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, or, l0000!tmp, <<21]
.20 00F0000C000D common_code
	            .end
	.end_macro_ref             sm_set_noclr_to
	.end_macro_ref         sm_set_noclr
	.end_macro_ref     sm_set_noclr
	.macro_ref     move(l0000!tmp, (__MEID & 0xf))
	.macro_ref             immed32(l0000!tmp, (__MEID & 0xf))
	                        immed[l0000!tmp, (((__MEID & 0xf)) & 0xFFFF)]
.21 00F4400C000D common_code
	                        immed_w1[l0000!tmp, ((((__MEID & 0xf)) >> 16) & 0xFFFF)]
.22 009A5018060D common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     sm_set_noclr(l0000!g_dma_word1_vals,  PCIE_DMA_MASTER_ID, l0000!tmp)
	.macro_ref         sm_set_noclr(l0000!g_dma_word1_vals, PCIE_DMA_MASTER_ID, l0000!tmp, 0)
	.macro_ref             sm_set_noclr_to(l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, PCIE_DMA_MASTER_ID, l0000!tmp, 0)
	            .begin
	.macro_ref                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                 _wsm_validate_size
	                alu_shf[l0000!g_dma_word1_vals, l0000!g_dma_word1_vals, or, l0000!tmp, <<27]
.23 00F000800B00 common_code
	            .end
	.end_macro_ref             sm_set_noclr_to
	.end_macro_ref         sm_set_noclr
	.end_macro_ref     sm_set_noclr
	.macro_ref     move(l0000!g_dma_word3_vals, ((0 << 8) | (1 << 11)))
	.macro_ref             immed32(l0000!g_dma_word3_vals, ((0 << 8) | (1 << 11)))
	                    immed[l0000!g_dma_word3_vals, 2048]
.24 00F000000F00 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_bitmap_base, nfd_out_sb_release0)
	.macro_ref             immed32(l0000!g_bitmap_base, nfd_out_sb_release0)
	                        immed[l0000!g_bitmap_base, ((nfd_out_sb_release0) & 0xFFFF)]
.25 00F440000F00 common_code
	                        immed_w1[l0000!g_bitmap_base, (((nfd_out_sb_release0) >> 16) & 0xFFFF)]
.26 00F0003FFC02 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_seq_mask, 0x3FF)
	.macro_ref             immed32(l0000!g_seq_mask, 0x3FF)
	                    immed[l0000!g_seq_mask, 1023]
.27 00F0001013FF common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_pkt_num_mask, 0x1FF)
	.macro_ref             immed32(l0000!g_pkt_num_mask, 0x1FF)
	                    immed[l0000!g_pkt_num_mask, 511]
.28 00F4080C0003 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_pkt_free_hi, 0x80000000)
	.macro_ref             immed32(l0000!g_pkt_free_hi, 0x80000000)
	                    immed[l0000!g_pkt_free_hi, 32768, <<16]
.29 00F0000C0004 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_send_cntrs_addr_hi, (nfd_out_atomics0 >> 8))
	.macro_ref             immed32(l0000!g_send_cntrs_addr_hi, (nfd_out_atomics0 >> 8))
	                        immed[l0000!g_send_cntrs_addr_hi, (((nfd_out_atomics0 >> 8)) & 0xFFFF)]
.30 00F4400C0004 common_code
	                        immed_w1[l0000!g_send_cntrs_addr_hi, ((((nfd_out_atomics0 >> 8)) >> 16) & 0xFFFF)]
.31 00F000001708 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_blm_iref, (1 << 3))
	.macro_ref             immed32(l0000!g_blm_iref, (1 << 3))
	                    immed[l0000!g_blm_iref, 8]
.32 00F0000C000D common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!tmp, BLM_NBI8_BLQ0_EMU_QID)
	.macro_ref             immed32(l0000!tmp, BLM_NBI8_BLQ0_EMU_QID)
	                        immed[l0000!tmp, ((BLM_NBI8_BLQ0_EMU_QID) & 0xFFFF)]
.33 00F4400C000D common_code
	                        immed_w1[l0000!tmp, (((BLM_NBI8_BLQ0_EMU_QID) >> 16) & 0xFFFF)]
.34 009B0058160D common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	    alu_shf[l0000!g_blm_iref, l0000!g_blm_iref, or, l0000!tmp, <<16]
.35 00F0000C0005 common_code
	.macro_ref     move(l0000!g_blm_addr_hi, ((__ADDR_EMEM0 >> 8) & 0xFF000000))
	.macro_ref             immed32(l0000!g_blm_addr_hi, ((__ADDR_EMEM0 >> 8) & 0xFF000000))
	                        immed[l0000!g_blm_addr_hi, ((((__ADDR_EMEM0 >> 8) & 0xFF000000)) & 0xFFFF)]
.36 00F4400C0005 common_code
	                        immed_w1[l0000!g_blm_addr_hi, (((((__ADDR_EMEM0 >> 8) & 0xFF000000)) >> 16) & 0xFFFF)]
.37 00F0008E4006 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_add_imm_iref, ((2 << 3) | (1 << 7) | (0 << 10) | (1 << 11)))
	.macro_ref             immed32(l0000!g_add_imm_iref, ((2 << 3) | (1 << 7) | (0 << 10) | (1 << 11)))
	                    immed[l0000!g_add_imm_iref, 2192]
.38 00F0000D0008 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_pcie_addr_lo, 0x40040)
	.macro_ref             immed32(l0000!g_pcie_addr_lo, 0x40040)
	                        immed[l0000!g_pcie_addr_lo, 64]
.39 00F4400C1008 common_code
	                        immed_w1[l0000!g_pcie_addr_lo, 4]
.40 00F000001F00 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_pcie_addr_hi, (0 << 30))
	.macro_ref             immed32(l0000!g_pcie_addr_hi, (0 << 30))
	                    immed[l0000!g_pcie_addr_hi, 0]
.41 007918100300 common_code
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_dma_max, 2048)
	.macro_ref             immed32(l0000!g_dma_max, 2048)
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     move(l0000!g_num_ticket_errors, 0)
	.macro_ref             immed32(l0000!g_num_ticket_errors, 0)
	.end_macro_ref             immed32
	.end_macro_ref     move
	.macro_ref     kill_extra_threads()
	.end_macro_ref     kill_extra_threads
	    kickstart#:
	.macro_ref         pci_out_pd_request_work($l0000!work_in0[0], l0000!work_sig0)
	M065#:
	                cls[ring_workq_add_thread, $l0000!work_in0[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                    sig_done[l0000!work_sig0]
.42 007938600300 common_code
	.end_macro_ref         pci_out_pd_request_work
	.macro_ref         pci_out_pd_request_work($l0000!work_in1[0], l0000!work_sig1)
	                cls[ring_workq_add_thread, $l0000!work_in1[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                    sig_done[l0000!work_sig1]
.43 007958B00300 common_code
	.end_macro_ref         pci_out_pd_request_work
	.macro_ref         pci_out_pd_request_work($l0000!work_in2[0], l0000!work_sig2)
	                cls[ring_workq_add_thread, $l0000!work_in2[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                    sig_done[l0000!work_sig2]
.44 00E00BE40002 common_code
	.end_macro_ref         pci_out_pd_request_work
	        ctx_arb[l0000!work_sig0], defer[2], br[state_e0n0#]
.45 00F000802300 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                    immed[l0000!g_dma_max, 2048]
.46 00F000002700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                    immed[l0000!g_num_ticket_errors, 0]
.47 00BAC8A22B01 common_code
	    state_e0n0#:
	    transition_e0n0_e1n1#:
	.macro_ref         issue_packet_dma(0, state_e1n1#, l0000!work_sig1, l0000!dma_sig0)
	M068#:
	            .io_completed l0000!work_sig0
	            .io_completed l0000!dma_sig0
	.macro_ref             _issue_packet_dma($l0000!work_in0, $l0000!dma_out0, $l0000!dma_out0x, l0000!dma_sig0, state_e1n1#, l0000!work_sig1, l0000!dma_sig0)
	            .begin
	                .reg l0007!word
	                .reg l0007!tmp
	                .reg l0007!tmp2
	                .reg l0007!isl
	                .reg l0007!ovfl
	                .reg l0007!len
	                .reg l0007!addr_lo
	                .reg l0007!pcie_hi_word
	                .reg l0007!pcie_lo_start
	                .reg l0007!mu_lo_start
	                .reg l0007!ctm_bytes
	                .reg l0007!split_len
	                .io_completed $l0000!work_in0[0]
	                .io_completed $l0000!work_in0[1]
	                .io_completed $l0000!work_in0[2]
	                .io_completed $l0000!work_in0[3]
	                .io_completed $l0000!work_in0[4]
	                .io_completed $l0000!dma_out0[0]
	                .io_completed $l0000!dma_out0[1]
	                .io_completed $l0000!dma_out0[2]
	                .io_completed $l0000!dma_out0[3]
	                .io_completed $l0000!dma_out0x[0]
	                .io_completed $l0000!dma_out0x[1]
	                .io_completed $l0000!dma_out0x[2]
	                .io_completed $l0000!dma_out0x[3]
	                alu[@l0000!ndequeued, @l0000!ndequeued, -, 1]
.48 00D835408129 common_code
	                blt[M069_add_wq_credits#]
.49 00D032020420 common_code
	            M069_start_packet_dma#:
	.macro_ref                 wsm_test_bit_clr($l0000!work_in0, SB_WQ_ENABLED, M069_no_dma#)
	M070#:
	.macro_ref                     wsm_test_bit_clr($l0000!work_in0, SB_WQ_ENABLED, M069_no_dma#, --)
	M071#:
	.macro_ref                         sm_test_bit_clr($l0000!work_in0[0], SB_WQ_ENABLED, M069_no_dma#, --)
	M072#:
	                                br_bclr[$l0000!work_in0[0], 31, M069_no_dma#]
.50 00D010420C3A common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	.macro_ref                 wsm_test_bit_clr($l0000!work_in0, SB_WQ_CTM_ONLY, M069_not_ctm_only#)
	.macro_ref                     wsm_test_bit_clr($l0000!work_in0, SB_WQ_CTM_ONLY, M069_not_ctm_only#, --)
	.macro_ref                         sm_test_bit_clr($l0000!work_in0[2], SB_WQ_CTM_ONLY, M069_not_ctm_only#, --)
	                                br_bclr[$l0000!work_in0[2], 25, M069_not_ctm_only#]
.51 00B440D60C01 common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	            M069_ctm_only#:
	                alu[l0007!word, $l0000!work_in0[2], and, l0000!g_dma_word0_mask]
.52 008A18183621 common_code
	                alu_shf[$l0000!dma_out0[0], l0007!word, or, 1, <<31]
.53 0085A0A20D7F common_code
	.macro_ref                 wsm_extract(l0007!word, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0007!word, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0007!word, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0007!word, 0x3F, and, $l0000!work_in0[2], >>26]
.54 00BA00D0040A common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0007!word, l0007!word, or, l0000!g_dma_word1_vals]
.55 008B28283622 common_code
	                alu_shf[$l0000!dma_out0[1], l0007!word, or, 2, <<14]
.56 00A018360B00 common_code
	                    alu[$l0000!dma_out0[2], --, b, $l0000!work_in0[1]]
.57 01A4C0A00981 common_code
	                alu[l0007!word, l0000!g_dma_word3_vals, +8, $l0000!work_in0[0]], no_cc
.58 009570B605FF common_code
	.macro_ref                 wsm_extract(l0007!tmp, $l0000!work_in0,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0007!tmp, $l0000!work_in0, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0007!tmp, $l0000!work_in0[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0007!tmp, 0xFF, and, $l0000!work_in0[0], >>23]
.59 008B40A02E0A common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0007!word, PCIE_DMA_RID, l0007!tmp)
	.macro_ref                     sm_set_noclr(l0007!word, PCIE_DMA_RID, l0007!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0007!word, l0007!word, PCIE_DMA_RID, l0007!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[l0007!word, l0007!word, or, l0007!tmp, <<12]
.60 00C003183085 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0007!len, $l0000!work_in0, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0007!len, $l0000!work_in0, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0007!len, $l0000!work_in0[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                ld_field_w_clr[l0007!len, 0011, $l0000!work_in0[4],0]
.61 040F06101F08 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	#pragma warningdisable:5117
	#pragma warningdisable:4701
	#pragma warningdisable:5009
	                pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.62 00E037A5000C common_code
	#pragma warningdefault:5117
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig0, state_e1n1#, defer[2])
	                    .set_sig l0000!work_sig1
	                        .set_sig l0000!dma_sig0
	                            ctx_arb[l0000!work_sig1, l0000!dma_sig0], any, br[state_e1n1#], defer[2]
.63 00BAC0C03301 common_code
	.end_macro_ref                 wait_br_next_state
	                alu[l0007!len, l0007!len, -, 1]
.64 008AC840320A common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out0[3], l0007!word, PCIE_DMA_XLEN, l0007!len, 1)
	                .begin
	.macro_ref                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                     _wsm_validate_size
	                    alu_shf[$l0000!dma_out0[3], l0007!word, or, l0007!len, <<20]
.65 00A000C60B00 common_code
	                .end
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdefault:4701
	#pragma warningdefault:5009
	            M069_not_ctm_only#:
	                    alu[l0007!pcie_lo_start, --, b, $l0000!work_in0[1]]
.66 01B4C0D00981 common_code
	                alu[l0007!pcie_hi_word, l0000!g_dma_word3_vals, +8, $l0000!work_in0[0]], no_cc
.67 0095A0B20D7F common_code
	.macro_ref                 wsm_extract(l0007!tmp, $l0000!work_in0,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0007!tmp, $l0000!work_in0, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0007!tmp, $l0000!work_in0[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0007!pcie_hi_word, PCIE_DMA_RID, l0007!tmp)
	.macro_ref                     sm_set_noclr(l0007!pcie_hi_word, PCIE_DMA_RID, l0007!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0007!pcie_hi_word, l0007!pcie_hi_word, PCIE_DMA_RID, l0007!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0007!len, $l0000!work_in0, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0007!len, $l0000!work_in0, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0007!len, $l0000!work_in0[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0007!isl, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0007!isl, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0007!isl, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0007!isl, 0x3F, and, $l0000!work_in0[2], >>26]
.68 00D824B08120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M069_mu_only_dma#], defer[3]
.69 008570F605FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0007!tmp, 0xFF, and, $l0000!work_in0[0], >>23]
.70 009B40D8360F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu_shf[l0007!pcie_hi_word, l0007!pcie_hi_word, or, l0007!tmp, <<12]
.71 00C00312140B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field_w_clr[l0007!len, 0011, $l0000!work_in0[4],0]
.72 00F000102F00 common_code
	            M069_ctm_and_mu_dma#:
	.macro_ref                 move(l0007!tmp, 256)
	M117#:
	.macro_ref                         immed32(l0007!tmp, 256)
	M118#:
	                                immed[l0007!tmp, 256]
.73 0094E0C20D23 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	.macro_ref                 wsm_extract(l0007!tmp2, $l0000!work_in0, SB_WQ_CTM_SPLIT)
	.macro_ref                     wsm_extract(l0007!tmp2, $l0000!work_in0, SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         sm_extract(l0007!tmp2, $l0000!work_in0[2], SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_SPLIT)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0007!tmp2, 0x3, and, $l0000!work_in0[2], >>14]
.74 00AA70003300 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[--, l0007!tmp2, or, 0]
.75 009000B02E00 common_code
	                alu_shf[l0007!split_len, --, b, l0007!tmp, <<indirect]
.76 00F001F033FF common_code
	.macro_ref                 wsm_extract(l0007!tmp, $l0000!work_in0, SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0007!tmp, $l0000!work_in0, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0007!tmp, $l0000!work_in0[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0011!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0011!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0011!_wsm_mask, 0x1FFF]
.77 008400F83083 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0007!tmp, l0011!_wsm_mask, and, $l0000!work_in0[2], >>0]
.78 00BAC0F02C0F common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0007!ctm_bytes, l0007!split_len, -, l0007!tmp]
.79 00D82480812A common_code
	                ble[M069_mu_only_dma#]
.80 00A440A60C01 common_code
	                alu[l0007!word, $l0000!work_in0[2], and, l0000!g_dma_word0_mask]
.81 008A1810860A common_code
	                alu_shf[$l0000!dma_out0[0], l0007!word, or, 1, <<31]
.82 0085A0A20D7F common_code
	.macro_ref                 wsm_extract(l0007!word, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0007!word, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0007!word, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0007!word, 0x3F, and, $l0000!work_in0[2], >>26]
.83 00AA00AE000A common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0007!word, l0007!word, or, 0x80]                   ; Direct access
.84 008B88219A0A common_code
	                alu_shf[$l0000!dma_out0[1], l0007!word, or, 38, <<8]
.85 00A0583C000C common_code
	                alu[$l0000!dma_out0[2], --, b, l0007!pcie_lo_start]
.86 00AAC0F03F01 common_code
	                alu[l0007!tmp, l0007!ctm_bytes, -, 1]
.87 008AC848360F common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out0[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp)
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp, 0)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0[3], l0007!pcie_hi_word, or, l0007!tmp, <<20]
.88 040F06101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdisable:5117
	                pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.89 00AA80B03C0B common_code
	#pragma warningdefault:5117
	                alu[l0007!len, l0007!len, -, l0007!ctm_bytes]
.90 00D83380812A common_code
	                ble[M069_ctm_only_not_flagged#]
.91 008150921200 common_code
	                alu_shf[l0007!mu_lo_start, --, b, $l0000!work_in0[3], <<11]
.92 00A080902C09 common_code
	                alu[l0007!mu_lo_start, l0007!mu_lo_start, +, l0007!split_len]
.93 00A0585C0009 common_code
	.macro_ref                 move($l0000!dma_out0x[0], l0007!mu_lo_start)
	                        alu[$l0000!dma_out0x[0], --, b, l0007!mu_lo_start]
.94 00B000E00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out0x, $l0000!work_in0, l0000!dma_sig0)
	                .begin
	                    .reg l0013!word
	                        alu[l0013!word, --, b, l0000!g_dma_word1_vals]
.95 00A080C03C0C common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	                alu[l0007!pcie_lo_start, l0007!pcie_lo_start, +, l0007!ctm_bytes]
.96 00B8C0D03700 common_code
	                alu[l0007!pcie_hi_word, l0007!pcie_hi_word, +carry, 0]
.97 00AAB000200B common_code
	.macro_ref                 move($l0000!dma_out0x[2], l0007!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0007!len,-,l0000!g_dma_max]
.98 00D81AB0812B common_code
	                bgt[l001_01#], defer[3]
.99 00C151083984 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        ld_field[l0013!word, 0001, $l0000!work_in0[3], >>21]
.100 008B28683A22 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        alu_shf[$l0000!dma_out0x[1], l0013!word, or, 2, <<14]
.101 00A0587C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out0x[2], --, b, l0007!pcie_lo_start]
.102 00AA80FC040B common_code
	                    alu[l0007!tmp, l0007!len, -, 1]
.103 008AC888360F common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0x[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0x[3], l0007!pcie_hi_word, or, l0007!tmp, <<20]
.104 040F06501F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out0x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.105 00D824408038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l001_end#]
.106 00C00312140F common_code
	                l001_01#: 
	.macro_ref                     wsm_extract(l0007!tmp, $l0000!work_in0, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0007!tmp, $l0000!work_in0, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0007!tmp, $l0000!work_in0[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    ld_field_w_clr[l0007!tmp, 0011, $l0000!work_in0[4],0]
.107 00F002803300 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    .if (tmp > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0015!__immed_big_const
	                    immed[l0015!__immed_big_const,10240]
.108 00AAB000300F common_code
	                    alu[--,l0007!tmp,-,l0015!__immed_big_const]
.109 00D81D40812A common_code
	                    ble[l002_01#]
.110 00F000802F06 common_code
	                    .endlocal
	                        .while (1)
	                        l003_start#: 
	.macro_ref                             move(l0007!tmp, 0x806)
	.macro_ref                                     immed32(l0007!tmp, 0x806)
	                                            immed[l0007!tmp, 2054]
.111 00FC17202F00 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0007!tmp]
.112 00FC176C0183 common_code
	                            local_csr_wr[mailbox1, $l0000!work_in0[2]]
.113 00FC17AC0184 common_code
	                            local_csr_wr[mailbox2, $l0000!work_in0[3]]
.114 00FC17EC0185 common_code
	                            local_csr_wr[mailbox3, $l0000!work_in0[4]]
.115 00E000020000 common_code
	                            ctx_arb[bpt]
.116 00D81B808038 common_code
	                        .endw
	                        l003_cont#: 
	                        br[l003_start#]
.117 00AAC0F02301 common_code
	                        .unreachable
	                    .endif
	                    l002_01#: 
	                    l002_end#: 
	                    alu[l0007!tmp, l0000!g_dma_max, -, 1]
.118 008AC888360F common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0x[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0x[3], l0007!pcie_hi_word, or, l0007!tmp, <<20]
.119 040F06501F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out0x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.120 00AA80B0200B common_code
	#pragma warningdefault:5117
	                    alu[l0007!len, l0007!len, -, l0000!g_dma_max]
.121 00A080902009 common_code
	                    alu[l0007!mu_lo_start, l0007!mu_lo_start, +, l0000!g_dma_max]
.122 00A080C0200C common_code
	                    alu[l0007!pcie_lo_start, l0007!pcie_lo_start, +, l0000!g_dma_max]
.123 00B8C0D03700 common_code
	                    alu[l0007!pcie_hi_word, l0007!pcie_hi_word, +carry, 0]
.124 00E000000004 common_code
	                    .repeat
	                    l004_start#: 
	                        ctx_arb[l0000!dma_sig0]
.125 00A0581C0009 common_code
	                        .io_completed $l0000!dma_out0[0]
	                        .io_completed $l0000!dma_out0[1]
	                        .io_completed $l0000!dma_out0[2]
	                        .io_completed $l0000!dma_out0[3]
	                        .io_completed $l0000!dma_out0x[0]
	                        .io_completed $l0000!dma_out0x[1]
	                        .io_completed $l0000!dma_out0x[2]
	                        .io_completed $l0000!dma_out0x[3]
	                        alu[$l0000!dma_out0[0], --, b, l0007!mu_lo_start]
.126 00B000E00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out0, $l0000!work_in0, l0000!dma_sig0)
	                        .begin
	                            .reg l0017!word
	                                alu[l0017!word, --, b, l0000!g_dma_word1_vals]
.127 00AAB000200B common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0007!len,-,l0000!g_dma_max]
.128 00D82230812B common_code
	                        bgt[l005_01#], defer[3]
.129 00C151083984 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0017!word, 0001, $l0000!work_in0[3], >>21]
.130 008B28283A22 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out0[1], l0017!word, or, 2, <<14]
.131 00A0583C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out0[2], --, b, l0007!pcie_lo_start]
.132 00AA80FC040B common_code
	                            alu[l0007!tmp, l0007!len, -, 1]
.133 00D823A08038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out0[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0007!len, 0)
	.macro_ref                                     immed32(l0007!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l005_end#], defer[2]
.134 008AC848360F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out0[3], l0007!pcie_hi_word, or, l0007!tmp, <<20]
.135 00F0000C000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0007!len, 0]
.136 00AAC0F02301 common_code
	                        l005_01#: 
	                            alu[l0007!tmp, l0000!g_dma_max, -, 1]
.137 008AC848360F common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out0[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out0[3], l0007!pcie_hi_word, or, l0007!tmp, <<20]
.138 00AA80B0200B common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0007!len, l0007!len, -, l0000!g_dma_max]
.139 00A080902009 common_code
	                            alu[l0007!mu_lo_start, l0007!mu_lo_start, +, l0000!g_dma_max]
.140 00A080C0200C common_code
	                            alu[l0007!pcie_lo_start, l0007!pcie_lo_start, +, l0000!g_dma_max]
.141 00B8C0D03700 common_code
	                            alu[l0007!pcie_hi_word, l0007!pcie_hi_word, +carry, 0]
.142 040F06101F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l005_end#: 
	                        pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.143 00A0700C000B common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l004_cont#: 
	                    alu[--,--,b,l0007!len]
.144 00D81F008121 common_code
	                    bne[l004_start#]
.145 00E03785000C common_code
	                .endif
	                l001_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig0, state_e1n1#)
	.macro_ref                     wait_br_next_state(l0000!work_sig1, l0000!dma_sig0, state_e1n1#, --)
	                        .set_sig l0000!work_sig1
	                            .set_sig l0000!dma_sig0
	                                ctx_arb[l0000!work_sig1, l0000!dma_sig0], any, br[state_e1n1#]
.146 009150E21200 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M069_mu_only_dma#:
	                alu_shf[l0007!mu_lo_start, --, b, $l0000!work_in0[3], <<11]
.147 00F001F03FFF common_code
	.macro_ref                 wsm_extract(l0007!tmp, $l0000!work_in0,  SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0007!tmp, $l0000!work_in0, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0007!tmp, $l0000!work_in0[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0020!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0020!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0020!_wsm_mask, 0x1FFF]
.148 008400F83C83 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0007!tmp, l0020!_wsm_mask, and, $l0000!work_in0[2], >>0]
.149 00A0C090380F common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0007!mu_lo_start, l0007!mu_lo_start, +, l0007!tmp]
.150 00A0581C0009 common_code
	.macro_ref                 move($l0000!dma_out0[0], l0007!mu_lo_start)
	                        alu[$l0000!dma_out0[0], --, b, l0007!mu_lo_start]
.151 00B000F00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out0, $l0000!work_in0, l0000!dma_sig0)
	                .begin
	                    .reg l0021!word
	                        alu[l0021!word, --, b, l0000!g_dma_word1_vals]
.152 00AAB000200B common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	.macro_ref                 move($l0000!dma_out0[2], l0007!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0007!len,-,l0000!g_dma_max]
.153 00D82870812B common_code
	                bgt[l006_01#], defer[3]
.154 00C151083D84 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        ld_field[l0021!word, 0001, $l0000!work_in0[3], >>21]
.155 008B28283E22 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu_shf[$l0000!dma_out0[1], l0021!word, or, 2, <<14]
.156 00A0583C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out0[2], --, b, l0007!pcie_lo_start]
.157 00AA80FC040B common_code
	                    alu[l0007!tmp, l0007!len, -, 1]
.158 008AC848360F common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0[3], l0007!pcie_hi_word, or, l0007!tmp, <<20]
.159 040F06101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.160 00D831C08038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l006_end#]
.161 00F002802F00 common_code
	                    .if (len > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0023!__immed_big_const
	                l006_01#: 
	                    immed[l0023!__immed_big_const,10240]
.162 00AAB0002C0B common_code
	                    alu[--,l0007!len,-,l0023!__immed_big_const]
.163 00D82AC0812A common_code
	                    ble[l007_01#]
.164 00F000802F06 common_code
	                    .endlocal
	                        .while (1)
	                        l008_start#: 
	.macro_ref                             move(l0007!tmp, 0x806)
	.macro_ref                                     immed32(l0007!tmp, 0x806)
	                                            immed[l0007!tmp, 2054]
.165 00FC17202F00 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0007!tmp]
.166 00FC176C0183 common_code
	                            local_csr_wr[mailbox1, $l0000!work_in0[2]]
.167 00FC17AC0184 common_code
	                            local_csr_wr[mailbox2, $l0000!work_in0[3]]
.168 00FC17EC0185 common_code
	                            local_csr_wr[mailbox3, $l0000!work_in0[4]]
.169 00E000020000 common_code
	                            ctx_arb[bpt]
.170 00D829008038 common_code
	                        .endw
	                        l008_cont#: 
	                        br[l008_start#]
.171 00AAC0F02301 common_code
	                        .unreachable
	                    .endif
	                    l007_01#: 
	                    l007_end#: 
	                    alu[l0007!tmp, l0000!g_dma_max, -, 1]
.172 008AC848360F common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0[3], l0007!pcie_hi_word, or, l0007!tmp, <<20]
.173 040F06101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.174 00AA80B0200B common_code
	#pragma warningdefault:5117
	                    alu[l0007!len, l0007!len, -, l0000!g_dma_max]
.175 00A080902009 common_code
	                    alu[l0007!mu_lo_start, l0007!mu_lo_start, +, l0000!g_dma_max]
.176 00A080C0200C common_code
	                    alu[l0007!pcie_lo_start, l0007!pcie_lo_start, +, l0000!g_dma_max]
.177 00B8C0D03700 common_code
	                    alu[l0007!pcie_hi_word, l0007!pcie_hi_word, +carry, 0]
.178 00E000000004 common_code
	                    .repeat
	                    l009_start#: 
	                        ctx_arb[l0000!dma_sig0]
.179 00A0581C0009 common_code
	                        .io_completed $l0000!dma_out0[0]
	                        .io_completed $l0000!dma_out0[1]
	                        .io_completed $l0000!dma_out0[2]
	                        .io_completed $l0000!dma_out0[3]
	                        .io_completed $l0000!dma_out0x[0]
	                        .io_completed $l0000!dma_out0x[1]
	                        .io_completed $l0000!dma_out0x[2]
	                        .io_completed $l0000!dma_out0x[3]
	                        alu[$l0000!dma_out0[0], --, b, l0007!mu_lo_start]
.180 00B000C00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out0, $l0000!work_in0, l0000!dma_sig0)
	                        .begin
	                            .reg l0025!word
	                                alu[l0025!word, --, b, l0000!g_dma_word1_vals]
.181 00AAB000200B common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0007!len,-,l0000!g_dma_max]
.182 00D82FB0812B common_code
	                        bgt[l010_01#], defer[3]
.183 00C151083184 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0025!word, 0001, $l0000!work_in0[3], >>21]
.184 008B28283222 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out0[1], l0025!word, or, 2, <<14]
.185 00A0583C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out0[2], --, b, l0007!pcie_lo_start]
.186 00AA80FC040B common_code
	                            alu[l0007!tmp, l0007!len, -, 1]
.187 00D831208038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out0[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0007!len, 0)
	.macro_ref                                     immed32(l0007!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l010_end#], defer[2]
.188 008AC848360F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out0[3], l0007!pcie_hi_word, or, l0007!tmp, <<20]
.189 00F0000C000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0007!len, 0]
.190 00AAC0F02301 common_code
	                        l010_01#: 
	                            alu[l0007!tmp, l0000!g_dma_max, -, 1]
.191 008AC848360F common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out0[3], l0007!pcie_hi_word, PCIE_DMA_XLEN, l0007!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out0[3], l0007!pcie_hi_word, or, l0007!tmp, <<20]
.192 00AA80B0200B common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0007!len, l0007!len, -, l0000!g_dma_max]
.193 00A080902009 common_code
	                            alu[l0007!mu_lo_start, l0007!mu_lo_start, +, l0000!g_dma_max]
.194 00A080C0200C common_code
	                            alu[l0007!pcie_lo_start, l0007!pcie_lo_start, +, l0000!g_dma_max]
.195 00B8C0D03700 common_code
	                            alu[l0007!pcie_hi_word, l0007!pcie_hi_word, +carry, 0]
.196 040F06101F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l010_end#: 
	                        pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.197 00A0700C000B common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l009_cont#: 
	                    alu[--,--,b,l0007!len]
.198 00D82C808121 common_code
	                    bne[l009_start#]
.199 00E03785000C common_code
	                .endif
	                l006_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig0, state_e1n1#)
	.macro_ref                     wait_br_next_state(l0000!work_sig1, l0000!dma_sig0, state_e1n1#, --)
	                        .set_sig l0000!work_sig1
	                            .set_sig l0000!dma_sig0
	                                ctx_arb[l0000!work_sig1, l0000!dma_sig0], any, br[state_e1n1#]
.200 00FC044C0000 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M069_no_dma#:
	                local_csr_rd[active_ctx_sts]
.201 00F000002F00 common_code
	                immed[l0007!tmp, 0]
.202 00B440B02F07 common_code
	                alu[l0007!tmp, l0007!tmp, and, 7]
.203 00E037A5000C common_code
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig0, state_e1n1#)
	.macro_ref                     wait_br_next_state(l0000!work_sig1, l0000!dma_sig0, state_e1n1#, --)
	                        .set_sig l0000!work_sig1
	                            .set_sig l0000!dma_sig0
	                                ctx_arb[l0000!work_sig1, l0000!dma_sig0], defer[2], any, br[state_e1n1#]
.204 009BD0B82E22 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                alu_shf[l0007!tmp, l0007!tmp, or, 2, <<3]
.205 00FC10A02F00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                local_csr_wr[same_me_signal, l0007!tmp]
.206 00F000802F07 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M069_ctm_only_not_flagged#:
	.macro_ref                 move(l0007!tmp, 0x807)
	M187#:
	.macro_ref                         immed32(l0007!tmp, 0x807)
	M188#:
	                                immed[l0007!tmp, 2055]
.207 00FC17202F00 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                local_csr_wr[mailbox0, l0007!tmp]
.208 00FC176C0183 common_code
	                local_csr_wr[mailbox1, $l0000!work_in0[2]]
.209 00FC17AC0184 common_code
	                local_csr_wr[mailbox2, $l0000!work_in0[3]]
.210 00FC17EC0185 common_code
	                local_csr_wr[mailbox3, $l0000!work_in0[4]]
.211 00E000020000 common_code
	                ctx_arb[bpt]
.212 00D833808038 common_code
	                br[M069_ctm_only_not_flagged#]
.213 00F000003B00 common_code
	            M069_add_wq_credits#:
	.macro_ref                 move(l0007!addr_lo, nfd_out_sb_wq_credits0)
	M189#:
	.macro_ref                         immed32(l0007!addr_lo, nfd_out_sb_wq_credits0)
	M190#:
	                                    immed[l0007!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.214 00F440003B00 common_code
	                                    immed_w1[l0007!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.215 008B02028206 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                alu_shf[--, l0000!g_add_imm_iref, or, 64, <<16]
.216 124702083B20 common_code
	                mem[add_imm, --, 0, l0007!addr_lo,1], indirect_ref
.217 00F001803F34 common_code
	.macro_ref                 signal_sb_credits_update()
	                .begin
	                    .reg l0028!addr
	.macro_ref                     move(l0028!addr, 603985972)
	.macro_ref                             immed32(l0028!addr, 603985972)
	                                        immed[l0028!addr, 6196]
.218 00F442403F00 common_code
	                                        immed_w1[l0028!addr, 9216]
.219 101C00083F20 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    ct[interthread_signal, --, 0, l0028!addr,1]
.220 00D80C508038 common_code
	                .end
	.end_macro_ref                 signal_sb_credits_update
	                br[M069_start_packet_dma#], defer[1]
.221 00F000022B3F common_code
	.macro_ref                 move(@l0000!ndequeued, (64 - 1))
	.macro_ref                         immed32(@l0000!ndequeued, (64 - 1))
	                                immed[@l0000!ndequeued, 63]
.222 00D898C08232 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	            .end
	.end_macro_ref             _issue_packet_dma
	.end_macro_ref         issue_packet_dma
	    state_e1n1#:
	        br_signal[l0000!dma_sig0, transition_e1n1_e0n1#]
.223 00D9E740C233 common_code
	        br_!signal[l0000!work_sig1, unreached#]
.224 00BAC8A22B01 common_code
	    transition_e1n1_e2n2#:
	.macro_ref         issue_packet_dma(1, state_e2n2#, l0000!work_sig2, l0000!dma_sig0)
	M196#:
	            .io_completed l0000!work_sig1
	            .io_completed l0000!dma_sig1
	.macro_ref             _issue_packet_dma($l0000!work_in1, $l0000!dma_out1, $l0000!dma_out1x, l0000!dma_sig1, state_e2n2#, l0000!work_sig2, l0000!dma_sig0)
	            .begin
	                .reg l0029!word
	                .reg l0029!tmp
	                .reg l0029!tmp2
	                .reg l0029!isl
	                .reg l0029!ovfl
	                .reg l0029!len
	                .reg l0029!addr_lo
	                .reg l0029!pcie_hi_word
	                .reg l0029!pcie_lo_start
	                .reg l0029!mu_lo_start
	                .reg l0029!ctm_bytes
	                .reg l0029!split_len
	                .io_completed $l0000!work_in1[0]
	                .io_completed $l0000!work_in1[1]
	                .io_completed $l0000!work_in1[2]
	                .io_completed $l0000!work_in1[3]
	                .io_completed $l0000!work_in1[4]
	                .io_completed $l0000!dma_out1[0]
	                .io_completed $l0000!dma_out1[1]
	                .io_completed $l0000!dma_out1[2]
	                .io_completed $l0000!dma_out1[3]
	                .io_completed $l0000!dma_out1x[0]
	                .io_completed $l0000!dma_out1x[1]
	                .io_completed $l0000!dma_out1x[2]
	                .io_completed $l0000!dma_out1x[3]
	                alu[@l0000!ndequeued, @l0000!ndequeued, -, 1]
.225 00D861808129 common_code
	                blt[M197_add_wq_credits#]
.226 00D05E421820 common_code
	            M197_start_packet_dma#:
	.macro_ref                 wsm_test_bit_clr($l0000!work_in1, SB_WQ_ENABLED, M197_no_dma#)
	M198#:
	.macro_ref                     wsm_test_bit_clr($l0000!work_in1, SB_WQ_ENABLED, M197_no_dma#, --)
	M199#:
	.macro_ref                         sm_test_bit_clr($l0000!work_in1[0], SB_WQ_ENABLED, M197_no_dma#, --)
	M200#:
	                                br_bclr[$l0000!work_in1[0], 31, M197_no_dma#]
.227 00D03C82203A common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	.macro_ref                 wsm_test_bit_clr($l0000!work_in1, SB_WQ_CTM_ONLY, M197_not_ctm_only#)
	.macro_ref                     wsm_test_bit_clr($l0000!work_in1, SB_WQ_CTM_ONLY, M197_not_ctm_only#, --)
	.macro_ref                         sm_test_bit_clr($l0000!work_in1[2], SB_WQ_CTM_ONLY, M197_not_ctm_only#, --)
	                                br_bclr[$l0000!work_in1[2], 25, M197_not_ctm_only#]
.228 00B440E62001 common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	            M197_ctm_only#:
	                alu[l0029!word, $l0000!work_in1[2], and, l0000!g_dma_word0_mask]
.229 008A18983A21 common_code
	                alu_shf[$l0000!dma_out1[0], l0029!word, or, 1, <<31]
.230 0085A0B2217F common_code
	.macro_ref                 wsm_extract(l0029!word, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0029!word, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0029!word, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0029!word, 0x3F, and, $l0000!work_in1[2], >>26]
.231 00BA00E0040B common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0029!word, l0029!word, or, l0000!g_dma_word1_vals]
.232 008B28A83A24 common_code
	                alu_shf[$l0000!dma_out1[1], l0029!word, or, 4, <<14]
.233 00A018B61F00 common_code
	                    alu[$l0000!dma_out1[2], --, b, $l0000!work_in1[1]]
.234 01A4C0B00986 common_code
	                alu[l0029!word, l0000!g_dma_word3_vals, +8, $l0000!work_in1[0]], no_cc
.235 009570D619FF common_code
	.macro_ref                 wsm_extract(l0029!tmp, $l0000!work_in1,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0029!tmp, $l0000!work_in1, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0029!tmp, $l0000!work_in1[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0029!tmp, 0xFF, and, $l0000!work_in1[0], >>23]
.236 008B40B0360B common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0029!word, PCIE_DMA_RID, l0029!tmp)
	.macro_ref                     sm_set_noclr(l0029!word, PCIE_DMA_RID, l0029!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0029!word, l0029!word, PCIE_DMA_RID, l0029!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[l0029!word, l0029!word, or, l0029!tmp, <<12]
.237 00C003183C8A common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0029!len, $l0000!work_in1, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0029!len, $l0000!work_in1, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0029!len, $l0000!work_in1[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                ld_field_w_clr[l0029!len, 0011, $l0000!work_in1[4],0]
.238 040F06901F08 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	#pragma warningdisable:5117
	#pragma warningdisable:4701
	#pragma warningdisable:5009
	                pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.239 00E063E50024 common_code
	#pragma warningdefault:5117
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig0, state_e2n2#, defer[2])
	                    .set_sig l0000!work_sig2
	                        .set_sig l0000!dma_sig0
	                            ctx_arb[l0000!work_sig2, l0000!dma_sig0], any, br[state_e2n2#], defer[2]
.240 00BAC0F03F01 common_code
	.end_macro_ref                 wait_br_next_state
	                alu[l0029!len, l0029!len, -, 1]
.241 008AC8C03E0B common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out1[3], l0029!word, PCIE_DMA_XLEN, l0029!len, 1)
	                .begin
	.macro_ref                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                     _wsm_validate_size
	                    alu_shf[$l0000!dma_out1[3], l0029!word, or, l0029!len, <<20]
.242 00A000E61F00 common_code
	                .end
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdefault:4701
	#pragma warningdefault:5009
	            M197_not_ctm_only#:
	                    alu[l0029!pcie_lo_start, --, b, $l0000!work_in1[1]]
.243 01B4C0C00986 common_code
	                alu[l0029!pcie_hi_word, l0000!g_dma_word3_vals, +8, $l0000!work_in1[0]], no_cc
.244 0095A0E2217F common_code
	.macro_ref                 wsm_extract(l0029!tmp, $l0000!work_in1,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0029!tmp, $l0000!work_in1, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0029!tmp, $l0000!work_in1[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0029!pcie_hi_word, PCIE_DMA_RID, l0029!tmp)
	.macro_ref                     sm_set_noclr(l0029!pcie_hi_word, PCIE_DMA_RID, l0029!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0029!pcie_hi_word, l0029!pcie_hi_word, PCIE_DMA_RID, l0029!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0029!len, $l0000!work_in1, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0029!len, $l0000!work_in1, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0029!len, $l0000!work_in1[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0029!isl, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0029!isl, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0029!isl, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0029!isl, 0x3F, and, $l0000!work_in1[2], >>26]
.245 00D850F08120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M197_mu_only_dma#], defer[3]
.246 0085709619FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0029!tmp, 0xFF, and, $l0000!work_in1[0], >>23]
.247 009B40C83209 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu_shf[l0029!pcie_hi_word, l0029!pcie_hi_word, or, l0029!tmp, <<12]
.248 00C00312280D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field_w_clr[l0029!len, 0011, $l0000!work_in1[4],0]
.249 00F000103700 common_code
	            M197_ctm_and_mu_dma#:
	.macro_ref                 move(l0029!tmp, 256)
	M245#:
	.macro_ref                         immed32(l0029!tmp, 256)
	M246#:
	                                immed[l0029!tmp, 256]
.250 0094E0B22123 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	.macro_ref                 wsm_extract(l0029!tmp2, $l0000!work_in1, SB_WQ_CTM_SPLIT)
	.macro_ref                     wsm_extract(l0029!tmp2, $l0000!work_in1, SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         sm_extract(l0029!tmp2, $l0000!work_in1[2], SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_SPLIT)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0029!tmp2, 0x3, and, $l0000!work_in1[2], >>14]
.251 00AA70002F00 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[--, l0029!tmp2, or, 0]
.252 009000F03600 common_code
	                alu_shf[l0029!split_len, --, b, l0029!tmp, <<indirect]
.253 00F001F02FFF common_code
	.macro_ref                 wsm_extract(l0029!tmp, $l0000!work_in1, SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0029!tmp, $l0000!work_in1, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0029!tmp, $l0000!work_in1[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0033!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0033!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0033!_wsm_mask, 0x1FFF]
.254 008400982C88 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0029!tmp, l0033!_wsm_mask, and, $l0000!work_in1[2], >>0]
.255 00BAC0E03C09 common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0029!ctm_bytes, l0029!split_len, -, l0029!tmp]
.256 00D850C0812A common_code
	                ble[M197_mu_only_dma#]
.257 00A440B62001 common_code
	                alu[l0029!word, $l0000!work_in1[2], and, l0000!g_dma_word0_mask]
.258 008A1890860B common_code
	                alu_shf[$l0000!dma_out1[0], l0029!word, or, 1, <<31]
.259 0085A0B2217F common_code
	.macro_ref                 wsm_extract(l0029!word, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0029!word, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0029!word, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0029!word, 0x3F, and, $l0000!work_in1[2], >>26]
.260 00AA00BE000B common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0029!word, l0029!word, or, 0x80]                   ; Direct access
.261 008B88A19A0B common_code
	                alu_shf[$l0000!dma_out1[1], l0029!word, or, 38, <<8]
.262 00A058BC000E common_code
	                alu[$l0000!dma_out1[2], --, b, l0029!pcie_lo_start]
.263 00AAC0903B01 common_code
	                alu[l0029!tmp, l0029!ctm_bytes, -, 1]
.264 008AC8C83209 common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out1[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp)
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp, 0)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1[3], l0029!pcie_hi_word, or, l0029!tmp, <<20]
.265 040F06901F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdisable:5117
	                pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.266 00AA80D0380D common_code
	#pragma warningdefault:5117
	                alu[l0029!len, l0029!len, -, l0029!ctm_bytes]
.267 00D85FC0812A common_code
	                ble[M197_ctm_only_not_flagged#]
.268 008150A22600 common_code
	                alu_shf[l0029!mu_lo_start, --, b, $l0000!work_in1[3], <<11]
.269 00A080A03C0A common_code
	                alu[l0029!mu_lo_start, l0029!mu_lo_start, +, l0029!split_len]
.270 00A058DC000A common_code
	.macro_ref                 move($l0000!dma_out1x[0], l0029!mu_lo_start)
	                        alu[$l0000!dma_out1x[0], --, b, l0029!mu_lo_start]
.271 00B000D00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out1x, $l0000!work_in1, l0000!dma_sig1)
	                .begin
	                    .reg l0035!word
	                        alu[l0035!word, --, b, l0000!g_dma_word1_vals]
.272 00A080E0380E common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	                alu[l0029!pcie_lo_start, l0029!pcie_lo_start, +, l0029!ctm_bytes]
.273 00B8C0C03300 common_code
	                alu[l0029!pcie_hi_word, l0029!pcie_hi_word, +carry, 0]
.274 00AAB000200D common_code
	.macro_ref                 move($l0000!dma_out1x[2], l0029!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0029!len,-,l0000!g_dma_max]
.275 00D846F0812B common_code
	                bgt[l011_01#], defer[3]
.276 00C151083589 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        ld_field[l0035!word, 0001, $l0000!work_in1[3], >>21]
.277 008B28E83624 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        alu_shf[$l0000!dma_out1x[1], l0035!word, or, 4, <<14]
.278 00A058FC000E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out1x[2], --, b, l0029!pcie_lo_start]
.279 00AA809C040D common_code
	                    alu[l0029!tmp, l0029!len, -, 1]
.280 008ACC083209 common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1x[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1x[3], l0029!pcie_hi_word, or, l0029!tmp, <<20]
.281 040F06D01F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out1x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.282 00D850808038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l011_end#]
.283 00C003122809 common_code
	                l011_01#: 
	.macro_ref                     wsm_extract(l0029!tmp, $l0000!work_in1, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0029!tmp, $l0000!work_in1, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0029!tmp, $l0000!work_in1[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    ld_field_w_clr[l0029!tmp, 0011, $l0000!work_in1[4],0]
.284 00F002803F00 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    .if (tmp > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0037!__immed_big_const
	                    immed[l0037!__immed_big_const,10240]
.285 00AAB0003C09 common_code
	                    alu[--,l0029!tmp,-,l0037!__immed_big_const]
.286 00D84980812A common_code
	                    ble[l012_01#]
.287 00F000803706 common_code
	                    .endlocal
	                        .while (1)
	                        l013_start#: 
	.macro_ref                             move(l0029!tmp, 0x806)
	.macro_ref                                     immed32(l0029!tmp, 0x806)
	                                            immed[l0029!tmp, 2054]
.288 00FC17203700 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0029!tmp]
.289 00FC176C0188 common_code
	                            local_csr_wr[mailbox1, $l0000!work_in1[2]]
.290 00FC17AC0189 common_code
	                            local_csr_wr[mailbox2, $l0000!work_in1[3]]
.291 00FC17EC018A common_code
	                            local_csr_wr[mailbox3, $l0000!work_in1[4]]
.292 00E000020000 common_code
	                            ctx_arb[bpt]
.293 00D847C08038 common_code
	                        .endw
	                        l013_cont#: 
	                        br[l013_start#]
.294 00AAC0902301 common_code
	                        .unreachable
	                    .endif
	                    l012_01#: 
	                    l012_end#: 
	                    alu[l0029!tmp, l0000!g_dma_max, -, 1]
.295 008ACC083209 common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1x[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1x[3], l0029!pcie_hi_word, or, l0029!tmp, <<20]
.296 040F06D01F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out1x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.297 00AA80D0200D common_code
	#pragma warningdefault:5117
	                    alu[l0029!len, l0029!len, -, l0000!g_dma_max]
.298 00A080A0200A common_code
	                    alu[l0029!mu_lo_start, l0029!mu_lo_start, +, l0000!g_dma_max]
.299 00A080E0200E common_code
	                    alu[l0029!pcie_lo_start, l0029!pcie_lo_start, +, l0000!g_dma_max]
.300 00B8C0C03300 common_code
	                    alu[l0029!pcie_hi_word, l0029!pcie_hi_word, +carry, 0]
.301 00E000000010 common_code
	                    .repeat
	                    l014_start#: 
	                        ctx_arb[l0000!dma_sig1]
.302 00A0589C000A common_code
	                        .io_completed $l0000!dma_out1[0]
	                        .io_completed $l0000!dma_out1[1]
	                        .io_completed $l0000!dma_out1[2]
	                        .io_completed $l0000!dma_out1[3]
	                        .io_completed $l0000!dma_out1x[0]
	                        .io_completed $l0000!dma_out1x[1]
	                        .io_completed $l0000!dma_out1x[2]
	                        .io_completed $l0000!dma_out1x[3]
	                        alu[$l0000!dma_out1[0], --, b, l0029!mu_lo_start]
.303 00B000B00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out1, $l0000!work_in1, l0000!dma_sig1)
	                        .begin
	                            .reg l0039!word
	                                alu[l0039!word, --, b, l0000!g_dma_word1_vals]
.304 00AAB000200D common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0029!len,-,l0000!g_dma_max]
.305 00D84E70812B common_code
	                        bgt[l015_01#], defer[3]
.306 00C151082D89 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0039!word, 0001, $l0000!work_in1[3], >>21]
.307 008B28A82E24 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out1[1], l0039!word, or, 4, <<14]
.308 00A058BC000E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out1[2], --, b, l0029!pcie_lo_start]
.309 00AA809C040D common_code
	                            alu[l0029!tmp, l0029!len, -, 1]
.310 00D84FE08038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out1[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0029!len, 0)
	.macro_ref                                     immed32(l0029!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l015_end#], defer[2]
.311 008AC8C83209 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out1[3], l0029!pcie_hi_word, or, l0029!tmp, <<20]
.312 00F0000C000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0029!len, 0]
.313 00AAC0902301 common_code
	                        l015_01#: 
	                            alu[l0029!tmp, l0000!g_dma_max, -, 1]
.314 008AC8C83209 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out1[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out1[3], l0029!pcie_hi_word, or, l0029!tmp, <<20]
.315 00AA80D0200D common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0029!len, l0029!len, -, l0000!g_dma_max]
.316 00A080A0200A common_code
	                            alu[l0029!mu_lo_start, l0029!mu_lo_start, +, l0000!g_dma_max]
.317 00A080E0200E common_code
	                            alu[l0029!pcie_lo_start, l0029!pcie_lo_start, +, l0000!g_dma_max]
.318 00B8C0C03300 common_code
	                            alu[l0029!pcie_hi_word, l0029!pcie_hi_word, +carry, 0]
.319 040F06901F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l015_end#: 
	                        pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.320 00A0700C000D common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l014_cont#: 
	                    alu[--,--,b,l0029!len]
.321 00D84B408121 common_code
	                    bne[l014_start#]
.322 00E063C50024 common_code
	                .endif
	                l011_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig0, state_e2n2#)
	.macro_ref                     wait_br_next_state(l0000!work_sig2, l0000!dma_sig0, state_e2n2#, --)
	                        .set_sig l0000!work_sig2
	                            .set_sig l0000!dma_sig0
	                                ctx_arb[l0000!work_sig2, l0000!dma_sig0], any, br[state_e2n2#]
.323 009150D22600 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M197_mu_only_dma#:
	                alu_shf[l0029!mu_lo_start, --, b, $l0000!work_in1[3], <<11]
.324 00F001F03BFF common_code
	.macro_ref                 wsm_extract(l0029!tmp, $l0000!work_in1,  SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0029!tmp, $l0000!work_in1, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0029!tmp, $l0000!work_in1[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0042!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0042!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0042!_wsm_mask, 0x1FFF]
.325 008400983888 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0029!tmp, l0042!_wsm_mask, and, $l0000!work_in1[2], >>0]
.326 00A0C0A03409 common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0029!mu_lo_start, l0029!mu_lo_start, +, l0029!tmp]
.327 00A0589C000A common_code
	.macro_ref                 move($l0000!dma_out1[0], l0029!mu_lo_start)
	                        alu[$l0000!dma_out1[0], --, b, l0029!mu_lo_start]
.328 00B000E00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out1, $l0000!work_in1, l0000!dma_sig1)
	                .begin
	                    .reg l0043!word
	                        alu[l0043!word, --, b, l0000!g_dma_word1_vals]
.329 00AAB000200D common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	.macro_ref                 move($l0000!dma_out1[2], l0029!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0029!len,-,l0000!g_dma_max]
.330 00D854B0812B common_code
	                bgt[l016_01#], defer[3]
.331 00C151083989 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        ld_field[l0043!word, 0001, $l0000!work_in1[3], >>21]
.332 008B28A83A24 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu_shf[$l0000!dma_out1[1], l0043!word, or, 4, <<14]
.333 00A058BC000E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out1[2], --, b, l0029!pcie_lo_start]
.334 00AA809C040D common_code
	                    alu[l0029!tmp, l0029!len, -, 1]
.335 008AC8C83209 common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1[3], l0029!pcie_hi_word, or, l0029!tmp, <<20]
.336 040F06901F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.337 00D85E008038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l016_end#]
.338 00F002803F00 common_code
	                    .if (len > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0045!__immed_big_const
	                l016_01#: 
	                    immed[l0045!__immed_big_const,10240]
.339 00AAB0003C0D common_code
	                    alu[--,l0029!len,-,l0045!__immed_big_const]
.340 00D85700812A common_code
	                    ble[l017_01#]
.341 00F000803706 common_code
	                    .endlocal
	                        .while (1)
	                        l018_start#: 
	.macro_ref                             move(l0029!tmp, 0x806)
	.macro_ref                                     immed32(l0029!tmp, 0x806)
	                                            immed[l0029!tmp, 2054]
.342 00FC17203700 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0029!tmp]
.343 00FC176C0188 common_code
	                            local_csr_wr[mailbox1, $l0000!work_in1[2]]
.344 00FC17AC0189 common_code
	                            local_csr_wr[mailbox2, $l0000!work_in1[3]]
.345 00FC17EC018A common_code
	                            local_csr_wr[mailbox3, $l0000!work_in1[4]]
.346 00E000020000 common_code
	                            ctx_arb[bpt]
.347 00D855408038 common_code
	                        .endw
	                        l018_cont#: 
	                        br[l018_start#]
.348 00AAC0902301 common_code
	                        .unreachable
	                    .endif
	                    l017_01#: 
	                    l017_end#: 
	                    alu[l0029!tmp, l0000!g_dma_max, -, 1]
.349 008AC8C83209 common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1[3], l0029!pcie_hi_word, or, l0029!tmp, <<20]
.350 040F06901F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.351 00AA80D0200D common_code
	#pragma warningdefault:5117
	                    alu[l0029!len, l0029!len, -, l0000!g_dma_max]
.352 00A080A0200A common_code
	                    alu[l0029!mu_lo_start, l0029!mu_lo_start, +, l0000!g_dma_max]
.353 00A080E0200E common_code
	                    alu[l0029!pcie_lo_start, l0029!pcie_lo_start, +, l0000!g_dma_max]
.354 00B8C0C03300 common_code
	                    alu[l0029!pcie_hi_word, l0029!pcie_hi_word, +carry, 0]
.355 00E000000010 common_code
	                    .repeat
	                    l019_start#: 
	                        ctx_arb[l0000!dma_sig1]
.356 00A0589C000A common_code
	                        .io_completed $l0000!dma_out1[0]
	                        .io_completed $l0000!dma_out1[1]
	                        .io_completed $l0000!dma_out1[2]
	                        .io_completed $l0000!dma_out1[3]
	                        .io_completed $l0000!dma_out1x[0]
	                        .io_completed $l0000!dma_out1x[1]
	                        .io_completed $l0000!dma_out1x[2]
	                        .io_completed $l0000!dma_out1x[3]
	                        alu[$l0000!dma_out1[0], --, b, l0029!mu_lo_start]
.357 00B000B00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out1, $l0000!work_in1, l0000!dma_sig1)
	                        .begin
	                            .reg l0047!word
	                                alu[l0047!word, --, b, l0000!g_dma_word1_vals]
.358 00AAB000200D common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0029!len,-,l0000!g_dma_max]
.359 00D85BF0812B common_code
	                        bgt[l020_01#], defer[3]
.360 00C151082D89 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0047!word, 0001, $l0000!work_in1[3], >>21]
.361 008B28A82E24 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out1[1], l0047!word, or, 4, <<14]
.362 00A058BC000E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out1[2], --, b, l0029!pcie_lo_start]
.363 00AA809C040D common_code
	                            alu[l0029!tmp, l0029!len, -, 1]
.364 00D85D608038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out1[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0029!len, 0)
	.macro_ref                                     immed32(l0029!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l020_end#], defer[2]
.365 008AC8C83209 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out1[3], l0029!pcie_hi_word, or, l0029!tmp, <<20]
.366 00F0000C000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0029!len, 0]
.367 00AAC0902301 common_code
	                        l020_01#: 
	                            alu[l0029!tmp, l0000!g_dma_max, -, 1]
.368 008AC8C83209 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out1[3], l0029!pcie_hi_word, PCIE_DMA_XLEN, l0029!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out1[3], l0029!pcie_hi_word, or, l0029!tmp, <<20]
.369 00AA80D0200D common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0029!len, l0029!len, -, l0000!g_dma_max]
.370 00A080A0200A common_code
	                            alu[l0029!mu_lo_start, l0029!mu_lo_start, +, l0000!g_dma_max]
.371 00A080E0200E common_code
	                            alu[l0029!pcie_lo_start, l0029!pcie_lo_start, +, l0000!g_dma_max]
.372 00B8C0C03300 common_code
	                            alu[l0029!pcie_hi_word, l0029!pcie_hi_word, +carry, 0]
.373 040F06901F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l020_end#: 
	                        pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.374 00A0700C000D common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l019_cont#: 
	                    alu[--,--,b,l0029!len]
.375 00D858C08121 common_code
	                    bne[l019_start#]
.376 00E063C50024 common_code
	                .endif
	                l016_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig0, state_e2n2#)
	.macro_ref                     wait_br_next_state(l0000!work_sig2, l0000!dma_sig0, state_e2n2#, --)
	                        .set_sig l0000!work_sig2
	                            .set_sig l0000!dma_sig0
	                                ctx_arb[l0000!work_sig2, l0000!dma_sig0], any, br[state_e2n2#]
.377 00FC044C0000 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M197_no_dma#:
	                local_csr_rd[active_ctx_sts]
.378 00F000003700 common_code
	                immed[l0029!tmp, 0]
.379 00B440D03707 common_code
	                alu[l0029!tmp, l0029!tmp, and, 7]
.380 00E063E50024 common_code
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig0, state_e2n2#)
	.macro_ref                     wait_br_next_state(l0000!work_sig2, l0000!dma_sig0, state_e2n2#, --)
	                        .set_sig l0000!work_sig2
	                            .set_sig l0000!dma_sig0
	                                ctx_arb[l0000!work_sig2, l0000!dma_sig0], defer[2], any, br[state_e2n2#]
.381 009BD0D83624 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                alu_shf[l0029!tmp, l0029!tmp, or, 4, <<3]
.382 00FC10A03700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                local_csr_wr[same_me_signal, l0029!tmp]
.383 00F000803707 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M197_ctm_only_not_flagged#:
	.macro_ref                 move(l0029!tmp, 0x807)
	M315#:
	.macro_ref                         immed32(l0029!tmp, 0x807)
	M316#:
	                                immed[l0029!tmp, 2055]
.384 00FC17203700 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                local_csr_wr[mailbox0, l0029!tmp]
.385 00FC176C0188 common_code
	                local_csr_wr[mailbox1, $l0000!work_in1[2]]
.386 00FC17AC0189 common_code
	                local_csr_wr[mailbox2, $l0000!work_in1[3]]
.387 00FC17EC018A common_code
	                local_csr_wr[mailbox3, $l0000!work_in1[4]]
.388 00E000020000 common_code
	                ctx_arb[bpt]
.389 00D85FC08038 common_code
	                br[M197_ctm_only_not_flagged#]
.390 00F000003300 common_code
	            M197_add_wq_credits#:
	.macro_ref                 move(l0029!addr_lo, nfd_out_sb_wq_credits0)
	M317#:
	.macro_ref                         immed32(l0029!addr_lo, nfd_out_sb_wq_credits0)
	M318#:
	                                    immed[l0029!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.391 00F440003300 common_code
	                                    immed_w1[l0029!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.392 008B02028206 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                alu_shf[--, l0000!g_add_imm_iref, or, 64, <<16]
.393 124702083320 common_code
	                mem[add_imm, --, 0, l0029!addr_lo,1], indirect_ref
.394 00F001803B34 common_code
	.macro_ref                 signal_sb_credits_update()
	                .begin
	                    .reg l0050!addr
	.macro_ref                     move(l0050!addr, 603985972)
	.macro_ref                             immed32(l0050!addr, 603985972)
	                                        immed[l0050!addr, 6196]
.395 00F442403B00 common_code
	                                        immed_w1[l0050!addr, 9216]
.396 101C00083B20 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    ct[interthread_signal, --, 0, l0050!addr,1]
.397 00D838908038 common_code
	                .end
	.end_macro_ref                 signal_sb_credits_update
	                br[M197_start_packet_dma#], defer[1]
.398 00F000022B3F common_code
	.macro_ref                 move(@l0000!ndequeued, (64 - 1))
	.macro_ref                         immed32(@l0000!ndequeued, (64 - 1))
	                                immed[@l0000!ndequeued, 63]
.399 00D8A1808232 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	            .end
	.end_macro_ref             _issue_packet_dma
	.end_macro_ref         issue_packet_dma
	    state_e2n2#:
	        br_signal[l0000!dma_sig0, transition_e2n2_e1n2#]
.400 00D9E7414233 common_code
	        br_!signal[l0000!work_sig2, unreached#]
.401 00BAC8A22B01 common_code
	    transition_e2n2_e3n0#:
	.macro_ref         issue_packet_dma(2, state_e3n0#, l0000!dma_sig0)
	M324#:
	.macro_ref             issue_packet_dma(2, state_e3n0#, l0000!dma_sig0, --)
	M325#:
	                .io_completed l0000!work_sig2
	                .io_completed l0000!dma_sig2
	.macro_ref                 _issue_packet_dma($l0000!work_in2, $l0000!dma_out2, $l0000!dma_out2x, l0000!dma_sig2, state_e3n0#, l0000!dma_sig0, --)
	                .begin
	                    .reg l0051!word
	                    .reg l0051!tmp
	                    .reg l0051!tmp2
	                    .reg l0051!isl
	                    .reg l0051!ovfl
	                    .reg l0051!len
	                    .reg l0051!addr_lo
	                    .reg l0051!pcie_hi_word
	                    .reg l0051!pcie_lo_start
	                    .reg l0051!mu_lo_start
	                    .reg l0051!ctm_bytes
	                    .reg l0051!split_len
	                    .io_completed $l0000!work_in2[0]
	                    .io_completed $l0000!work_in2[1]
	                    .io_completed $l0000!work_in2[2]
	                    .io_completed $l0000!work_in2[3]
	                    .io_completed $l0000!work_in2[4]
	                    .io_completed $l0000!dma_out2[0]
	                    .io_completed $l0000!dma_out2[1]
	                    .io_completed $l0000!dma_out2[2]
	                    .io_completed $l0000!dma_out2[3]
	                    .io_completed $l0000!dma_out2x[0]
	                    .io_completed $l0000!dma_out2x[1]
	                    .io_completed $l0000!dma_out2x[2]
	                    .io_completed $l0000!dma_out2x[3]
	                    alu[@l0000!ndequeued, @l0000!ndequeued, -, 1]
.402 00D88DC08129 common_code
	                    blt[M326_add_wq_credits#]
.403 00D08A822C20 common_code
	                M326_start_packet_dma#:
	.macro_ref                     wsm_test_bit_clr($l0000!work_in2, SB_WQ_ENABLED, M326_no_dma#)
	M327#:
	.macro_ref                         wsm_test_bit_clr($l0000!work_in2, SB_WQ_ENABLED, M326_no_dma#, --)
	M328#:
	.macro_ref                             sm_test_bit_clr($l0000!work_in2[0], SB_WQ_ENABLED, M326_no_dma#, --)
	M329#:
	                                    br_bclr[$l0000!work_in2[0], 31, M326_no_dma#]
.404 00D068C2343A common_code
	.end_macro_ref                             sm_test_bit_clr
	.end_macro_ref                         wsm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.macro_ref                     wsm_test_bit_clr($l0000!work_in2, SB_WQ_CTM_ONLY, M326_not_ctm_only#)
	.macro_ref                         wsm_test_bit_clr($l0000!work_in2, SB_WQ_CTM_ONLY, M326_not_ctm_only#, --)
	.macro_ref                             sm_test_bit_clr($l0000!work_in2[2], SB_WQ_CTM_ONLY, M326_not_ctm_only#, --)
	                                    br_bclr[$l0000!work_in2[2], 25, M326_not_ctm_only#]
.405 00B440F63401 common_code
	.end_macro_ref                             sm_test_bit_clr
	.end_macro_ref                         wsm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	                M326_ctm_only#:
	                    alu[l0051!word, $l0000!work_in2[2], and, l0000!g_dma_word0_mask]
.406 008A1C183E21 common_code
	                    alu_shf[$l0000!dma_out2[0], l0051!word, or, 1, <<31]
.407 0085A0D2357F common_code
	.macro_ref                     wsm_extract(l0051!word, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0051!word, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0051!word, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0051!word, 0x3F, and, $l0000!work_in2[2], >>26]
.408 00BA00F0040D common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0051!word, l0051!word, or, l0000!g_dma_word1_vals]
.409 008B2C283E26 common_code
	                    alu_shf[$l0000!dma_out2[1], l0051!word, or, 6, <<14]
.410 00A01C363300 common_code
	                        alu[$l0000!dma_out2[2], --, b, $l0000!work_in2[1]]
.411 01A4C0D0098B common_code
	                    alu[l0051!word, l0000!g_dma_word3_vals, +8, $l0000!work_in2[0]], no_cc
.412 009570C62DFF common_code
	.macro_ref                     wsm_extract(l0051!tmp, $l0000!work_in2,  SB_WQ_RID)
	.macro_ref                         wsm_extract(l0051!tmp, $l0000!work_in2, SB_WQ_RID, 0)
	.macro_ref                             sm_extract(l0051!tmp, $l0000!work_in2[0], SB_WQ_RID, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0051!tmp, 0xFF, and, $l0000!work_in2[0], >>23]
.413 008B40D0320D common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     sm_set_noclr(l0051!word, PCIE_DMA_RID, l0051!tmp)
	.macro_ref                         sm_set_noclr(l0051!word, PCIE_DMA_RID, l0051!tmp, 0)
	.macro_ref                             sm_set_noclr_to(l0051!word, l0051!word, PCIE_DMA_RID, l0051!tmp, 0)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0051!word, l0051!word, or, l0051!tmp, <<12]
.414 00C00318388F common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.end_macro_ref                         sm_set_noclr
	.end_macro_ref                     sm_set_noclr
	.macro_ref                     wsm_extract(l0051!len, $l0000!work_in2, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0051!len, $l0000!work_in2, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0051!len, $l0000!work_in2[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    ld_field_w_clr[l0051!len, 0011, $l0000!work_in2[4],0]
.415 040F07101F08 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	#pragma warningdisable:5117
	#pragma warningdisable:4701
	#pragma warningdisable:5009
	                    pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.416 00E090240004 common_code
	#pragma warningdefault:5117
	.macro_ref                     wait_br_next_state(l0000!dma_sig0, --, state_e3n0#, defer[2])
	                        .set_sig l0000!dma_sig0
	                                ctx_arb[l0000!dma_sig0], br[state_e3n0#], defer[2]
.417 00BAC0E03B01 common_code
	.end_macro_ref                     wait_br_next_state
	                    alu[l0051!len, l0051!len, -, 1]
.418 008ACC403A0D common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2[3], l0051!word, PCIE_DMA_XLEN, l0051!len, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2[3], l0051!word, or, l0051!len, <<20]
.419 00A000C63300 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdefault:4701
	#pragma warningdefault:5009
	                M326_not_ctm_only#:
	                        alu[l0051!pcie_lo_start, --, b, $l0000!work_in2[1]]
.420 01B4C0B0098B common_code
	                    alu[l0051!pcie_hi_word, l0000!g_dma_word3_vals, +8, $l0000!work_in2[0]], no_cc
.421 0095A0D2357F common_code
	.macro_ref                     wsm_extract(l0051!tmp, $l0000!work_in2,  SB_WQ_RID)
	.macro_ref                         wsm_extract(l0051!tmp, $l0000!work_in2, SB_WQ_RID, 0)
	.macro_ref                             sm_extract(l0051!tmp, $l0000!work_in2[0], SB_WQ_RID, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     sm_set_noclr(l0051!pcie_hi_word, PCIE_DMA_RID, l0051!tmp)
	.macro_ref                         sm_set_noclr(l0051!pcie_hi_word, PCIE_DMA_RID, l0051!tmp, 0)
	.macro_ref                             sm_set_noclr_to(l0051!pcie_hi_word, l0051!pcie_hi_word, PCIE_DMA_RID, l0051!tmp, 0)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.end_macro_ref                         sm_set_noclr
	.end_macro_ref                     sm_set_noclr
	.macro_ref                     wsm_extract(l0051!len, $l0000!work_in2, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0051!len, $l0000!work_in2, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0051!len, $l0000!work_in2[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     wsm_extract(l0051!isl, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0051!isl, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0051!isl, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0051!isl, 0x3F, and, $l0000!work_in2[2], >>26]
.422 00D87D308120 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    beq[M326_mu_only_dma#], defer[3]
.423 008570D62DFF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[l0051!tmp, 0xFF, and, $l0000!work_in2[0], >>23]
.424 009B40B82E0D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0051!pcie_hi_word, l0051!pcie_hi_word, or, l0051!tmp, <<12]
.425 00C003123C0F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    ld_field_w_clr[l0051!len, 0011, $l0000!work_in2[4],0]
.426 00F000103300 common_code
	                M326_ctm_and_mu_dma#:
	.macro_ref                     move(l0051!tmp, 256)
	M374#:
	.macro_ref                             immed32(l0051!tmp, 256)
	M375#:
	                                    immed[l0051!tmp, 256]
.427 0094E0F23523 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	.macro_ref                     wsm_extract(l0051!tmp2, $l0000!work_in2, SB_WQ_CTM_SPLIT)
	.macro_ref                         wsm_extract(l0051!tmp2, $l0000!work_in2, SB_WQ_CTM_SPLIT, 0)
	.macro_ref                             sm_extract(l0051!tmp2, $l0000!work_in2[2], SB_WQ_CTM_SPLIT, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_SPLIT)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0051!tmp2, 0x3, and, $l0000!work_in2[2], >>14]
.428 00AA70003F00 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[--, l0051!tmp2, or, 0]
.429 009000E03200 common_code
	                    alu_shf[l0051!split_len, --, b, l0051!tmp, <<indirect]
.430 00F001F03FFF common_code
	.macro_ref                     wsm_extract(l0051!tmp, $l0000!work_in2, SB_WQ_OFFSET)
	.macro_ref                         wsm_extract(l0051!tmp, $l0000!work_in2, SB_WQ_OFFSET, 0)
	.macro_ref                             sm_extract(l0051!tmp, $l0000!work_in2[2], SB_WQ_OFFSET, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                             __WSM_GET_MASKLEN
	                                    .begin
	                                        .reg l0055!_wsm_mask
	.macro_ref                                         _wsm_loadmask(l0055!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                 _wsm_validate_size
	                                                immed[l0055!_wsm_mask, 0x1FFF]
.431 008400D83C8D common_code
	.end_macro_ref                                         _wsm_loadmask
	                                        alu_shf[l0051!tmp, l0055!_wsm_mask, and, $l0000!work_in2[2], >>0]
.432 00BAC0D0380D common_code
	                                    .end
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0051!ctm_bytes, l0051!split_len, -, l0051!tmp]
.433 00D87D00812A common_code
	                    ble[M326_mu_only_dma#]
.434 00A440D63401 common_code
	                    alu[l0051!word, $l0000!work_in2[2], and, l0000!g_dma_word0_mask]
.435 008A1C10860D common_code
	                    alu_shf[$l0000!dma_out2[0], l0051!word, or, 1, <<31]
.436 0085A0D2357F common_code
	.macro_ref                     wsm_extract(l0051!word, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0051!word, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0051!word, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0051!word, 0x3F, and, $l0000!work_in2[2], >>26]
.437 00AA00DE000D common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0051!word, l0051!word, or, 0x80]                   ; Direct access
.438 008B8C219A0D common_code
	                    alu_shf[$l0000!dma_out2[1], l0051!word, or, 38, <<8]
.439 00A05C3C000C common_code
	                    alu[$l0000!dma_out2[2], --, b, l0051!pcie_lo_start]
.440 00AAC0D03701 common_code
	                    alu[l0051!tmp, l0051!ctm_bytes, -, 1]
.441 008ACC482E0D common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp)
	.macro_ref                         sm_set_noclr_to($l0000!dma_out2[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out2[3], l0051!pcie_hi_word, or, l0051!tmp, <<20]
.442 040F07101F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.443 00AA80F0340F common_code
	#pragma warningdefault:5117
	                    alu[l0051!len, l0051!len, -, l0051!ctm_bytes]
.444 00D88C00812A common_code
	                    ble[M326_ctm_only_not_flagged#]
.445 008150B23A00 common_code
	                    alu_shf[l0051!mu_lo_start, --, b, $l0000!work_in2[3], <<11]
.446 00A080B0380B common_code
	                    alu[l0051!mu_lo_start, l0051!mu_lo_start, +, l0051!split_len]
.447 00A05C5C000B common_code
	.macro_ref                     move($l0000!dma_out2x[0], l0051!mu_lo_start)
	                            alu[$l0000!dma_out2x[0], --, b, l0051!mu_lo_start]
.448 00B000C00700 common_code
	.end_macro_ref                     move
	.macro_ref                     _build_mu_dma_word1($l0000!dma_out2x, $l0000!work_in2, l0000!dma_sig2)
	                    .begin
	                        .reg l0057!word
	                            alu[l0057!word, --, b, l0000!g_dma_word1_vals]
.449 00A080C0340C common_code
	                    .end
	.end_macro_ref                     _build_mu_dma_word1
	                    alu[l0051!pcie_lo_start, l0051!pcie_lo_start, +, l0051!ctm_bytes]
.450 00B8C0B02F00 common_code
	                    alu[l0051!pcie_hi_word, l0051!pcie_hi_word, +carry, 0]
.451 00AAB000200F common_code
	.macro_ref                     move($l0000!dma_out2x[2], l0051!pcie_lo_start)
	.end_macro_ref                     move
	                    .if (len <= g_dma_max)
	                    alu[--,l0051!len,-,l0000!g_dma_max]
.452 00D87330812B common_code
	                    bgt[l021_01#], defer[3]
.453 00C15108318E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                            ld_field[l0057!word, 0001, $l0000!work_in2[3], >>21]
.454 008B2C683226 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                            alu_shf[$l0000!dma_out2x[1], l0057!word, or, 6, <<14]
.455 00A05C7C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out2x[2], --, b, l0051!pcie_lo_start]
.456 00AA80DC040F common_code
	                        alu[l0051!tmp, l0051!len, -, 1]
.457 008ACC882E0D common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out2x[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out2x[3], l0051!pcie_hi_word, or, l0051!tmp, <<20]
.458 040F07501F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out2x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.459 00D87CC08038 common_code
	#pragma warningdefault:5117
	                    .else
	                    br[l021_end#]
.460 00C003123C0D common_code
	                    l021_01#: 
	.macro_ref                         wsm_extract(l0051!tmp, $l0000!work_in2, SB_WQ_DATALEN)
	.macro_ref                             wsm_extract(l0051!tmp, $l0000!work_in2, SB_WQ_DATALEN, 0)
	.macro_ref                                 sm_extract(l0051!tmp, $l0000!work_in2[4], SB_WQ_DATALEN, 0)
	.macro_ref                                 __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                                 __WSM_GET_MASKLEN
	.macro_ref                                         _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                         _wsm_validate_size
	                                        ld_field_w_clr[l0051!tmp, 0011, $l0000!work_in2[4],0]
.461 00F002803B00 common_code
	.end_macro_ref                                 sm_extract
	.end_macro_ref                             wsm_extract
	.end_macro_ref                         wsm_extract
	                        .if (tmp > NFD_OUT_MAX_PKT_BYTES)
	                        .local l0059!__immed_big_const
	                        immed[l0059!__immed_big_const,10240]
.462 00AAB000380D common_code
	                        alu[--,l0051!tmp,-,l0059!__immed_big_const]
.463 00D875C0812A common_code
	                        ble[l022_01#]
.464 00F000803306 common_code
	                        .endlocal
	                            .while (1)
	                            l023_start#: 
	.macro_ref                                 move(l0051!tmp, 0x806)
	.macro_ref                                         immed32(l0051!tmp, 0x806)
	                                                immed[l0051!tmp, 2054]
.465 00FC17203300 common_code
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                                local_csr_wr[mailbox0, l0051!tmp]
.466 00FC176C018D common_code
	                                local_csr_wr[mailbox1, $l0000!work_in2[2]]
.467 00FC17AC018E common_code
	                                local_csr_wr[mailbox2, $l0000!work_in2[3]]
.468 00FC17EC018F common_code
	                                local_csr_wr[mailbox3, $l0000!work_in2[4]]
.469 00E000020000 common_code
	                                ctx_arb[bpt]
.470 00D874008038 common_code
	                            .endw
	                            l023_cont#: 
	                            br[l023_start#]
.471 00AAC0D02301 common_code
	                            .unreachable
	                        .endif
	                        l022_01#: 
	                        l022_end#: 
	                        alu[l0051!tmp, l0000!g_dma_max, -, 1]
.472 008ACC882E0D common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out2x[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out2x[3], l0051!pcie_hi_word, or, l0051!tmp, <<20]
.473 040F07501F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out2x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.474 00AA80F0200F common_code
	#pragma warningdefault:5117
	                        alu[l0051!len, l0051!len, -, l0000!g_dma_max]
.475 00A080B0200B common_code
	                        alu[l0051!mu_lo_start, l0051!mu_lo_start, +, l0000!g_dma_max]
.476 00A080C0200C common_code
	                        alu[l0051!pcie_lo_start, l0051!pcie_lo_start, +, l0000!g_dma_max]
.477 00B8C0B02F00 common_code
	                        alu[l0051!pcie_hi_word, l0051!pcie_hi_word, +carry, 0]
.478 00E000000040 common_code
	                        .repeat
	                        l024_start#: 
	                            ctx_arb[l0000!dma_sig2]
.479 00A05C1C000B common_code
	                            .io_completed $l0000!dma_out2[0]
	                            .io_completed $l0000!dma_out2[1]
	                            .io_completed $l0000!dma_out2[2]
	                            .io_completed $l0000!dma_out2[3]
	                            .io_completed $l0000!dma_out2x[0]
	                            .io_completed $l0000!dma_out2x[1]
	                            .io_completed $l0000!dma_out2x[2]
	                            .io_completed $l0000!dma_out2x[3]
	                            alu[$l0000!dma_out2[0], --, b, l0051!mu_lo_start]
.480 00B000F00700 common_code
	.macro_ref                             _build_mu_dma_word1($l0000!dma_out2, $l0000!work_in2, l0000!dma_sig2)
	                            .begin
	                                .reg l0061!word
	                                    alu[l0061!word, --, b, l0000!g_dma_word1_vals]
.481 00AAB000200F common_code
	                            .end
	.end_macro_ref                             _build_mu_dma_word1
	                            .if (len <= g_dma_max)
	                            alu[--,l0051!len,-,l0000!g_dma_max]
.482 00D87AB0812B common_code
	                            bgt[l025_01#], defer[3]
.483 00C151083D8E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    ld_field[l0061!word, 0001, $l0000!work_in2[3], >>21]
.484 008B2C283E26 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[$l0000!dma_out2[1], l0061!word, or, 6, <<14]
.485 00A05C3C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out2[2], --, b, l0051!pcie_lo_start]
.486 00AA80DC040F common_code
	                                alu[l0051!tmp, l0051!len, -, 1]
.487 00D87C208038 common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out2[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	.macro_ref                                 move(l0051!len, 0)
	.macro_ref                                         immed32(l0051!len, 0)
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                            .else
	                            br[l025_end#], defer[2]
.488 008ACC482E0D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                    alu_shf[$l0000!dma_out2[3], l0051!pcie_hi_word, or, l0051!tmp, <<20]
.489 00F0000C000F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                                immed[l0051!len, 0]
.490 00AAC0D02301 common_code
	                            l025_01#: 
	                                alu[l0051!tmp, l0000!g_dma_max, -, 1]
.491 008ACC482E0D common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out2[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[$l0000!dma_out2[3], l0051!pcie_hi_word, or, l0051!tmp, <<20]
.492 00AA80F0200F common_code
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	                                alu[l0051!len, l0051!len, -, l0000!g_dma_max]
.493 00A080B0200B common_code
	                                alu[l0051!mu_lo_start, l0051!mu_lo_start, +, l0000!g_dma_max]
.494 00A080C0200C common_code
	                                alu[l0051!pcie_lo_start, l0051!pcie_lo_start, +, l0000!g_dma_max]
.495 00B8C0B02F00 common_code
	                                alu[l0051!pcie_hi_word, l0051!pcie_hi_word, +carry, 0]
.496 040F07101F08 common_code
	                            .endif
	#pragma warningdisable:5117
	                            l025_end#: 
	                            pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.497 00A0700C000F common_code
	#pragma warningdefault:5117
	                        .until (len == 0)
	                        l024_cont#: 
	                        alu[--,--,b,l0051!len]
.498 00D877808121 common_code
	                        bne[l024_start#]
.499 00E090040004 common_code
	                    .endif
	                    l021_end#: 
	.macro_ref                     wait_br_next_state(l0000!dma_sig0, --, state_e3n0#)
	.macro_ref                         wait_br_next_state(l0000!dma_sig0, --, state_e3n0#, --)
	                            .set_sig l0000!dma_sig0
	                                    ctx_arb[l0000!dma_sig0], br[state_e3n0#]
.500 009150C23A00 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M326_mu_only_dma#:
	                    alu_shf[l0051!mu_lo_start, --, b, $l0000!work_in2[3], <<11]
.501 00F001F037FF common_code
	.macro_ref                     wsm_extract(l0051!tmp, $l0000!work_in2,  SB_WQ_OFFSET)
	.macro_ref                         wsm_extract(l0051!tmp, $l0000!work_in2, SB_WQ_OFFSET, 0)
	.macro_ref                             sm_extract(l0051!tmp, $l0000!work_in2[2], SB_WQ_OFFSET, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                             __WSM_GET_MASKLEN
	                                    .begin
	                                        .reg l0064!_wsm_mask
	.macro_ref                                         _wsm_loadmask(l0064!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                 _wsm_validate_size
	                                                immed[l0064!_wsm_mask, 0x1FFF]
.502 008400D8348D common_code
	.end_macro_ref                                         _wsm_loadmask
	                                        alu_shf[l0051!tmp, l0064!_wsm_mask, and, $l0000!work_in2[2], >>0]
.503 00A0C0B0300D common_code
	                                    .end
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0051!mu_lo_start, l0051!mu_lo_start, +, l0051!tmp]
.504 00A05C1C000B common_code
	.macro_ref                     move($l0000!dma_out2[0], l0051!mu_lo_start)
	                            alu[$l0000!dma_out2[0], --, b, l0051!mu_lo_start]
.505 00B000D00700 common_code
	.end_macro_ref                     move
	.macro_ref                     _build_mu_dma_word1($l0000!dma_out2, $l0000!work_in2, l0000!dma_sig2)
	                    .begin
	                        .reg l0065!word
	                            alu[l0065!word, --, b, l0000!g_dma_word1_vals]
.506 00AAB000200F common_code
	                    .end
	.end_macro_ref                     _build_mu_dma_word1
	.macro_ref                     move($l0000!dma_out2[2], l0051!pcie_lo_start)
	.end_macro_ref                     move
	                    .if (len <= g_dma_max)
	                    alu[--,l0051!len,-,l0000!g_dma_max]
.507 00D880F0812B common_code
	                    bgt[l026_01#], defer[3]
.508 00C15108358E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            ld_field[l0065!word, 0001, $l0000!work_in2[3], >>21]
.509 008B2C283626 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu_shf[$l0000!dma_out2[1], l0065!word, or, 6, <<14]
.510 00A05C3C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out2[2], --, b, l0051!pcie_lo_start]
.511 00AA80DC040F common_code
	                        alu[l0051!tmp, l0051!len, -, 1]
.512 008ACC482E0D common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out2[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out2[3], l0051!pcie_hi_word, or, l0051!tmp, <<20]
.513 040F07101F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.514 00D88A408038 common_code
	#pragma warningdefault:5117
	                    .else
	                    br[l026_end#]
.515 00F002803B00 common_code
	                        .if (len > NFD_OUT_MAX_PKT_BYTES)
	                        .local l0067!__immed_big_const
	                    l026_01#: 
	                        immed[l0067!__immed_big_const,10240]
.516 00AAB000380F common_code
	                        alu[--,l0051!len,-,l0067!__immed_big_const]
.517 00D88340812A common_code
	                        ble[l027_01#]
.518 00F000803306 common_code
	                        .endlocal
	                            .while (1)
	                            l028_start#: 
	.macro_ref                                 move(l0051!tmp, 0x806)
	.macro_ref                                         immed32(l0051!tmp, 0x806)
	                                                immed[l0051!tmp, 2054]
.519 00FC17203300 common_code
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                                local_csr_wr[mailbox0, l0051!tmp]
.520 00FC176C018D common_code
	                                local_csr_wr[mailbox1, $l0000!work_in2[2]]
.521 00FC17AC018E common_code
	                                local_csr_wr[mailbox2, $l0000!work_in2[3]]
.522 00FC17EC018F common_code
	                                local_csr_wr[mailbox3, $l0000!work_in2[4]]
.523 00E000020000 common_code
	                                ctx_arb[bpt]
.524 00D881808038 common_code
	                            .endw
	                            l028_cont#: 
	                            br[l028_start#]
.525 00AAC0D02301 common_code
	                            .unreachable
	                        .endif
	                        l027_01#: 
	                        l027_end#: 
	                        alu[l0051!tmp, l0000!g_dma_max, -, 1]
.526 008ACC482E0D common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out2[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out2[3], l0051!pcie_hi_word, or, l0051!tmp, <<20]
.527 040F07101F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.528 00AA80F0200F common_code
	#pragma warningdefault:5117
	                        alu[l0051!len, l0051!len, -, l0000!g_dma_max]
.529 00A080B0200B common_code
	                        alu[l0051!mu_lo_start, l0051!mu_lo_start, +, l0000!g_dma_max]
.530 00A080C0200C common_code
	                        alu[l0051!pcie_lo_start, l0051!pcie_lo_start, +, l0000!g_dma_max]
.531 00B8C0B02F00 common_code
	                        alu[l0051!pcie_hi_word, l0051!pcie_hi_word, +carry, 0]
.532 00E000000040 common_code
	                        .repeat
	                        l029_start#: 
	                            ctx_arb[l0000!dma_sig2]
.533 00A05C1C000B common_code
	                            .io_completed $l0000!dma_out2[0]
	                            .io_completed $l0000!dma_out2[1]
	                            .io_completed $l0000!dma_out2[2]
	                            .io_completed $l0000!dma_out2[3]
	                            .io_completed $l0000!dma_out2x[0]
	                            .io_completed $l0000!dma_out2x[1]
	                            .io_completed $l0000!dma_out2x[2]
	                            .io_completed $l0000!dma_out2x[3]
	                            alu[$l0000!dma_out2[0], --, b, l0051!mu_lo_start]
.534 00B000F00700 common_code
	.macro_ref                             _build_mu_dma_word1($l0000!dma_out2, $l0000!work_in2, l0000!dma_sig2)
	                            .begin
	                                .reg l0069!word
	                                    alu[l0069!word, --, b, l0000!g_dma_word1_vals]
.535 00AAB000200F common_code
	                            .end
	.end_macro_ref                             _build_mu_dma_word1
	                            .if (len <= g_dma_max)
	                            alu[--,l0051!len,-,l0000!g_dma_max]
.536 00D88830812B common_code
	                            bgt[l030_01#], defer[3]
.537 00C151083D8E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    ld_field[l0069!word, 0001, $l0000!work_in2[3], >>21]
.538 008B2C283E26 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[$l0000!dma_out2[1], l0069!word, or, 6, <<14]
.539 00A05C3C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out2[2], --, b, l0051!pcie_lo_start]
.540 00AA80DC040F common_code
	                                alu[l0051!tmp, l0051!len, -, 1]
.541 00D889A08038 common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out2[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	.macro_ref                                 move(l0051!len, 0)
	.macro_ref                                         immed32(l0051!len, 0)
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                            .else
	                            br[l030_end#], defer[2]
.542 008ACC482E0D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                    alu_shf[$l0000!dma_out2[3], l0051!pcie_hi_word, or, l0051!tmp, <<20]
.543 00F0000C000F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                                immed[l0051!len, 0]
.544 00AAC0D02301 common_code
	                            l030_01#: 
	                                alu[l0051!tmp, l0000!g_dma_max, -, 1]
.545 008ACC482E0D common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out2[3], l0051!pcie_hi_word, PCIE_DMA_XLEN, l0051!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[$l0000!dma_out2[3], l0051!pcie_hi_word, or, l0051!tmp, <<20]
.546 00AA80F0200F common_code
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	                                alu[l0051!len, l0051!len, -, l0000!g_dma_max]
.547 00A080B0200B common_code
	                                alu[l0051!mu_lo_start, l0051!mu_lo_start, +, l0000!g_dma_max]
.548 00A080C0200C common_code
	                                alu[l0051!pcie_lo_start, l0051!pcie_lo_start, +, l0000!g_dma_max]
.549 00B8C0B02F00 common_code
	                                alu[l0051!pcie_hi_word, l0051!pcie_hi_word, +carry, 0]
.550 040F07101F08 common_code
	                            .endif
	#pragma warningdisable:5117
	                            l030_end#: 
	                            pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.551 00A0700C000F common_code
	#pragma warningdefault:5117
	                        .until (len == 0)
	                        l029_cont#: 
	                        alu[--,--,b,l0051!len]
.552 00D885008121 common_code
	                        bne[l029_start#]
.553 00E090040004 common_code
	                    .endif
	                    l026_end#: 
	.macro_ref                     wait_br_next_state(l0000!dma_sig0, --, state_e3n0#)
	.macro_ref                         wait_br_next_state(l0000!dma_sig0, --, state_e3n0#, --)
	                            .set_sig l0000!dma_sig0
	                                    ctx_arb[l0000!dma_sig0], br[state_e3n0#]
.554 00FC044C0000 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M326_no_dma#:
	                    local_csr_rd[active_ctx_sts]
.555 00F000003300 common_code
	                    immed[l0051!tmp, 0]
.556 00B440C03307 common_code
	                    alu[l0051!tmp, l0051!tmp, and, 7]
.557 00E090240004 common_code
	.macro_ref                     wait_br_next_state(l0000!dma_sig0, --, state_e3n0#)
	.macro_ref                         wait_br_next_state(l0000!dma_sig0, --, state_e3n0#, --)
	                            .set_sig l0000!dma_sig0
	                                    ctx_arb[l0000!dma_sig0], defer[2], br[state_e3n0#]
.558 009BD0C83226 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    alu_shf[l0051!tmp, l0051!tmp, or, 6, <<3]
.559 00FC10A03300 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[same_me_signal, l0051!tmp]
.560 00F000803307 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M326_ctm_only_not_flagged#:
	.macro_ref                     move(l0051!tmp, 0x807)
	M444#:
	.macro_ref                             immed32(l0051!tmp, 0x807)
	M445#:
	                                    immed[l0051!tmp, 2055]
.561 00FC17203300 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    local_csr_wr[mailbox0, l0051!tmp]
.562 00FC176C018D common_code
	                    local_csr_wr[mailbox1, $l0000!work_in2[2]]
.563 00FC17AC018E common_code
	                    local_csr_wr[mailbox2, $l0000!work_in2[3]]
.564 00FC17EC018F common_code
	                    local_csr_wr[mailbox3, $l0000!work_in2[4]]
.565 00E000020000 common_code
	                    ctx_arb[bpt]
.566 00D88C008038 common_code
	                    br[M326_ctm_only_not_flagged#]
.567 00F000002F00 common_code
	                M326_add_wq_credits#:
	.macro_ref                     move(l0051!addr_lo, nfd_out_sb_wq_credits0)
	M446#:
	.macro_ref                             immed32(l0051!addr_lo, nfd_out_sb_wq_credits0)
	M447#:
	                                        immed[l0051!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.568 00F440002F00 common_code
	                                        immed_w1[l0051!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.569 008B02028206 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    alu_shf[--, l0000!g_add_imm_iref, or, 64, <<16]
.570 124702082F20 common_code
	                    mem[add_imm, --, 0, l0051!addr_lo,1], indirect_ref
.571 00F001803F34 common_code
	.macro_ref                     signal_sb_credits_update()
	                    .begin
	                        .reg l0072!addr
	.macro_ref                         move(l0072!addr, 603985972)
	.macro_ref                                 immed32(l0072!addr, 603985972)
	                                            immed[l0072!addr, 6196]
.572 00F442403F00 common_code
	                                            immed_w1[l0072!addr, 9216]
.573 101C00083F20 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        ct[interthread_signal, --, 0, l0072!addr,1]
.574 00D864D08038 common_code
	                    .end
	.end_macro_ref                     signal_sb_credits_update
	                    br[M326_start_packet_dma#], defer[1]
.575 00F000022B3F common_code
	.macro_ref                     move(@l0000!ndequeued, (64 - 1))
	.macro_ref                             immed32(@l0000!ndequeued, (64 - 1))
	                                    immed[@l0000!ndequeued, 63]
.576 0095A0C20D7F common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                .end
	.end_macro_ref                 _issue_packet_dma
	.end_macro_ref             issue_packet_dma
	.end_macro_ref         issue_packet_dma
	    state_e3n0#:
	    transition_e3n0_e2n0#:
	.macro_ref         complete_packet_dma(0, state_e2n0#, l0000!work_sig0, l0000!dma_sig1)
	M453#:
	.macro_ref             _complete_packet_dma($l0000!work_in0, l0000!work_sig0, state_e2n0#, l0000!work_sig0, l0000!dma_sig1)
	            .begin
	                .reg l0073!isl
	                .reg l0073!qnum
	                .reg l0073!addr_hi
	                .reg l0073!addr_lo
	                .reg l0073!ring_num
	                .reg l0073!bitmap_lo
	                .reg l0073!cntr_addr_lo
	                .reg l0073!seq
	                .reg $l0073!ticket
	                .sig l0073!ticket_sig
	M454#:
	.macro_ref                 wsm_extract(l0073!qnum, $l0000!work_in0, SB_WQ_QNUM)
	.macro_ref                     wsm_extract(l0073!qnum, $l0000!work_in0, SB_WQ_QNUM, 0)
	.macro_ref                         sm_extract(l0073!qnum, $l0000!work_in0[4], SB_WQ_QNUM, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_QNUM)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0073!isl, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0073!isl, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0073!isl, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0073!isl, 0x3F, and, $l0000!work_in0[2], >>26]
.577 00D892308120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M453_no_ctm_buffer#], defer[3]
.578 008500B615FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0073!qnum, 0xFF, and, $l0000!work_in0[4], >>16]
.579 009BC0E80E0B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[l0073!bitmap_lo, l0000!g_bitmap_base, or, l0073!qnum, <<4]
.580 008488020502 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[$l0073!ticket, l0000!g_seq_mask, and, $l0000!work_in0[0], >>8]
.581 008A80D03203 common_code
	                alu_shf[l0073!addr_hi, l0000!g_pkt_free_hi, or, l0073!isl, <<24]
.582 009500B81183 common_code
	                alu_shf[l0073!addr_lo, l0000!g_pkt_num_mask, and, $l0000!work_in0[2], >>16]
.583 005200002F0D common_code
	                mem[packet_free, --, l0073!addr_hi, <<8, l0073!addr_lo]
.584 104B80003B20 common_code
	            M453_no_ctm_buffer#:
	                mem[release_ticket, $l0073!ticket, 0, l0073!bitmap_lo, 1], sig_done[l0073!ticket_sig]
.585 009830B09E84 common_code
	.macro_ref                 wsm_extract(l0073!addr_lo, $l0000!work_in0, SB_WQ_MUBUF)
	.macro_ref                     wsm_extract(l0073!addr_lo, $l0000!work_in0, SB_WQ_MUBUF, 0)
	.macro_ref                         sm_extract(l0073!addr_lo, $l0000!work_in0[3], SB_WQ_MUBUF, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_MUBUF)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0073!addr_lo, $l0000!work_in0[3], and~, 7, <<29]
.586 00E000200300 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                ctx_arb[l0073!ticket_sig, l0073!ticket_sig+1], defer[2]
.587 009BC0F8A20B common_code
	                alu_shf[l0073!cntr_addr_lo, 8, or, l0073!qnum, <<4]
.588 0085D0E21123 common_code
	.macro_ref                 wsm_extract(l0073!ring_num, $l0000!work_in0, SB_WQ_BLS)
	.macro_ref                     wsm_extract(l0073!ring_num, $l0000!work_in0, SB_WQ_BLS, 0)
	.macro_ref                         sm_extract(l0073!ring_num, $l0000!work_in0[3], SB_WQ_BLS, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_BLS)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0073!ring_num, 0x3, and, $l0000!work_in0[3], >>29]
.589 008B0208160E common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu_shf[-- , l0000!g_blm_iref, or, l0073!ring_num, <<16]
.590 025700002F05 common_code
	                mem[fast_journal, --, l0000!g_blm_addr_hi, <<8, l0073!addr_lo], indirect_ref
.591 00C894CA0020 common_code
	            M453_ticket_ready#:
	                br=byte[$l0073!ticket, 0, 0, M453_complete_done#]
.592 00C8954E00FF common_code
	                br=byte[$l0073!ticket, 0, 255, M453_ticket_error#]
.593 008B02020206 common_code
	                alu_shf[--, l0000!g_add_imm_iref, or, $l0073!ticket, <<16]
.594 024702083F04 common_code
	                mem[add_imm, --, l0000!g_send_cntrs_addr_hi, <<8, l0073!cntr_addr_lo,1], indirect_ref
.595 007918100300 common_code
	#pragma warningdisable:5009
	            M453_complete_done#:
	.macro_ref                 pci_out_pd_request_work($l0000!work_in0[0], l0000!work_sig0)
	                        cls[ring_workq_add_thread, $l0000!work_in0[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                            sig_done[l0000!work_sig0]
.596 00E102450012 common_code
	.end_macro_ref                 pci_out_pd_request_work
	#pragma warningdefault:5009
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig1, state_e2n0#)
	.macro_ref                     wait_br_next_state(l0000!work_sig0, l0000!dma_sig1, state_e2n0#, --)
	                        .set_sig l0000!work_sig0
	                            .set_sig l0000!dma_sig1
	                                ctx_arb[l0000!work_sig0, l0000!dma_sig1], any, br[state_e2n0#]
.597 00B0C0902701 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M453_ticket_error#:
	                alu[l0000!g_num_ticket_errors, l0000!g_num_ticket_errors, +, 1]
.598 00FC17202700 common_code
	                local_csr_wr[mailbox0, l0000!g_num_ticket_errors]
.599 00F0003033FF common_code
	.macro_ref                 wsm_extract(l0073!seq, $l0000!work_in0, SB_WQ_SEQ)
	.macro_ref                     wsm_extract(l0073!seq, $l0000!work_in0, SB_WQ_SEQ, 0)
	.macro_ref                         sm_extract(l0073!seq, $l0000!work_in0[0], SB_WQ_SEQ, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_SEQ)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0074!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0074!_wsm_mask, 0x3FF, 10, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0074!_wsm_mask, 0x3FF]
.600 009480B83181 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0073!seq, l0074!_wsm_mask, and, $l0000!work_in0[0], >>8]
.601 00FC17602F00 common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                local_csr_wr[mailbox1, l0073!seq]
.602 00B000DC1F00 common_code
	.macro_ref                 cycle32_sleep(250)
	                .begin
	                    .reg l0075!tmp_cycle_count l0075!_ixp_future_count_signal_num
	                    .sig l0075!_ixp_future_count_signal_name
	                    .set_sig l0075!_ixp_future_count_signal_name
	                    alu[l0075!_ixp_future_count_signal_num, --, b, 7]
.603 00FC0C0C0000 common_code
	                    local_csr_rd[timestamp_low]
.604 00F0000C000C common_code
	                    immed[l0075!tmp_cycle_count, 0]
.605 00A080CC3C0C common_code
	.macro_ref                         add(l0075!tmp_cycle_count, l0075!tmp_cycle_count, 15)
	.macro_ref                             alu_op(l0075!tmp_cycle_count, l0075!tmp_cycle_count, +, 15)
	.macro_ref                                         _nfp_alu(l0075!tmp_cycle_count, l0075!tmp_cycle_count, +, 15)
	                                                alu[l0075!tmp_cycle_count, l0075!tmp_cycle_count, +, 15]
.606 00E000200080 common_code
	.end_macro_ref                                         _nfp_alu
	.end_macro_ref                             alu_op
	.end_macro_ref                         add
	                    ctx_arb[l0075!_ixp_future_count_signal_name], defer[2]
.607 00FC05EC000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_ctx_future_count, l0075!tmp_cycle_count]
.608 00FC07E03700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_future_count_signal, l0075!_ixp_future_count_signal_num]
.609 104B80003B20 common_code
	                .end
	.end_macro_ref                 cycle32_sleep
	                mem[release_ticket, $l0073!ticket, 0, l0073!bitmap_lo, 1], sig_done[l0073!ticket_sig]
.610 00E093C40300 common_code
	                ctx_arb[l0073!ticket_sig, l0073!ticket_sig+1], br[M453_ticket_ready#]
.611 0095A0D20D7F common_code
	            .end
	.end_macro_ref             _complete_packet_dma
	.end_macro_ref         complete_packet_dma
	    transition_e1n1_e0n1#:
	.macro_ref         complete_packet_dma(0, state_e0n1#, l0000!work_sig1)
	M488#:
	.macro_ref             complete_packet_dma(0, state_e0n1#, l0000!work_sig1, --)
	M489#:
	.macro_ref                 _complete_packet_dma($l0000!work_in0, l0000!work_sig0, state_e0n1#, l0000!work_sig1, --)
	                .begin
	                    .reg l0076!isl
	                    .reg l0076!qnum
	                    .reg l0076!addr_hi
	                    .reg l0076!addr_lo
	                    .reg l0076!ring_num
	                    .reg l0076!bitmap_lo
	                    .reg l0076!cntr_addr_lo
	                    .reg l0076!seq
	                    .reg $l0076!ticket
	                    .sig l0076!ticket_sig
	M490#:
	.macro_ref                     wsm_extract(l0076!qnum, $l0000!work_in0, SB_WQ_QNUM)
	.macro_ref                         wsm_extract(l0076!qnum, $l0000!work_in0, SB_WQ_QNUM, 0)
	.macro_ref                             sm_extract(l0076!qnum, $l0000!work_in0[4], SB_WQ_QNUM, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_QNUM)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     wsm_extract(l0076!isl, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0076!isl, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0076!isl, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0076!isl, 0x3F, and, $l0000!work_in0[2], >>26]
.612 00D89AF08120 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    beq[M489_no_ctm_buffer#], defer[3]
.613 008500B615FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[l0076!qnum, 0xFF, and, $l0000!work_in0[4], >>16]
.614 009BC0F80E0B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                    alu_shf[l0076!bitmap_lo, l0000!g_bitmap_base, or, l0076!qnum, <<4]
.615 008488020502 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                    alu_shf[$l0076!ticket, l0000!g_seq_mask, and, $l0000!work_in0[0], >>8]
.616 008A80D03603 common_code
	                    alu_shf[l0076!addr_hi, l0000!g_pkt_free_hi, or, l0076!isl, <<24]
.617 009500E81183 common_code
	                    alu_shf[l0076!addr_lo, l0000!g_pkt_num_mask, and, $l0000!work_in0[2], >>16]
.618 005200003B0D common_code
	                    mem[packet_free, --, l0076!addr_hi, <<8, l0076!addr_lo]
.619 104B80003F20 common_code
	                M489_no_ctm_buffer#:
	                    mem[release_ticket, $l0076!ticket, 0, l0076!bitmap_lo, 1], sig_done[l0076!ticket_sig]
.620 009830E09E84 common_code
	.macro_ref                     wsm_extract(l0076!addr_lo, $l0000!work_in0, SB_WQ_MUBUF)
	.macro_ref                         wsm_extract(l0076!addr_lo, $l0000!work_in0, SB_WQ_MUBUF, 0)
	.macro_ref                             sm_extract(l0076!addr_lo, $l0000!work_in0[3], SB_WQ_MUBUF, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_MUBUF)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0076!addr_lo, $l0000!work_in0[3], and~, 7, <<29]
.621 00E000200300 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    ctx_arb[l0076!ticket_sig, l0076!ticket_sig+1], defer[2]
.622 009BC0B8A20B common_code
	                    alu_shf[l0076!cntr_addr_lo, 8, or, l0076!qnum, <<4]
.623 0085D0E21123 common_code
	.macro_ref                     wsm_extract(l0076!ring_num, $l0000!work_in0, SB_WQ_BLS)
	.macro_ref                         wsm_extract(l0076!ring_num, $l0000!work_in0, SB_WQ_BLS, 0)
	.macro_ref                             sm_extract(l0076!ring_num, $l0000!work_in0[3], SB_WQ_BLS, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_BLS)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0076!ring_num, 0x3, and, $l0000!work_in0[3], >>29]
.624 008B0208160E common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu_shf[-- , l0000!g_blm_iref, or, l0076!ring_num, <<16]
.625 025700003B05 common_code
	                    mem[fast_journal, --, l0000!g_blm_addr_hi, <<8, l0076!addr_lo], indirect_ref
.626 00C89D8A0020 common_code
	                M489_ticket_ready#:
	                    br=byte[$l0076!ticket, 0, 0, M489_complete_done#]
.627 00C89E0E00FF common_code
	                    br=byte[$l0076!ticket, 0, 255, M489_ticket_error#]
.628 008B02020206 common_code
	                    alu_shf[--, l0000!g_add_imm_iref, or, $l0076!ticket, <<16]
.629 024702082F04 common_code
	                    mem[add_imm, --, l0000!g_send_cntrs_addr_hi, <<8, l0076!cntr_addr_lo,1], indirect_ref
.630 007918100300 common_code
	#pragma warningdisable:5009
	                M489_complete_done#:
	.macro_ref                     pci_out_pd_request_work($l0000!work_in0[0], l0000!work_sig0)
	                            cls[ring_workq_add_thread, $l0000!work_in0[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                                sig_done[l0000!work_sig0]
.631 00E0AA440008 common_code
	.end_macro_ref                     pci_out_pd_request_work
	#pragma warningdefault:5009
	.macro_ref                     wait_br_next_state(l0000!work_sig1, --, state_e0n1#)
	.macro_ref                         wait_br_next_state(l0000!work_sig1, --, state_e0n1#, --)
	                            .set_sig l0000!work_sig1
	                                    ctx_arb[l0000!work_sig1], br[state_e0n1#]
.632 00B0C0902701 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M489_ticket_error#:
	                    alu[l0000!g_num_ticket_errors, l0000!g_num_ticket_errors, +, 1]
.633 00FC17202700 common_code
	                    local_csr_wr[mailbox0, l0000!g_num_ticket_errors]
.634 00F0003037FF common_code
	.macro_ref                     wsm_extract(l0076!seq, $l0000!work_in0, SB_WQ_SEQ)
	.macro_ref                         wsm_extract(l0076!seq, $l0000!work_in0, SB_WQ_SEQ, 0)
	.macro_ref                             sm_extract(l0076!seq, $l0000!work_in0[0], SB_WQ_SEQ, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_SEQ)
	.end_macro_ref                             __WSM_GET_MASKLEN
	                                    .begin
	                                        .reg l0077!_wsm_mask
	.macro_ref                                         _wsm_loadmask(l0077!_wsm_mask, 0x3FF, 10, 'sm_extract', 0)
	.macro_ref                                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                 _wsm_validate_size
	                                                immed[l0077!_wsm_mask, 0x3FF]
.635 009480C83581 common_code
	.end_macro_ref                                         _wsm_loadmask
	                                        alu_shf[l0076!seq, l0077!_wsm_mask, and, $l0000!work_in0[0], >>8]
.636 00FC17603300 common_code
	                                    .end
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    local_csr_wr[mailbox1, l0076!seq]
.637 00B000EC1F00 common_code
	.macro_ref                     cycle32_sleep(250)
	                    .begin
	                        .reg l0078!tmp_cycle_count l0078!_ixp_future_count_signal_num
	                        .sig l0078!_ixp_future_count_signal_name
	                        .set_sig l0078!_ixp_future_count_signal_name
	                        alu[l0078!_ixp_future_count_signal_num, --, b, 7]
.638 00FC0C0C0000 common_code
	                        local_csr_rd[timestamp_low]
.639 00F0000C000E common_code
	                        immed[l0078!tmp_cycle_count, 0]
.640 00A080EC3C0E common_code
	.macro_ref                             add(l0078!tmp_cycle_count, l0078!tmp_cycle_count, 15)
	.macro_ref                                 alu_op(l0078!tmp_cycle_count, l0078!tmp_cycle_count, +, 15)
	.macro_ref                                             _nfp_alu(l0078!tmp_cycle_count, l0078!tmp_cycle_count, +, 15)
	                                                    alu[l0078!tmp_cycle_count, l0078!tmp_cycle_count, +, 15]
.641 00E000200080 common_code
	.end_macro_ref                                             _nfp_alu
	.end_macro_ref                                 alu_op
	.end_macro_ref                             add
	                        ctx_arb[l0078!_ixp_future_count_signal_name], defer[2]
.642 00FC05EC000E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                        local_csr_wr[active_ctx_future_count, l0078!tmp_cycle_count]
.643 00FC07E03B00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                        local_csr_wr[active_future_count_signal, l0078!_ixp_future_count_signal_num]
.644 104B80003F20 common_code
	                    .end
	.end_macro_ref                     cycle32_sleep
	                    mem[release_ticket, $l0076!ticket, 0, l0076!bitmap_lo, 1], sig_done[l0076!ticket_sig]
.645 00E09C840300 common_code
	                    ctx_arb[l0076!ticket_sig, l0076!ticket_sig+1], br[M489_ticket_ready#]
.646 0095A0F20D7F common_code
	                .end
	.end_macro_ref                 _complete_packet_dma
	.end_macro_ref             complete_packet_dma
	.end_macro_ref         complete_packet_dma
	    transition_e2n2_e1n2#:
	.macro_ref         complete_packet_dma(0, state_e1n2#, l0000!work_sig2, l0000!dma_sig1)
	M524#:
	.macro_ref             _complete_packet_dma($l0000!work_in0, l0000!work_sig0, state_e1n2#, l0000!work_sig2, l0000!dma_sig1)
	            .begin
	                .reg l0079!isl
	                .reg l0079!qnum
	                .reg l0079!addr_hi
	                .reg l0079!addr_lo
	                .reg l0079!ring_num
	                .reg l0079!bitmap_lo
	                .reg l0079!cntr_addr_lo
	                .reg l0079!seq
	                .reg $l0079!ticket
	                .sig l0079!ticket_sig
	M525#:
	.macro_ref                 wsm_extract(l0079!qnum, $l0000!work_in0, SB_WQ_QNUM)
	.macro_ref                     wsm_extract(l0079!qnum, $l0000!work_in0, SB_WQ_QNUM, 0)
	.macro_ref                         sm_extract(l0079!qnum, $l0000!work_in0[4], SB_WQ_QNUM, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_QNUM)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0079!isl, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0079!isl, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0079!isl, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0079!isl, 0x3F, and, $l0000!work_in0[2], >>26]
.647 00D8A3B08120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M524_no_ctm_buffer#], defer[3]
.648 008500B615FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0079!qnum, 0xFF, and, $l0000!work_in0[4], >>16]
.649 009BC0B80E0B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[l0079!bitmap_lo, l0000!g_bitmap_base, or, l0079!qnum, <<4]
.650 008488020502 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[$l0079!ticket, l0000!g_seq_mask, and, $l0000!work_in0[0], >>8]
.651 008A80C03E03 common_code
	                alu_shf[l0079!addr_hi, l0000!g_pkt_free_hi, or, l0079!isl, <<24]
.652 009500F81183 common_code
	                alu_shf[l0079!addr_lo, l0000!g_pkt_num_mask, and, $l0000!work_in0[2], >>16]
.653 005200003F0C common_code
	                mem[packet_free, --, l0079!addr_hi, <<8, l0079!addr_lo]
.654 104B80002F20 common_code
	            M524_no_ctm_buffer#:
	                mem[release_ticket, $l0079!ticket, 0, l0079!bitmap_lo, 1], sig_done[l0079!ticket_sig]
.655 009830F09E84 common_code
	.macro_ref                 wsm_extract(l0079!addr_lo, $l0000!work_in0, SB_WQ_MUBUF)
	.macro_ref                     wsm_extract(l0079!addr_lo, $l0000!work_in0, SB_WQ_MUBUF, 0)
	.macro_ref                         sm_extract(l0079!addr_lo, $l0000!work_in0[3], SB_WQ_MUBUF, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_MUBUF)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0079!addr_lo, $l0000!work_in0[3], and~, 7, <<29]
.656 00E000200300 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                ctx_arb[l0079!ticket_sig, l0079!ticket_sig+1], defer[2]
.657 009BC0C8A20B common_code
	                alu_shf[l0079!cntr_addr_lo, 8, or, l0079!qnum, <<4]
.658 0085D0C21123 common_code
	.macro_ref                 wsm_extract(l0079!ring_num, $l0000!work_in0, SB_WQ_BLS)
	.macro_ref                     wsm_extract(l0079!ring_num, $l0000!work_in0, SB_WQ_BLS, 0)
	.macro_ref                         sm_extract(l0079!ring_num, $l0000!work_in0[3], SB_WQ_BLS, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_BLS)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0079!ring_num, 0x3, and, $l0000!work_in0[3], >>29]
.659 008B0208160C common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu_shf[-- , l0000!g_blm_iref, or, l0079!ring_num, <<16]
.660 025700003F05 common_code
	                mem[fast_journal, --, l0000!g_blm_addr_hi, <<8, l0079!addr_lo], indirect_ref
.661 00C8A64A0020 common_code
	            M524_ticket_ready#:
	                br=byte[$l0079!ticket, 0, 0, M524_complete_done#]
.662 00C8A6CE00FF common_code
	                br=byte[$l0079!ticket, 0, 255, M524_ticket_error#]
.663 008B02020206 common_code
	                alu_shf[--, l0000!g_add_imm_iref, or, $l0079!ticket, <<16]
.664 024702083304 common_code
	                mem[add_imm, --, l0000!g_send_cntrs_addr_hi, <<8, l0079!cntr_addr_lo,1], indirect_ref
.665 007918100300 common_code
	#pragma warningdisable:5009
	            M524_complete_done#:
	.macro_ref                 pci_out_pd_request_work($l0000!work_in0[0], l0000!work_sig0)
	                        cls[ring_workq_add_thread, $l0000!work_in0[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                            sig_done[l0000!work_sig0]
.666 00E0D6050030 common_code
	.end_macro_ref                 pci_out_pd_request_work
	#pragma warningdefault:5009
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig1, state_e1n2#)
	.macro_ref                     wait_br_next_state(l0000!work_sig2, l0000!dma_sig1, state_e1n2#, --)
	                        .set_sig l0000!work_sig2
	                            .set_sig l0000!dma_sig1
	                                ctx_arb[l0000!work_sig2, l0000!dma_sig1], any, br[state_e1n2#]
.667 00B0C0902701 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M524_ticket_error#:
	                alu[l0000!g_num_ticket_errors, l0000!g_num_ticket_errors, +, 1]
.668 00FC17202700 common_code
	                local_csr_wr[mailbox0, l0000!g_num_ticket_errors]
.669 00F000303BFF common_code
	.macro_ref                 wsm_extract(l0079!seq, $l0000!work_in0, SB_WQ_SEQ)
	.macro_ref                     wsm_extract(l0079!seq, $l0000!work_in0, SB_WQ_SEQ, 0)
	.macro_ref                         sm_extract(l0079!seq, $l0000!work_in0[0], SB_WQ_SEQ, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_SEQ)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0080!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0080!_wsm_mask, 0x3FF, 10, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0080!_wsm_mask, 0x3FF]
.670 009480D83981 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0079!seq, l0080!_wsm_mask, and, $l0000!work_in0[0], >>8]
.671 00FC17603700 common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                local_csr_wr[mailbox1, l0079!seq]
.672 00B000FC1F00 common_code
	.macro_ref                 cycle32_sleep(250)
	                .begin
	                    .reg l0081!tmp_cycle_count l0081!_ixp_future_count_signal_num
	                    .sig l0081!_ixp_future_count_signal_name
	                    .set_sig l0081!_ixp_future_count_signal_name
	                    alu[l0081!_ixp_future_count_signal_num, --, b, 7]
.673 00FC0C0C0000 common_code
	                    local_csr_rd[timestamp_low]
.674 00F0000C000A common_code
	                    immed[l0081!tmp_cycle_count, 0]
.675 00A080AC3C0A common_code
	.macro_ref                         add(l0081!tmp_cycle_count, l0081!tmp_cycle_count, 15)
	.macro_ref                             alu_op(l0081!tmp_cycle_count, l0081!tmp_cycle_count, +, 15)
	.macro_ref                                         _nfp_alu(l0081!tmp_cycle_count, l0081!tmp_cycle_count, +, 15)
	                                                alu[l0081!tmp_cycle_count, l0081!tmp_cycle_count, +, 15]
.676 00E000200080 common_code
	.end_macro_ref                                         _nfp_alu
	.end_macro_ref                             alu_op
	.end_macro_ref                         add
	                    ctx_arb[l0081!_ixp_future_count_signal_name], defer[2]
.677 00FC05EC000A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_ctx_future_count, l0081!tmp_cycle_count]
.678 00FC07E03F00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_future_count_signal, l0081!_ixp_future_count_signal_num]
.679 104B80002F20 common_code
	                .end
	.end_macro_ref                 cycle32_sleep
	                mem[release_ticket, $l0079!ticket, 0, l0079!bitmap_lo, 1], sig_done[l0079!ticket_sig]
.680 00E0A5440300 common_code
	                ctx_arb[l0079!ticket_sig, l0079!ticket_sig+1], br[M524_ticket_ready#]
.681 00BAC8A22B01 common_code
	            .end
	.end_macro_ref             _complete_packet_dma
	.end_macro_ref         complete_packet_dma
	    state_e0n1#:
	    transition_e0n1_e1n2#:
	.macro_ref         issue_packet_dma(1, state_e1n2#, l0000!work_sig2, l0000!dma_sig1)
	M559#:
	            .io_completed l0000!work_sig1
	            .io_completed l0000!dma_sig1
	.macro_ref             _issue_packet_dma($l0000!work_in1, $l0000!dma_out1, $l0000!dma_out1x, l0000!dma_sig1, state_e1n2#, l0000!work_sig2, l0000!dma_sig1)
	            .begin
	                .reg l0082!word
	                .reg l0082!tmp
	                .reg l0082!tmp2
	                .reg l0082!isl
	                .reg l0082!ovfl
	                .reg l0082!len
	                .reg l0082!addr_lo
	                .reg l0082!pcie_hi_word
	                .reg l0082!pcie_lo_start
	                .reg l0082!mu_lo_start
	                .reg l0082!ctm_bytes
	                .reg l0082!split_len
	                .io_completed $l0000!work_in1[0]
	                .io_completed $l0000!work_in1[1]
	                .io_completed $l0000!work_in1[2]
	                .io_completed $l0000!work_in1[3]
	                .io_completed $l0000!work_in1[4]
	                .io_completed $l0000!dma_out1[0]
	                .io_completed $l0000!dma_out1[1]
	                .io_completed $l0000!dma_out1[2]
	                .io_completed $l0000!dma_out1[3]
	                .io_completed $l0000!dma_out1x[0]
	                .io_completed $l0000!dma_out1x[1]
	                .io_completed $l0000!dma_out1x[2]
	                .io_completed $l0000!dma_out1x[3]
	                alu[@l0000!ndequeued, @l0000!ndequeued, -, 1]
.682 00D8D3C08129 common_code
	                blt[M560_add_wq_credits#]
.683 00D0D0821820 common_code
	            M560_start_packet_dma#:
	.macro_ref                 wsm_test_bit_clr($l0000!work_in1, SB_WQ_ENABLED, M560_no_dma#)
	M561#:
	.macro_ref                     wsm_test_bit_clr($l0000!work_in1, SB_WQ_ENABLED, M560_no_dma#, --)
	M562#:
	.macro_ref                         sm_test_bit_clr($l0000!work_in1[0], SB_WQ_ENABLED, M560_no_dma#, --)
	M563#:
	                                br_bclr[$l0000!work_in1[0], 31, M560_no_dma#]
.684 00D0AEC2203A common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	.macro_ref                 wsm_test_bit_clr($l0000!work_in1, SB_WQ_CTM_ONLY, M560_not_ctm_only#)
	.macro_ref                     wsm_test_bit_clr($l0000!work_in1, SB_WQ_CTM_ONLY, M560_not_ctm_only#, --)
	.macro_ref                         sm_test_bit_clr($l0000!work_in1[2], SB_WQ_CTM_ONLY, M560_not_ctm_only#, --)
	                                br_bclr[$l0000!work_in1[2], 25, M560_not_ctm_only#]
.685 00B440D62001 common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	            M560_ctm_only#:
	                alu[l0082!word, $l0000!work_in1[2], and, l0000!g_dma_word0_mask]
.686 008A18983621 common_code
	                alu_shf[$l0000!dma_out1[0], l0082!word, or, 1, <<31]
.687 0085A0C2217F common_code
	.macro_ref                 wsm_extract(l0082!word, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0082!word, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0082!word, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0082!word, 0x3F, and, $l0000!work_in1[2], >>26]
.688 00BA00D0040C common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0082!word, l0082!word, or, l0000!g_dma_word1_vals]
.689 008B28A83624 common_code
	                alu_shf[$l0000!dma_out1[1], l0082!word, or, 4, <<14]
.690 00A018B61F00 common_code
	                    alu[$l0000!dma_out1[2], --, b, $l0000!work_in1[1]]
.691 01A4C0C00986 common_code
	                alu[l0082!word, l0000!g_dma_word3_vals, +8, $l0000!work_in1[0]], no_cc
.692 009570B619FF common_code
	.macro_ref                 wsm_extract(l0082!tmp, $l0000!work_in1,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0082!tmp, $l0000!work_in1, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0082!tmp, $l0000!work_in1[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0082!tmp, 0xFF, and, $l0000!work_in1[0], >>23]
.693 008B40C02E0C common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0082!word, PCIE_DMA_RID, l0082!tmp)
	.macro_ref                     sm_set_noclr(l0082!word, PCIE_DMA_RID, l0082!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0082!word, l0082!word, PCIE_DMA_RID, l0082!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[l0082!word, l0082!word, or, l0082!tmp, <<12]
.694 00C00318388A common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0082!len, $l0000!work_in1, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0082!len, $l0000!work_in1, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0082!len, $l0000!work_in1[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                ld_field_w_clr[l0082!len, 0011, $l0000!work_in1[4],0]
.695 040F06901F08 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	#pragma warningdisable:5117
	#pragma warningdisable:4701
	#pragma warningdisable:5009
	                pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.696 00E0D6250030 common_code
	#pragma warningdefault:5117
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig1, state_e1n2#, defer[2])
	                    .set_sig l0000!work_sig2
	                        .set_sig l0000!dma_sig1
	                            ctx_arb[l0000!work_sig2, l0000!dma_sig1], any, br[state_e1n2#], defer[2]
.697 00BAC0E03B01 common_code
	.end_macro_ref                 wait_br_next_state
	                alu[l0082!len, l0082!len, -, 1]
.698 008AC8C03A0C common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out1[3], l0082!word, PCIE_DMA_XLEN, l0082!len, 1)
	                .begin
	.macro_ref                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                     _wsm_validate_size
	                    alu_shf[$l0000!dma_out1[3], l0082!word, or, l0082!len, <<20]
.699 00A000D61F00 common_code
	                .end
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdefault:4701
	#pragma warningdefault:5009
	            M560_not_ctm_only#:
	                    alu[l0082!pcie_lo_start, --, b, $l0000!work_in1[1]]
.700 01B4C0D00986 common_code
	                alu[l0082!pcie_hi_word, l0000!g_dma_word3_vals, +8, $l0000!work_in1[0]], no_cc
.701 0095A0C2217F common_code
	.macro_ref                 wsm_extract(l0082!tmp, $l0000!work_in1,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0082!tmp, $l0000!work_in1, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0082!tmp, $l0000!work_in1[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0082!pcie_hi_word, PCIE_DMA_RID, l0082!tmp)
	.macro_ref                     sm_set_noclr(l0082!pcie_hi_word, PCIE_DMA_RID, l0082!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0082!pcie_hi_word, l0082!pcie_hi_word, PCIE_DMA_RID, l0082!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0082!len, $l0000!work_in1, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0082!len, $l0000!work_in1, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0082!len, $l0000!work_in1[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0082!isl, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0082!isl, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0082!isl, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0082!isl, 0x3F, and, $l0000!work_in1[2], >>26]
.702 00D8C3308120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M560_mu_only_dma#], defer[3]
.703 008570A619FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0082!tmp, 0xFF, and, $l0000!work_in1[0], >>23]
.704 009B40D8360A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu_shf[l0082!pcie_hi_word, l0082!pcie_hi_word, or, l0082!tmp, <<12]
.705 00C00312280E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field_w_clr[l0082!len, 0011, $l0000!work_in1[4],0]
.706 00F000102F00 common_code
	            M560_ctm_and_mu_dma#:
	.macro_ref                 move(l0082!tmp, 256)
	M608#:
	.macro_ref                         immed32(l0082!tmp, 256)
	M609#:
	                                immed[l0082!tmp, 256]
.707 0094E0C22123 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	.macro_ref                 wsm_extract(l0082!tmp2, $l0000!work_in1, SB_WQ_CTM_SPLIT)
	.macro_ref                     wsm_extract(l0082!tmp2, $l0000!work_in1, SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         sm_extract(l0082!tmp2, $l0000!work_in1[2], SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_SPLIT)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0082!tmp2, 0x3, and, $l0000!work_in1[2], >>14]
.708 00AA70003300 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[--, l0082!tmp2, or, 0]
.709 009000B02E00 common_code
	                alu_shf[l0082!split_len, --, b, l0082!tmp, <<indirect]
.710 00F001F033FF common_code
	.macro_ref                 wsm_extract(l0082!tmp, $l0000!work_in1, SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0082!tmp, $l0000!work_in1, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0082!tmp, $l0000!work_in1[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0086!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0086!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0086!_wsm_mask, 0x1FFF]
.711 008400A83088 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0082!tmp, l0086!_wsm_mask, and, $l0000!work_in1[2], >>0]
.712 00BAC0F02C0A common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0082!ctm_bytes, l0082!split_len, -, l0082!tmp]
.713 00D8C300812A common_code
	                ble[M560_mu_only_dma#]
.714 00A440C62001 common_code
	                alu[l0082!word, $l0000!work_in1[2], and, l0000!g_dma_word0_mask]
.715 008A1890860C common_code
	                alu_shf[$l0000!dma_out1[0], l0082!word, or, 1, <<31]
.716 0085A0C2217F common_code
	.macro_ref                 wsm_extract(l0082!word, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0082!word, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0082!word, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0082!word, 0x3F, and, $l0000!work_in1[2], >>26]
.717 00AA00CE000C common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0082!word, l0082!word, or, 0x80]                   ; Direct access
.718 008B88A19A0C common_code
	                alu_shf[$l0000!dma_out1[1], l0082!word, or, 38, <<8]
.719 00A058BC000D common_code
	                alu[$l0000!dma_out1[2], --, b, l0082!pcie_lo_start]
.720 00AAC0A03F01 common_code
	                alu[l0082!tmp, l0082!ctm_bytes, -, 1]
.721 008AC8C8360A common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out1[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp)
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp, 0)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1[3], l0082!pcie_hi_word, or, l0082!tmp, <<20]
.722 040F06901F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdisable:5117
	                pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.723 00AA80E03C0E common_code
	#pragma warningdefault:5117
	                alu[l0082!len, l0082!len, -, l0082!ctm_bytes]
.724 00D8D200812A common_code
	                ble[M560_ctm_only_not_flagged#]
.725 008150C22600 common_code
	                alu_shf[l0082!mu_lo_start, --, b, $l0000!work_in1[3], <<11]
.726 00A080C02C0C common_code
	                alu[l0082!mu_lo_start, l0082!mu_lo_start, +, l0082!split_len]
.727 00A058DC000C common_code
	.macro_ref                 move($l0000!dma_out1x[0], l0082!mu_lo_start)
	                        alu[$l0000!dma_out1x[0], --, b, l0082!mu_lo_start]
.728 00B000E00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out1x, $l0000!work_in1, l0000!dma_sig1)
	                .begin
	                    .reg l0088!word
	                        alu[l0088!word, --, b, l0000!g_dma_word1_vals]
.729 00A080D03C0D common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	                alu[l0082!pcie_lo_start, l0082!pcie_lo_start, +, l0082!ctm_bytes]
.730 00B8C0D03700 common_code
	                alu[l0082!pcie_hi_word, l0082!pcie_hi_word, +carry, 0]
.731 00AAB000200E common_code
	.macro_ref                 move($l0000!dma_out1x[2], l0082!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0082!len,-,l0000!g_dma_max]
.732 00D8B930812B common_code
	                bgt[l031_01#], defer[3]
.733 00C151083989 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        ld_field[l0088!word, 0001, $l0000!work_in1[3], >>21]
.734 008B28E83A24 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        alu_shf[$l0000!dma_out1x[1], l0088!word, or, 4, <<14]
.735 00A058FC000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out1x[2], --, b, l0082!pcie_lo_start]
.736 00AA80AC040E common_code
	                    alu[l0082!tmp, l0082!len, -, 1]
.737 008ACC08360A common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1x[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1x[3], l0082!pcie_hi_word, or, l0082!tmp, <<20]
.738 040F06D01F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out1x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.739 00D8C2C08038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l031_end#]
.740 00C00312280A common_code
	                l031_01#: 
	.macro_ref                     wsm_extract(l0082!tmp, $l0000!work_in1, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0082!tmp, $l0000!work_in1, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0082!tmp, $l0000!work_in1[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    ld_field_w_clr[l0082!tmp, 0011, $l0000!work_in1[4],0]
.741 00F002803B00 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    .if (tmp > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0090!__immed_big_const
	                    immed[l0090!__immed_big_const,10240]
.742 00AAB000380A common_code
	                    alu[--,l0082!tmp,-,l0090!__immed_big_const]
.743 00D8BBC0812A common_code
	                    ble[l032_01#]
.744 00F000802F06 common_code
	                    .endlocal
	                        .while (1)
	                        l033_start#: 
	.macro_ref                             move(l0082!tmp, 0x806)
	.macro_ref                                     immed32(l0082!tmp, 0x806)
	                                            immed[l0082!tmp, 2054]
.745 00FC17202F00 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0082!tmp]
.746 00FC176C0188 common_code
	                            local_csr_wr[mailbox1, $l0000!work_in1[2]]
.747 00FC17AC0189 common_code
	                            local_csr_wr[mailbox2, $l0000!work_in1[3]]
.748 00FC17EC018A common_code
	                            local_csr_wr[mailbox3, $l0000!work_in1[4]]
.749 00E000020000 common_code
	                            ctx_arb[bpt]
.750 00D8BA008038 common_code
	                        .endw
	                        l033_cont#: 
	                        br[l033_start#]
.751 00AAC0A02301 common_code
	                        .unreachable
	                    .endif
	                    l032_01#: 
	                    l032_end#: 
	                    alu[l0082!tmp, l0000!g_dma_max, -, 1]
.752 008ACC08360A common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1x[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1x[3], l0082!pcie_hi_word, or, l0082!tmp, <<20]
.753 040F06D01F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out1x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.754 00AA80E0200E common_code
	#pragma warningdefault:5117
	                    alu[l0082!len, l0082!len, -, l0000!g_dma_max]
.755 00A080C0200C common_code
	                    alu[l0082!mu_lo_start, l0082!mu_lo_start, +, l0000!g_dma_max]
.756 00A080D0200D common_code
	                    alu[l0082!pcie_lo_start, l0082!pcie_lo_start, +, l0000!g_dma_max]
.757 00B8C0D03700 common_code
	                    alu[l0082!pcie_hi_word, l0082!pcie_hi_word, +carry, 0]
.758 00E000000010 common_code
	                    .repeat
	                    l034_start#: 
	                        ctx_arb[l0000!dma_sig1]
.759 00A0589C000C common_code
	                        .io_completed $l0000!dma_out1[0]
	                        .io_completed $l0000!dma_out1[1]
	                        .io_completed $l0000!dma_out1[2]
	                        .io_completed $l0000!dma_out1[3]
	                        .io_completed $l0000!dma_out1x[0]
	                        .io_completed $l0000!dma_out1x[1]
	                        .io_completed $l0000!dma_out1x[2]
	                        .io_completed $l0000!dma_out1x[3]
	                        alu[$l0000!dma_out1[0], --, b, l0082!mu_lo_start]
.760 00B000C00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out1, $l0000!work_in1, l0000!dma_sig1)
	                        .begin
	                            .reg l0092!word
	                                alu[l0092!word, --, b, l0000!g_dma_word1_vals]
.761 00AAB000200E common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0082!len,-,l0000!g_dma_max]
.762 00D8C0B0812B common_code
	                        bgt[l035_01#], defer[3]
.763 00C151083189 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0092!word, 0001, $l0000!work_in1[3], >>21]
.764 008B28A83224 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out1[1], l0092!word, or, 4, <<14]
.765 00A058BC000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out1[2], --, b, l0082!pcie_lo_start]
.766 00AA80AC040E common_code
	                            alu[l0082!tmp, l0082!len, -, 1]
.767 00D8C2208038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out1[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0082!len, 0)
	.macro_ref                                     immed32(l0082!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l035_end#], defer[2]
.768 008AC8C8360A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out1[3], l0082!pcie_hi_word, or, l0082!tmp, <<20]
.769 00F0000C000E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0082!len, 0]
.770 00AAC0A02301 common_code
	                        l035_01#: 
	                            alu[l0082!tmp, l0000!g_dma_max, -, 1]
.771 008AC8C8360A common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out1[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out1[3], l0082!pcie_hi_word, or, l0082!tmp, <<20]
.772 00AA80E0200E common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0082!len, l0082!len, -, l0000!g_dma_max]
.773 00A080C0200C common_code
	                            alu[l0082!mu_lo_start, l0082!mu_lo_start, +, l0000!g_dma_max]
.774 00A080D0200D common_code
	                            alu[l0082!pcie_lo_start, l0082!pcie_lo_start, +, l0000!g_dma_max]
.775 00B8C0D03700 common_code
	                            alu[l0082!pcie_hi_word, l0082!pcie_hi_word, +carry, 0]
.776 040F06901F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l035_end#: 
	                        pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.777 00A0700C000E common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l034_cont#: 
	                    alu[--,--,b,l0082!len]
.778 00D8BD808121 common_code
	                    bne[l034_start#]
.779 00E0D6050030 common_code
	                .endif
	                l031_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig1, state_e1n2#)
	.macro_ref                     wait_br_next_state(l0000!work_sig2, l0000!dma_sig1, state_e1n2#, --)
	                        .set_sig l0000!work_sig2
	                            .set_sig l0000!dma_sig1
	                                ctx_arb[l0000!work_sig2, l0000!dma_sig1], any, br[state_e1n2#]
.780 009150E22600 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M560_mu_only_dma#:
	                alu_shf[l0082!mu_lo_start, --, b, $l0000!work_in1[3], <<11]
.781 00F001F03FFF common_code
	.macro_ref                 wsm_extract(l0082!tmp, $l0000!work_in1,  SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0082!tmp, $l0000!work_in1, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0082!tmp, $l0000!work_in1[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0095!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0095!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0095!_wsm_mask, 0x1FFF]
.782 008400A83C88 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0082!tmp, l0095!_wsm_mask, and, $l0000!work_in1[2], >>0]
.783 00A0C0C0380A common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0082!mu_lo_start, l0082!mu_lo_start, +, l0082!tmp]
.784 00A0589C000C common_code
	.macro_ref                 move($l0000!dma_out1[0], l0082!mu_lo_start)
	                        alu[$l0000!dma_out1[0], --, b, l0082!mu_lo_start]
.785 00B000E00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out1, $l0000!work_in1, l0000!dma_sig1)
	                .begin
	                    .reg l0096!word
	                        alu[l0096!word, --, b, l0000!g_dma_word1_vals]
.786 00AAB000200E common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	.macro_ref                 move($l0000!dma_out1[2], l0082!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0082!len,-,l0000!g_dma_max]
.787 00D8C6F0812B common_code
	                bgt[l036_01#], defer[3]
.788 00C151083989 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        ld_field[l0096!word, 0001, $l0000!work_in1[3], >>21]
.789 008B28A83A24 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu_shf[$l0000!dma_out1[1], l0096!word, or, 4, <<14]
.790 00A058BC000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out1[2], --, b, l0082!pcie_lo_start]
.791 00AA80AC040E common_code
	                    alu[l0082!tmp, l0082!len, -, 1]
.792 008AC8C8360A common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1[3], l0082!pcie_hi_word, or, l0082!tmp, <<20]
.793 040F06901F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.794 00D8D0408038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l036_end#]
.795 00F002803F00 common_code
	                    .if (len > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0098!__immed_big_const
	                l036_01#: 
	                    immed[l0098!__immed_big_const,10240]
.796 00AAB0003C0E common_code
	                    alu[--,l0082!len,-,l0098!__immed_big_const]
.797 00D8C940812A common_code
	                    ble[l037_01#]
.798 00F000802F06 common_code
	                    .endlocal
	                        .while (1)
	                        l038_start#: 
	.macro_ref                             move(l0082!tmp, 0x806)
	.macro_ref                                     immed32(l0082!tmp, 0x806)
	                                            immed[l0082!tmp, 2054]
.799 00FC17202F00 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0082!tmp]
.800 00FC176C0188 common_code
	                            local_csr_wr[mailbox1, $l0000!work_in1[2]]
.801 00FC17AC0189 common_code
	                            local_csr_wr[mailbox2, $l0000!work_in1[3]]
.802 00FC17EC018A common_code
	                            local_csr_wr[mailbox3, $l0000!work_in1[4]]
.803 00E000020000 common_code
	                            ctx_arb[bpt]
.804 00D8C7808038 common_code
	                        .endw
	                        l038_cont#: 
	                        br[l038_start#]
.805 00AAC0A02301 common_code
	                        .unreachable
	                    .endif
	                    l037_01#: 
	                    l037_end#: 
	                    alu[l0082!tmp, l0000!g_dma_max, -, 1]
.806 008AC8C8360A common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1[3], l0082!pcie_hi_word, or, l0082!tmp, <<20]
.807 040F06901F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.808 00AA80E0200E common_code
	#pragma warningdefault:5117
	                    alu[l0082!len, l0082!len, -, l0000!g_dma_max]
.809 00A080C0200C common_code
	                    alu[l0082!mu_lo_start, l0082!mu_lo_start, +, l0000!g_dma_max]
.810 00A080D0200D common_code
	                    alu[l0082!pcie_lo_start, l0082!pcie_lo_start, +, l0000!g_dma_max]
.811 00B8C0D03700 common_code
	                    alu[l0082!pcie_hi_word, l0082!pcie_hi_word, +carry, 0]
.812 00E000000010 common_code
	                    .repeat
	                    l039_start#: 
	                        ctx_arb[l0000!dma_sig1]
.813 00A0589C000C common_code
	                        .io_completed $l0000!dma_out1[0]
	                        .io_completed $l0000!dma_out1[1]
	                        .io_completed $l0000!dma_out1[2]
	                        .io_completed $l0000!dma_out1[3]
	                        .io_completed $l0000!dma_out1x[0]
	                        .io_completed $l0000!dma_out1x[1]
	                        .io_completed $l0000!dma_out1x[2]
	                        .io_completed $l0000!dma_out1x[3]
	                        alu[$l0000!dma_out1[0], --, b, l0082!mu_lo_start]
.814 00B000B00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out1, $l0000!work_in1, l0000!dma_sig1)
	                        .begin
	                            .reg l0100!word
	                                alu[l0100!word, --, b, l0000!g_dma_word1_vals]
.815 00AAB000200E common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0082!len,-,l0000!g_dma_max]
.816 00D8CE30812B common_code
	                        bgt[l040_01#], defer[3]
.817 00C151082D89 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0100!word, 0001, $l0000!work_in1[3], >>21]
.818 008B28A82E24 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out1[1], l0100!word, or, 4, <<14]
.819 00A058BC000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out1[2], --, b, l0082!pcie_lo_start]
.820 00AA80AC040E common_code
	                            alu[l0082!tmp, l0082!len, -, 1]
.821 00D8CFA08038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out1[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0082!len, 0)
	.macro_ref                                     immed32(l0082!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l040_end#], defer[2]
.822 008AC8C8360A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out1[3], l0082!pcie_hi_word, or, l0082!tmp, <<20]
.823 00F0000C000E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0082!len, 0]
.824 00AAC0A02301 common_code
	                        l040_01#: 
	                            alu[l0082!tmp, l0000!g_dma_max, -, 1]
.825 008AC8C8360A common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out1[3], l0082!pcie_hi_word, PCIE_DMA_XLEN, l0082!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out1[3], l0082!pcie_hi_word, or, l0082!tmp, <<20]
.826 00AA80E0200E common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0082!len, l0082!len, -, l0000!g_dma_max]
.827 00A080C0200C common_code
	                            alu[l0082!mu_lo_start, l0082!mu_lo_start, +, l0000!g_dma_max]
.828 00A080D0200D common_code
	                            alu[l0082!pcie_lo_start, l0082!pcie_lo_start, +, l0000!g_dma_max]
.829 00B8C0D03700 common_code
	                            alu[l0082!pcie_hi_word, l0082!pcie_hi_word, +carry, 0]
.830 040F06901F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l040_end#: 
	                        pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.831 00A0700C000E common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l039_cont#: 
	                    alu[--,--,b,l0082!len]
.832 00D8CB008121 common_code
	                    bne[l039_start#]
.833 00E0D6050030 common_code
	                .endif
	                l036_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig1, state_e1n2#)
	.macro_ref                     wait_br_next_state(l0000!work_sig2, l0000!dma_sig1, state_e1n2#, --)
	                        .set_sig l0000!work_sig2
	                            .set_sig l0000!dma_sig1
	                                ctx_arb[l0000!work_sig2, l0000!dma_sig1], any, br[state_e1n2#]
.834 00FC044C0000 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M560_no_dma#:
	                local_csr_rd[active_ctx_sts]
.835 00F000002F00 common_code
	                immed[l0082!tmp, 0]
.836 00B440B02F07 common_code
	                alu[l0082!tmp, l0082!tmp, and, 7]
.837 00E0D6250030 common_code
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig1, state_e1n2#)
	.macro_ref                     wait_br_next_state(l0000!work_sig2, l0000!dma_sig1, state_e1n2#, --)
	                        .set_sig l0000!work_sig2
	                            .set_sig l0000!dma_sig1
	                                ctx_arb[l0000!work_sig2, l0000!dma_sig1], defer[2], any, br[state_e1n2#]
.838 009BD0B82E24 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                alu_shf[l0082!tmp, l0082!tmp, or, 4, <<3]
.839 00FC10A02F00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                local_csr_wr[same_me_signal, l0082!tmp]
.840 00F000802F07 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M560_ctm_only_not_flagged#:
	.macro_ref                 move(l0082!tmp, 0x807)
	M678#:
	.macro_ref                         immed32(l0082!tmp, 0x807)
	M679#:
	                                immed[l0082!tmp, 2055]
.841 00FC17202F00 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                local_csr_wr[mailbox0, l0082!tmp]
.842 00FC176C0188 common_code
	                local_csr_wr[mailbox1, $l0000!work_in1[2]]
.843 00FC17AC0189 common_code
	                local_csr_wr[mailbox2, $l0000!work_in1[3]]
.844 00FC17EC018A common_code
	                local_csr_wr[mailbox3, $l0000!work_in1[4]]
.845 00E000020000 common_code
	                ctx_arb[bpt]
.846 00D8D2008038 common_code
	                br[M560_ctm_only_not_flagged#]
.847 00F000003F00 common_code
	            M560_add_wq_credits#:
	.macro_ref                 move(l0082!addr_lo, nfd_out_sb_wq_credits0)
	M680#:
	.macro_ref                         immed32(l0082!addr_lo, nfd_out_sb_wq_credits0)
	M681#:
	                                    immed[l0082!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.848 00F440003F00 common_code
	                                    immed_w1[l0082!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.849 008B02028206 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                alu_shf[--, l0000!g_add_imm_iref, or, 64, <<16]
.850 124702083F20 common_code
	                mem[add_imm, --, 0, l0082!addr_lo,1], indirect_ref
.851 00F001803F34 common_code
	.macro_ref                 signal_sb_credits_update()
	                .begin
	                    .reg l0103!addr
	.macro_ref                     move(l0103!addr, 603985972)
	.macro_ref                             immed32(l0103!addr, 603985972)
	                                        immed[l0103!addr, 6196]
.852 00F442403F00 common_code
	                                        immed_w1[l0103!addr, 9216]
.853 101C00083F20 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    ct[interthread_signal, --, 0, l0103!addr,1]
.854 00D8AAD08038 common_code
	                .end
	.end_macro_ref                 signal_sb_credits_update
	                br[M560_start_packet_dma#], defer[1]
.855 00F000022B3F common_code
	.macro_ref                 move(@l0000!ndequeued, (64 - 1))
	.macro_ref                         immed32(@l0000!ndequeued, (64 - 1))
	                                immed[@l0000!ndequeued, 63]
.856 00D937410232 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	            .end
	.end_macro_ref             _issue_packet_dma
	.end_macro_ref         issue_packet_dma
	    state_e1n2#:
	        br_signal[l0000!dma_sig1, transition_e1n2_e0n2#]
.857 00D9E7414233 common_code
	        br_!signal[l0000!work_sig2, unreached#]
.858 00BAC8A22B01 common_code
	    transition_e1n2_e2n0#:
	.macro_ref         issue_packet_dma(2, state_e2n0#, l0000!work_sig0, l0000!dma_sig1)
	M687#:
	            .io_completed l0000!work_sig2
	            .io_completed l0000!dma_sig2
	.macro_ref             _issue_packet_dma($l0000!work_in2, $l0000!dma_out2, $l0000!dma_out2x, l0000!dma_sig2, state_e2n0#, l0000!work_sig0, l0000!dma_sig1)
	            .begin
	                .reg l0104!word
	                .reg l0104!tmp
	                .reg l0104!tmp2
	                .reg l0104!isl
	                .reg l0104!ovfl
	                .reg l0104!len
	                .reg l0104!addr_lo
	                .reg l0104!pcie_hi_word
	                .reg l0104!pcie_lo_start
	                .reg l0104!mu_lo_start
	                .reg l0104!ctm_bytes
	                .reg l0104!split_len
	                .io_completed $l0000!work_in2[0]
	                .io_completed $l0000!work_in2[1]
	                .io_completed $l0000!work_in2[2]
	                .io_completed $l0000!work_in2[3]
	                .io_completed $l0000!work_in2[4]
	                .io_completed $l0000!dma_out2[0]
	                .io_completed $l0000!dma_out2[1]
	                .io_completed $l0000!dma_out2[2]
	                .io_completed $l0000!dma_out2[3]
	                .io_completed $l0000!dma_out2x[0]
	                .io_completed $l0000!dma_out2x[1]
	                .io_completed $l0000!dma_out2x[2]
	                .io_completed $l0000!dma_out2x[3]
	                alu[@l0000!ndequeued, @l0000!ndequeued, -, 1]
.859 00D900008129 common_code
	                blt[M688_add_wq_credits#]
.860 00D0FCC22C20 common_code
	            M688_start_packet_dma#:
	.macro_ref                 wsm_test_bit_clr($l0000!work_in2, SB_WQ_ENABLED, M688_no_dma#)
	M689#:
	.macro_ref                     wsm_test_bit_clr($l0000!work_in2, SB_WQ_ENABLED, M688_no_dma#, --)
	M690#:
	.macro_ref                         sm_test_bit_clr($l0000!work_in2[0], SB_WQ_ENABLED, M688_no_dma#, --)
	M691#:
	                                br_bclr[$l0000!work_in2[0], 31, M688_no_dma#]
.861 00D0DB02343A common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	.macro_ref                 wsm_test_bit_clr($l0000!work_in2, SB_WQ_CTM_ONLY, M688_not_ctm_only#)
	.macro_ref                     wsm_test_bit_clr($l0000!work_in2, SB_WQ_CTM_ONLY, M688_not_ctm_only#, --)
	.macro_ref                         sm_test_bit_clr($l0000!work_in2[2], SB_WQ_CTM_ONLY, M688_not_ctm_only#, --)
	                                br_bclr[$l0000!work_in2[2], 25, M688_not_ctm_only#]
.862 00B440C63401 common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	            M688_ctm_only#:
	                alu[l0104!word, $l0000!work_in2[2], and, l0000!g_dma_word0_mask]
.863 008A1C183221 common_code
	                alu_shf[$l0000!dma_out2[0], l0104!word, or, 1, <<31]
.864 0085A0E2357F common_code
	.macro_ref                 wsm_extract(l0104!word, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0104!word, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0104!word, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0104!word, 0x3F, and, $l0000!work_in2[2], >>26]
.865 00BA00C0040E common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0104!word, l0104!word, or, l0000!g_dma_word1_vals]
.866 008B2C283226 common_code
	                alu_shf[$l0000!dma_out2[1], l0104!word, or, 6, <<14]
.867 00A01C363300 common_code
	                    alu[$l0000!dma_out2[2], --, b, $l0000!work_in2[1]]
.868 01A4C0E0098B common_code
	                alu[l0104!word, l0000!g_dma_word3_vals, +8, $l0000!work_in2[0]], no_cc
.869 009570D62DFF common_code
	.macro_ref                 wsm_extract(l0104!tmp, $l0000!work_in2,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0104!tmp, $l0000!work_in2, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0104!tmp, $l0000!work_in2[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0104!tmp, 0xFF, and, $l0000!work_in2[0], >>23]
.870 008B40E0360E common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0104!word, PCIE_DMA_RID, l0104!tmp)
	.macro_ref                     sm_set_noclr(l0104!word, PCIE_DMA_RID, l0104!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0104!word, l0104!word, PCIE_DMA_RID, l0104!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[l0104!word, l0104!word, or, l0104!tmp, <<12]
.871 00C00318388F common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0104!len, $l0000!work_in2, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0104!len, $l0000!work_in2, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0104!len, $l0000!work_in2[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                ld_field_w_clr[l0104!len, 0011, $l0000!work_in2[4],0]
.872 040F07101F08 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	#pragma warningdisable:5117
	#pragma warningdisable:4701
	#pragma warningdisable:5009
	                pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.873 00E102650012 common_code
	#pragma warningdefault:5117
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig1, state_e2n0#, defer[2])
	                    .set_sig l0000!work_sig0
	                        .set_sig l0000!dma_sig1
	                            ctx_arb[l0000!work_sig0, l0000!dma_sig1], any, br[state_e2n0#], defer[2]
.874 00BAC0E03B01 common_code
	.end_macro_ref                 wait_br_next_state
	                alu[l0104!len, l0104!len, -, 1]
.875 008ACC403A0E common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out2[3], l0104!word, PCIE_DMA_XLEN, l0104!len, 1)
	                .begin
	.macro_ref                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                     _wsm_validate_size
	                    alu_shf[$l0000!dma_out2[3], l0104!word, or, l0104!len, <<20]
.876 00A000963300 common_code
	                .end
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdefault:4701
	#pragma warningdefault:5009
	            M688_not_ctm_only#:
	                    alu[l0104!pcie_lo_start, --, b, $l0000!work_in2[1]]
.877 01B4C0C0098B common_code
	                alu[l0104!pcie_hi_word, l0000!g_dma_word3_vals, +8, $l0000!work_in2[0]], no_cc
.878 0095A0E2357F common_code
	.macro_ref                 wsm_extract(l0104!tmp, $l0000!work_in2,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0104!tmp, $l0000!work_in2, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0104!tmp, $l0000!work_in2[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0104!pcie_hi_word, PCIE_DMA_RID, l0104!tmp)
	.macro_ref                     sm_set_noclr(l0104!pcie_hi_word, PCIE_DMA_RID, l0104!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0104!pcie_hi_word, l0104!pcie_hi_word, PCIE_DMA_RID, l0104!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0104!len, $l0000!work_in2, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0104!len, $l0000!work_in2, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0104!len, $l0000!work_in2[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0104!isl, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0104!isl, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0104!isl, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0104!isl, 0x3F, and, $l0000!work_in2[2], >>26]
.879 00D8EF708120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M688_mu_only_dma#], defer[3]
.880 008570B62DFF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0104!tmp, 0xFF, and, $l0000!work_in2[0], >>23]
.881 009B40C8320B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu_shf[l0104!pcie_hi_word, l0104!pcie_hi_word, or, l0104!tmp, <<12]
.882 00C003123C0F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field_w_clr[l0104!len, 0011, $l0000!work_in2[4],0]
.883 00F000103700 common_code
	            M688_ctm_and_mu_dma#:
	.macro_ref                 move(l0104!tmp, 256)
	M736#:
	.macro_ref                         immed32(l0104!tmp, 256)
	M737#:
	                                immed[l0104!tmp, 256]
.884 0094E0B23523 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	.macro_ref                 wsm_extract(l0104!tmp2, $l0000!work_in2, SB_WQ_CTM_SPLIT)
	.macro_ref                     wsm_extract(l0104!tmp2, $l0000!work_in2, SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         sm_extract(l0104!tmp2, $l0000!work_in2[2], SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_SPLIT)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0104!tmp2, 0x3, and, $l0000!work_in2[2], >>14]
.885 00AA70002F00 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[--, l0104!tmp2, or, 0]
.886 009000F03600 common_code
	                alu_shf[l0104!split_len, --, b, l0104!tmp, <<indirect]
.887 00F001F02FFF common_code
	.macro_ref                 wsm_extract(l0104!tmp, $l0000!work_in2, SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0104!tmp, $l0000!work_in2, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0104!tmp, $l0000!work_in2[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0108!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0108!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0108!_wsm_mask, 0x1FFF]
.888 008400B82C8D common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0104!tmp, l0108!_wsm_mask, and, $l0000!work_in2[2], >>0]
.889 00BAC0E03C0B common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0104!ctm_bytes, l0104!split_len, -, l0104!tmp]
.890 00D8EF40812A common_code
	                ble[M688_mu_only_dma#]
.891 00A440E63401 common_code
	                alu[l0104!word, $l0000!work_in2[2], and, l0000!g_dma_word0_mask]
.892 008A1C10860E common_code
	                alu_shf[$l0000!dma_out2[0], l0104!word, or, 1, <<31]
.893 0085A0E2357F common_code
	.macro_ref                 wsm_extract(l0104!word, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0104!word, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0104!word, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0104!word, 0x3F, and, $l0000!work_in2[2], >>26]
.894 00AA00EE000E common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0104!word, l0104!word, or, 0x80]                   ; Direct access
.895 008B8C219A0E common_code
	                alu_shf[$l0000!dma_out2[1], l0104!word, or, 38, <<8]
.896 00A05C3C0009 common_code
	                alu[$l0000!dma_out2[2], --, b, l0104!pcie_lo_start]
.897 00AAC0B03B01 common_code
	                alu[l0104!tmp, l0104!ctm_bytes, -, 1]
.898 008ACC48320B common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out2[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp)
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp, 0)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2[3], l0104!pcie_hi_word, or, l0104!tmp, <<20]
.899 040F07101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdisable:5117
	                pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.900 00AA80F0380F common_code
	#pragma warningdefault:5117
	                alu[l0104!len, l0104!len, -, l0104!ctm_bytes]
.901 00D8FE40812A common_code
	                ble[M688_ctm_only_not_flagged#]
.902 008150D23A00 common_code
	                alu_shf[l0104!mu_lo_start, --, b, $l0000!work_in2[3], <<11]
.903 00A080D03C0D common_code
	                alu[l0104!mu_lo_start, l0104!mu_lo_start, +, l0104!split_len]
.904 00A05C5C000D common_code
	.macro_ref                 move($l0000!dma_out2x[0], l0104!mu_lo_start)
	                        alu[$l0000!dma_out2x[0], --, b, l0104!mu_lo_start]
.905 00B000D00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out2x, $l0000!work_in2, l0000!dma_sig2)
	                .begin
	                    .reg l0110!word
	                        alu[l0110!word, --, b, l0000!g_dma_word1_vals]
.906 00A080903809 common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	                alu[l0104!pcie_lo_start, l0104!pcie_lo_start, +, l0104!ctm_bytes]
.907 00B8C0C03300 common_code
	                alu[l0104!pcie_hi_word, l0104!pcie_hi_word, +carry, 0]
.908 00AAB000200F common_code
	.macro_ref                 move($l0000!dma_out2x[2], l0104!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0104!len,-,l0000!g_dma_max]
.909 00D8E570812B common_code
	                bgt[l041_01#], defer[3]
.910 00C15108358E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        ld_field[l0110!word, 0001, $l0000!work_in2[3], >>21]
.911 008B2C683626 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        alu_shf[$l0000!dma_out2x[1], l0110!word, or, 6, <<14]
.912 00A05C7C0009 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out2x[2], --, b, l0104!pcie_lo_start]
.913 00AA80BC040F common_code
	                    alu[l0104!tmp, l0104!len, -, 1]
.914 008ACC88320B common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2x[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2x[3], l0104!pcie_hi_word, or, l0104!tmp, <<20]
.915 040F07501F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out2x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.916 00D8EF008038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l041_end#]
.917 00C003123C0B common_code
	                l041_01#: 
	.macro_ref                     wsm_extract(l0104!tmp, $l0000!work_in2, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0104!tmp, $l0000!work_in2, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0104!tmp, $l0000!work_in2[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    ld_field_w_clr[l0104!tmp, 0011, $l0000!work_in2[4],0]
.918 00F002803F00 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    .if (tmp > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0112!__immed_big_const
	                    immed[l0112!__immed_big_const,10240]
.919 00AAB0003C0B common_code
	                    alu[--,l0104!tmp,-,l0112!__immed_big_const]
.920 00D8E800812A common_code
	                    ble[l042_01#]
.921 00F000803706 common_code
	                    .endlocal
	                        .while (1)
	                        l043_start#: 
	.macro_ref                             move(l0104!tmp, 0x806)
	.macro_ref                                     immed32(l0104!tmp, 0x806)
	                                            immed[l0104!tmp, 2054]
.922 00FC17203700 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0104!tmp]
.923 00FC176C018D common_code
	                            local_csr_wr[mailbox1, $l0000!work_in2[2]]
.924 00FC17AC018E common_code
	                            local_csr_wr[mailbox2, $l0000!work_in2[3]]
.925 00FC17EC018F common_code
	                            local_csr_wr[mailbox3, $l0000!work_in2[4]]
.926 00E000020000 common_code
	                            ctx_arb[bpt]
.927 00D8E6408038 common_code
	                        .endw
	                        l043_cont#: 
	                        br[l043_start#]
.928 00AAC0B02301 common_code
	                        .unreachable
	                    .endif
	                    l042_01#: 
	                    l042_end#: 
	                    alu[l0104!tmp, l0000!g_dma_max, -, 1]
.929 008ACC88320B common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2x[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2x[3], l0104!pcie_hi_word, or, l0104!tmp, <<20]
.930 040F07501F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out2x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.931 00AA80F0200F common_code
	#pragma warningdefault:5117
	                    alu[l0104!len, l0104!len, -, l0000!g_dma_max]
.932 00A080D0200D common_code
	                    alu[l0104!mu_lo_start, l0104!mu_lo_start, +, l0000!g_dma_max]
.933 00A080902009 common_code
	                    alu[l0104!pcie_lo_start, l0104!pcie_lo_start, +, l0000!g_dma_max]
.934 00B8C0C03300 common_code
	                    alu[l0104!pcie_hi_word, l0104!pcie_hi_word, +carry, 0]
.935 00E000000040 common_code
	                    .repeat
	                    l044_start#: 
	                        ctx_arb[l0000!dma_sig2]
.936 00A05C1C000D common_code
	                        .io_completed $l0000!dma_out2[0]
	                        .io_completed $l0000!dma_out2[1]
	                        .io_completed $l0000!dma_out2[2]
	                        .io_completed $l0000!dma_out2[3]
	                        .io_completed $l0000!dma_out2x[0]
	                        .io_completed $l0000!dma_out2x[1]
	                        .io_completed $l0000!dma_out2x[2]
	                        .io_completed $l0000!dma_out2x[3]
	                        alu[$l0000!dma_out2[0], --, b, l0104!mu_lo_start]
.937 00B000B00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out2, $l0000!work_in2, l0000!dma_sig2)
	                        .begin
	                            .reg l0114!word
	                                alu[l0114!word, --, b, l0000!g_dma_word1_vals]
.938 00AAB000200F common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0104!len,-,l0000!g_dma_max]
.939 00D8ECF0812B common_code
	                        bgt[l045_01#], defer[3]
.940 00C151082D8E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0114!word, 0001, $l0000!work_in2[3], >>21]
.941 008B2C282E26 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out2[1], l0114!word, or, 6, <<14]
.942 00A05C3C0009 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out2[2], --, b, l0104!pcie_lo_start]
.943 00AA80BC040F common_code
	                            alu[l0104!tmp, l0104!len, -, 1]
.944 00D8EE608038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out2[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0104!len, 0)
	.macro_ref                                     immed32(l0104!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l045_end#], defer[2]
.945 008ACC48320B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out2[3], l0104!pcie_hi_word, or, l0104!tmp, <<20]
.946 00F0000C000F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0104!len, 0]
.947 00AAC0B02301 common_code
	                        l045_01#: 
	                            alu[l0104!tmp, l0000!g_dma_max, -, 1]
.948 008ACC48320B common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out2[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out2[3], l0104!pcie_hi_word, or, l0104!tmp, <<20]
.949 00AA80F0200F common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0104!len, l0104!len, -, l0000!g_dma_max]
.950 00A080D0200D common_code
	                            alu[l0104!mu_lo_start, l0104!mu_lo_start, +, l0000!g_dma_max]
.951 00A080902009 common_code
	                            alu[l0104!pcie_lo_start, l0104!pcie_lo_start, +, l0000!g_dma_max]
.952 00B8C0C03300 common_code
	                            alu[l0104!pcie_hi_word, l0104!pcie_hi_word, +carry, 0]
.953 040F07101F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l045_end#: 
	                        pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.954 00A0700C000F common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l044_cont#: 
	                    alu[--,--,b,l0104!len]
.955 00D8E9C08121 common_code
	                    bne[l044_start#]
.956 00E102450012 common_code
	                .endif
	                l041_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig1, state_e2n0#)
	.macro_ref                     wait_br_next_state(l0000!work_sig0, l0000!dma_sig1, state_e2n0#, --)
	                        .set_sig l0000!work_sig0
	                            .set_sig l0000!dma_sig1
	                                ctx_arb[l0000!work_sig0, l0000!dma_sig1], any, br[state_e2n0#]
.957 009150D23A00 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M688_mu_only_dma#:
	                alu_shf[l0104!mu_lo_start, --, b, $l0000!work_in2[3], <<11]
.958 00F001F03BFF common_code
	.macro_ref                 wsm_extract(l0104!tmp, $l0000!work_in2,  SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0104!tmp, $l0000!work_in2, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0104!tmp, $l0000!work_in2[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0117!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0117!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0117!_wsm_mask, 0x1FFF]
.959 008400B8388D common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0104!tmp, l0117!_wsm_mask, and, $l0000!work_in2[2], >>0]
.960 00A0C0D0340B common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0104!mu_lo_start, l0104!mu_lo_start, +, l0104!tmp]
.961 00A05C1C000D common_code
	.macro_ref                 move($l0000!dma_out2[0], l0104!mu_lo_start)
	                        alu[$l0000!dma_out2[0], --, b, l0104!mu_lo_start]
.962 00B000D00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out2, $l0000!work_in2, l0000!dma_sig2)
	                .begin
	                    .reg l0118!word
	                        alu[l0118!word, --, b, l0000!g_dma_word1_vals]
.963 00AAB000200F common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	.macro_ref                 move($l0000!dma_out2[2], l0104!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0104!len,-,l0000!g_dma_max]
.964 00D8F330812B common_code
	                bgt[l046_01#], defer[3]
.965 00C15108358E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        ld_field[l0118!word, 0001, $l0000!work_in2[3], >>21]
.966 008B2C283626 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu_shf[$l0000!dma_out2[1], l0118!word, or, 6, <<14]
.967 00A05C3C0009 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out2[2], --, b, l0104!pcie_lo_start]
.968 00AA80BC040F common_code
	                    alu[l0104!tmp, l0104!len, -, 1]
.969 008ACC48320B common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2[3], l0104!pcie_hi_word, or, l0104!tmp, <<20]
.970 040F07101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.971 00D8FC808038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l046_end#]
.972 00F002803B00 common_code
	                    .if (len > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0120!__immed_big_const
	                l046_01#: 
	                    immed[l0120!__immed_big_const,10240]
.973 00AAB000380F common_code
	                    alu[--,l0104!len,-,l0120!__immed_big_const]
.974 00D8F580812A common_code
	                    ble[l047_01#]
.975 00F000803706 common_code
	                    .endlocal
	                        .while (1)
	                        l048_start#: 
	.macro_ref                             move(l0104!tmp, 0x806)
	.macro_ref                                     immed32(l0104!tmp, 0x806)
	                                            immed[l0104!tmp, 2054]
.976 00FC17203700 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0104!tmp]
.977 00FC176C018D common_code
	                            local_csr_wr[mailbox1, $l0000!work_in2[2]]
.978 00FC17AC018E common_code
	                            local_csr_wr[mailbox2, $l0000!work_in2[3]]
.979 00FC17EC018F common_code
	                            local_csr_wr[mailbox3, $l0000!work_in2[4]]
.980 00E000020000 common_code
	                            ctx_arb[bpt]
.981 00D8F3C08038 common_code
	                        .endw
	                        l048_cont#: 
	                        br[l048_start#]
.982 00AAC0B02301 common_code
	                        .unreachable
	                    .endif
	                    l047_01#: 
	                    l047_end#: 
	                    alu[l0104!tmp, l0000!g_dma_max, -, 1]
.983 008ACC48320B common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2[3], l0104!pcie_hi_word, or, l0104!tmp, <<20]
.984 040F07101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.985 00AA80F0200F common_code
	#pragma warningdefault:5117
	                    alu[l0104!len, l0104!len, -, l0000!g_dma_max]
.986 00A080D0200D common_code
	                    alu[l0104!mu_lo_start, l0104!mu_lo_start, +, l0000!g_dma_max]
.987 00A080902009 common_code
	                    alu[l0104!pcie_lo_start, l0104!pcie_lo_start, +, l0000!g_dma_max]
.988 00B8C0C03300 common_code
	                    alu[l0104!pcie_hi_word, l0104!pcie_hi_word, +carry, 0]
.989 00E000000040 common_code
	                    .repeat
	                    l049_start#: 
	                        ctx_arb[l0000!dma_sig2]
.990 00A05C1C000D common_code
	                        .io_completed $l0000!dma_out2[0]
	                        .io_completed $l0000!dma_out2[1]
	                        .io_completed $l0000!dma_out2[2]
	                        .io_completed $l0000!dma_out2[3]
	                        .io_completed $l0000!dma_out2x[0]
	                        .io_completed $l0000!dma_out2x[1]
	                        .io_completed $l0000!dma_out2x[2]
	                        .io_completed $l0000!dma_out2x[3]
	                        alu[$l0000!dma_out2[0], --, b, l0104!mu_lo_start]
.991 00B000F00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out2, $l0000!work_in2, l0000!dma_sig2)
	                        .begin
	                            .reg l0122!word
	                                alu[l0122!word, --, b, l0000!g_dma_word1_vals]
.992 00AAB000200F common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0104!len,-,l0000!g_dma_max]
.993 00D8FA70812B common_code
	                        bgt[l050_01#], defer[3]
.994 00C151083D8E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0122!word, 0001, $l0000!work_in2[3], >>21]
.995 008B2C283E26 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out2[1], l0122!word, or, 6, <<14]
.996 00A05C3C0009 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out2[2], --, b, l0104!pcie_lo_start]
.997 00AA80BC040F common_code
	                            alu[l0104!tmp, l0104!len, -, 1]
.998 00D8FBE08038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out2[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0104!len, 0)
	.macro_ref                                     immed32(l0104!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l050_end#], defer[2]
.999 008ACC48320B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out2[3], l0104!pcie_hi_word, or, l0104!tmp, <<20]
.1000 00F0000C000F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0104!len, 0]
.1001 00AAC0B02301 common_code
	                        l050_01#: 
	                            alu[l0104!tmp, l0000!g_dma_max, -, 1]
.1002 008ACC48320B common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out2[3], l0104!pcie_hi_word, PCIE_DMA_XLEN, l0104!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out2[3], l0104!pcie_hi_word, or, l0104!tmp, <<20]
.1003 00AA80F0200F common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0104!len, l0104!len, -, l0000!g_dma_max]
.1004 00A080D0200D common_code
	                            alu[l0104!mu_lo_start, l0104!mu_lo_start, +, l0000!g_dma_max]
.1005 00A080902009 common_code
	                            alu[l0104!pcie_lo_start, l0104!pcie_lo_start, +, l0000!g_dma_max]
.1006 00B8C0C03300 common_code
	                            alu[l0104!pcie_hi_word, l0104!pcie_hi_word, +carry, 0]
.1007 040F07101F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l050_end#: 
	                        pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1008 00A0700C000F common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l049_cont#: 
	                    alu[--,--,b,l0104!len]
.1009 00D8F7408121 common_code
	                    bne[l049_start#]
.1010 00E102450012 common_code
	                .endif
	                l046_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig1, state_e2n0#)
	.macro_ref                     wait_br_next_state(l0000!work_sig0, l0000!dma_sig1, state_e2n0#, --)
	                        .set_sig l0000!work_sig0
	                            .set_sig l0000!dma_sig1
	                                ctx_arb[l0000!work_sig0, l0000!dma_sig1], any, br[state_e2n0#]
.1011 00FC044C0000 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M688_no_dma#:
	                local_csr_rd[active_ctx_sts]
.1012 00F000003700 common_code
	                immed[l0104!tmp, 0]
.1013 00B440D03707 common_code
	                alu[l0104!tmp, l0104!tmp, and, 7]
.1014 00E102650012 common_code
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig1, state_e2n0#)
	.macro_ref                     wait_br_next_state(l0000!work_sig0, l0000!dma_sig1, state_e2n0#, --)
	                        .set_sig l0000!work_sig0
	                            .set_sig l0000!dma_sig1
	                                ctx_arb[l0000!work_sig0, l0000!dma_sig1], defer[2], any, br[state_e2n0#]
.1015 009BD0D83626 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                alu_shf[l0104!tmp, l0104!tmp, or, 6, <<3]
.1016 00FC10A03700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                local_csr_wr[same_me_signal, l0104!tmp]
.1017 00F000803707 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M688_ctm_only_not_flagged#:
	.macro_ref                 move(l0104!tmp, 0x807)
	M806#:
	.macro_ref                         immed32(l0104!tmp, 0x807)
	M807#:
	                                immed[l0104!tmp, 2055]
.1018 00FC17203700 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                local_csr_wr[mailbox0, l0104!tmp]
.1019 00FC176C018D common_code
	                local_csr_wr[mailbox1, $l0000!work_in2[2]]
.1020 00FC17AC018E common_code
	                local_csr_wr[mailbox2, $l0000!work_in2[3]]
.1021 00FC17EC018F common_code
	                local_csr_wr[mailbox3, $l0000!work_in2[4]]
.1022 00E000020000 common_code
	                ctx_arb[bpt]
.1023 00D8FE408038 common_code
	                br[M688_ctm_only_not_flagged#]
.1024 00F000003F00 common_code
	            M688_add_wq_credits#:
	.macro_ref                 move(l0104!addr_lo, nfd_out_sb_wq_credits0)
	M808#:
	.macro_ref                         immed32(l0104!addr_lo, nfd_out_sb_wq_credits0)
	M809#:
	                                    immed[l0104!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.1025 00F440003F00 common_code
	                                    immed_w1[l0104!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.1026 008B02028206 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                alu_shf[--, l0000!g_add_imm_iref, or, 64, <<16]
.1027 124702083F20 common_code
	                mem[add_imm, --, 0, l0104!addr_lo,1], indirect_ref
.1028 00F001803F34 common_code
	.macro_ref                 signal_sb_credits_update()
	                .begin
	                    .reg l0125!addr
	.macro_ref                     move(l0125!addr, 603985972)
	.macro_ref                             immed32(l0125!addr, 603985972)
	                                        immed[l0125!addr, 6196]
.1029 00F442403F00 common_code
	                                        immed_w1[l0125!addr, 9216]
.1030 101C00083F20 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    ct[interthread_signal, --, 0, l0125!addr,1]
.1031 00D8D7108038 common_code
	                .end
	.end_macro_ref                 signal_sb_credits_update
	                br[M688_start_packet_dma#], defer[1]
.1032 00F000022B3F common_code
	.macro_ref                 move(@l0000!ndequeued, (64 - 1))
	.macro_ref                         immed32(@l0000!ndequeued, (64 - 1))
	                                immed[@l0000!ndequeued, 63]
.1033 00D940010232 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	            .end
	.end_macro_ref             _issue_packet_dma
	.end_macro_ref         issue_packet_dma
	    state_e2n0#:
	        br_signal[l0000!dma_sig1, transition_e2n0_e1n0#]
.1034 00D9E7404233 common_code
	        br_!signal[l0000!work_sig0, unreached#]
.1035 00BAC8A22B01 common_code
	    transition_e2n0_e3n1#:
	.macro_ref         issue_packet_dma(0, state_e3n1#, l0000!dma_sig1)
	M815#:
	.macro_ref             issue_packet_dma(0, state_e3n1#, l0000!dma_sig1, --)
	M816#:
	                .io_completed l0000!work_sig0
	                .io_completed l0000!dma_sig0
	.macro_ref                 _issue_packet_dma($l0000!work_in0, $l0000!dma_out0, $l0000!dma_out0x, l0000!dma_sig0, state_e3n1#, l0000!dma_sig1, --)
	                .begin
	                    .reg l0126!word
	                    .reg l0126!tmp
	                    .reg l0126!tmp2
	                    .reg l0126!isl
	                    .reg l0126!ovfl
	                    .reg l0126!len
	                    .reg l0126!addr_lo
	                    .reg l0126!pcie_hi_word
	                    .reg l0126!pcie_lo_start
	                    .reg l0126!mu_lo_start
	                    .reg l0126!ctm_bytes
	                    .reg l0126!split_len
	                    .io_completed $l0000!work_in0[0]
	                    .io_completed $l0000!work_in0[1]
	                    .io_completed $l0000!work_in0[2]
	                    .io_completed $l0000!work_in0[3]
	                    .io_completed $l0000!work_in0[4]
	                    .io_completed $l0000!dma_out0[0]
	                    .io_completed $l0000!dma_out0[1]
	                    .io_completed $l0000!dma_out0[2]
	                    .io_completed $l0000!dma_out0[3]
	                    .io_completed $l0000!dma_out0x[0]
	                    .io_completed $l0000!dma_out0x[1]
	                    .io_completed $l0000!dma_out0x[2]
	                    .io_completed $l0000!dma_out0x[3]
	                    alu[@l0000!ndequeued, @l0000!ndequeued, -, 1]
.1036 00D92C408129 common_code
	                    blt[M817_add_wq_credits#]
.1037 00D129020420 common_code
	                M817_start_packet_dma#:
	.macro_ref                     wsm_test_bit_clr($l0000!work_in0, SB_WQ_ENABLED, M817_no_dma#)
	M818#:
	.macro_ref                         wsm_test_bit_clr($l0000!work_in0, SB_WQ_ENABLED, M817_no_dma#, --)
	M819#:
	.macro_ref                             sm_test_bit_clr($l0000!work_in0[0], SB_WQ_ENABLED, M817_no_dma#, --)
	M820#:
	                                    br_bclr[$l0000!work_in0[0], 31, M817_no_dma#]
.1038 00D107420C3A common_code
	.end_macro_ref                             sm_test_bit_clr
	.end_macro_ref                         wsm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.macro_ref                     wsm_test_bit_clr($l0000!work_in0, SB_WQ_CTM_ONLY, M817_not_ctm_only#)
	.macro_ref                         wsm_test_bit_clr($l0000!work_in0, SB_WQ_CTM_ONLY, M817_not_ctm_only#, --)
	.macro_ref                             sm_test_bit_clr($l0000!work_in0[2], SB_WQ_CTM_ONLY, M817_not_ctm_only#, --)
	                                    br_bclr[$l0000!work_in0[2], 25, M817_not_ctm_only#]
.1039 00B440E60C01 common_code
	.end_macro_ref                             sm_test_bit_clr
	.end_macro_ref                         wsm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	                M817_ctm_only#:
	                    alu[l0126!word, $l0000!work_in0[2], and, l0000!g_dma_word0_mask]
.1040 008A18183A21 common_code
	                    alu_shf[$l0000!dma_out0[0], l0126!word, or, 1, <<31]
.1041 0085A0E20D7F common_code
	.macro_ref                     wsm_extract(l0126!word, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0126!word, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0126!word, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0126!word, 0x3F, and, $l0000!work_in0[2], >>26]
.1042 00BA00E0040E common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0126!word, l0126!word, or, l0000!g_dma_word1_vals]
.1043 008B28283A22 common_code
	                    alu_shf[$l0000!dma_out0[1], l0126!word, or, 2, <<14]
.1044 00A018360B00 common_code
	                        alu[$l0000!dma_out0[2], --, b, $l0000!work_in0[1]]
.1045 01A4C0E00981 common_code
	                    alu[l0126!word, l0000!g_dma_word3_vals, +8, $l0000!work_in0[0]], no_cc
.1046 009570C605FF common_code
	.macro_ref                     wsm_extract(l0126!tmp, $l0000!work_in0,  SB_WQ_RID)
	.macro_ref                         wsm_extract(l0126!tmp, $l0000!work_in0, SB_WQ_RID, 0)
	.macro_ref                             sm_extract(l0126!tmp, $l0000!work_in0[0], SB_WQ_RID, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0126!tmp, 0xFF, and, $l0000!work_in0[0], >>23]
.1047 008B40E0320E common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     sm_set_noclr(l0126!word, PCIE_DMA_RID, l0126!tmp)
	.macro_ref                         sm_set_noclr(l0126!word, PCIE_DMA_RID, l0126!tmp, 0)
	.macro_ref                             sm_set_noclr_to(l0126!word, l0126!word, PCIE_DMA_RID, l0126!tmp, 0)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0126!word, l0126!word, or, l0126!tmp, <<12]
.1048 00C003183C85 common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.end_macro_ref                         sm_set_noclr
	.end_macro_ref                     sm_set_noclr
	.macro_ref                     wsm_extract(l0126!len, $l0000!work_in0, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0126!len, $l0000!work_in0, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0126!len, $l0000!work_in0[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    ld_field_w_clr[l0126!len, 0011, $l0000!work_in0[4],0]
.1049 040F06101F08 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	#pragma warningdisable:5117
	#pragma warningdisable:4701
	#pragma warningdisable:5009
	                    pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1050 00E12EA40010 common_code
	#pragma warningdefault:5117
	.macro_ref                     wait_br_next_state(l0000!dma_sig1, --, state_e3n1#, defer[2])
	                        .set_sig l0000!dma_sig1
	                                ctx_arb[l0000!dma_sig1], br[state_e3n1#], defer[2]
.1051 00BAC0F03F01 common_code
	.end_macro_ref                     wait_br_next_state
	                    alu[l0126!len, l0126!len, -, 1]
.1052 008AC8403E0E common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0[3], l0126!word, PCIE_DMA_XLEN, l0126!len, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0[3], l0126!word, or, l0126!len, <<20]
.1053 00A000960B00 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdefault:4701
	#pragma warningdefault:5009
	                M817_not_ctm_only#:
	                        alu[l0126!pcie_lo_start, --, b, $l0000!work_in0[1]]
.1054 01B4C0B00981 common_code
	                    alu[l0126!pcie_hi_word, l0000!g_dma_word3_vals, +8, $l0000!work_in0[0]], no_cc
.1055 0095A0D20D7F common_code
	.macro_ref                     wsm_extract(l0126!tmp, $l0000!work_in0,  SB_WQ_RID)
	.macro_ref                         wsm_extract(l0126!tmp, $l0000!work_in0, SB_WQ_RID, 0)
	.macro_ref                             sm_extract(l0126!tmp, $l0000!work_in0[0], SB_WQ_RID, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     sm_set_noclr(l0126!pcie_hi_word, PCIE_DMA_RID, l0126!tmp)
	.macro_ref                         sm_set_noclr(l0126!pcie_hi_word, PCIE_DMA_RID, l0126!tmp, 0)
	.macro_ref                             sm_set_noclr_to(l0126!pcie_hi_word, l0126!pcie_hi_word, PCIE_DMA_RID, l0126!tmp, 0)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.end_macro_ref                         sm_set_noclr
	.end_macro_ref                     sm_set_noclr
	.macro_ref                     wsm_extract(l0126!len, $l0000!work_in0, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0126!len, $l0000!work_in0, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0126!len, $l0000!work_in0[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     wsm_extract(l0126!isl, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0126!isl, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0126!isl, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0126!isl, 0x3F, and, $l0000!work_in0[2], >>26]
.1056 00D91BB08120 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    beq[M817_mu_only_dma#], defer[3]
.1057 008570C605FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[l0126!tmp, 0xFF, and, $l0000!work_in0[0], >>23]
.1058 009B40B82E0C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0126!pcie_hi_word, l0126!pcie_hi_word, or, l0126!tmp, <<12]
.1059 00C00312140A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    ld_field_w_clr[l0126!len, 0011, $l0000!work_in0[4],0]
.1060 00F000103300 common_code
	                M817_ctm_and_mu_dma#:
	.macro_ref                     move(l0126!tmp, 256)
	M865#:
	.macro_ref                             immed32(l0126!tmp, 256)
	M866#:
	                                    immed[l0126!tmp, 256]
.1061 0094E0F20D23 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	.macro_ref                     wsm_extract(l0126!tmp2, $l0000!work_in0, SB_WQ_CTM_SPLIT)
	.macro_ref                         wsm_extract(l0126!tmp2, $l0000!work_in0, SB_WQ_CTM_SPLIT, 0)
	.macro_ref                             sm_extract(l0126!tmp2, $l0000!work_in0[2], SB_WQ_CTM_SPLIT, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_SPLIT)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0126!tmp2, 0x3, and, $l0000!work_in0[2], >>14]
.1062 00AA70003F00 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[--, l0126!tmp2, or, 0]
.1063 009000E03200 common_code
	                    alu_shf[l0126!split_len, --, b, l0126!tmp, <<indirect]
.1064 00F001F03FFF common_code
	.macro_ref                     wsm_extract(l0126!tmp, $l0000!work_in0, SB_WQ_OFFSET)
	.macro_ref                         wsm_extract(l0126!tmp, $l0000!work_in0, SB_WQ_OFFSET, 0)
	.macro_ref                             sm_extract(l0126!tmp, $l0000!work_in0[2], SB_WQ_OFFSET, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                             __WSM_GET_MASKLEN
	                                    .begin
	                                        .reg l0130!_wsm_mask
	.macro_ref                                         _wsm_loadmask(l0130!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                 _wsm_validate_size
	                                                immed[l0130!_wsm_mask, 0x1FFF]
.1065 008400C83C83 common_code
	.end_macro_ref                                         _wsm_loadmask
	                                        alu_shf[l0126!tmp, l0130!_wsm_mask, and, $l0000!work_in0[2], >>0]
.1066 00BAC0D0380C common_code
	                                    .end
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0126!ctm_bytes, l0126!split_len, -, l0126!tmp]
.1067 00D91B80812A common_code
	                    ble[M817_mu_only_dma#]
.1068 00A440E60C01 common_code
	                    alu[l0126!word, $l0000!work_in0[2], and, l0000!g_dma_word0_mask]
.1069 008A1810860E common_code
	                    alu_shf[$l0000!dma_out0[0], l0126!word, or, 1, <<31]
.1070 0085A0E20D7F common_code
	.macro_ref                     wsm_extract(l0126!word, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0126!word, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0126!word, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0126!word, 0x3F, and, $l0000!work_in0[2], >>26]
.1071 00AA00EE000E common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0126!word, l0126!word, or, 0x80]                   ; Direct access
.1072 008B88219A0E common_code
	                    alu_shf[$l0000!dma_out0[1], l0126!word, or, 38, <<8]
.1073 00A0583C0009 common_code
	                    alu[$l0000!dma_out0[2], --, b, l0126!pcie_lo_start]
.1074 00AAC0C03701 common_code
	                    alu[l0126!tmp, l0126!ctm_bytes, -, 1]
.1075 008AC8482E0C common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp)
	.macro_ref                         sm_set_noclr_to($l0000!dma_out0[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out0[3], l0126!pcie_hi_word, or, l0126!tmp, <<20]
.1076 040F06101F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1077 00AA80A0340A common_code
	#pragma warningdefault:5117
	                    alu[l0126!len, l0126!len, -, l0126!ctm_bytes]
.1078 00D92A80812A common_code
	                    ble[M817_ctm_only_not_flagged#]
.1079 008150E21200 common_code
	                    alu_shf[l0126!mu_lo_start, --, b, $l0000!work_in0[3], <<11]
.1080 00A080E0380E common_code
	                    alu[l0126!mu_lo_start, l0126!mu_lo_start, +, l0126!split_len]
.1081 00A0585C000E common_code
	.macro_ref                     move($l0000!dma_out0x[0], l0126!mu_lo_start)
	                            alu[$l0000!dma_out0x[0], --, b, l0126!mu_lo_start]
.1082 00B000C00700 common_code
	.end_macro_ref                     move
	.macro_ref                     _build_mu_dma_word1($l0000!dma_out0x, $l0000!work_in0, l0000!dma_sig0)
	                    .begin
	                        .reg l0132!word
	                            alu[l0132!word, --, b, l0000!g_dma_word1_vals]
.1083 00A080903409 common_code
	                    .end
	.end_macro_ref                     _build_mu_dma_word1
	                    alu[l0126!pcie_lo_start, l0126!pcie_lo_start, +, l0126!ctm_bytes]
.1084 00B8C0B02F00 common_code
	                    alu[l0126!pcie_hi_word, l0126!pcie_hi_word, +carry, 0]
.1085 00AAB000200A common_code
	.macro_ref                     move($l0000!dma_out0x[2], l0126!pcie_lo_start)
	.end_macro_ref                     move
	                    .if (len <= g_dma_max)
	                    alu[--,l0126!len,-,l0000!g_dma_max]
.1086 00D911B0812B common_code
	                    bgt[l051_01#], defer[3]
.1087 00C151083184 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                            ld_field[l0132!word, 0001, $l0000!work_in0[3], >>21]
.1088 008B28683222 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                            alu_shf[$l0000!dma_out0x[1], l0132!word, or, 2, <<14]
.1089 00A0587C0009 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out0x[2], --, b, l0126!pcie_lo_start]
.1090 00AA80CC040A common_code
	                        alu[l0126!tmp, l0126!len, -, 1]
.1091 008AC8882E0C common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out0x[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out0x[3], l0126!pcie_hi_word, or, l0126!tmp, <<20]
.1092 040F06501F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out0x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1093 00D91B408038 common_code
	#pragma warningdefault:5117
	                    .else
	                    br[l051_end#]
.1094 00C00312140C common_code
	                    l051_01#: 
	.macro_ref                         wsm_extract(l0126!tmp, $l0000!work_in0, SB_WQ_DATALEN)
	.macro_ref                             wsm_extract(l0126!tmp, $l0000!work_in0, SB_WQ_DATALEN, 0)
	.macro_ref                                 sm_extract(l0126!tmp, $l0000!work_in0[4], SB_WQ_DATALEN, 0)
	.macro_ref                                 __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                                 __WSM_GET_MASKLEN
	.macro_ref                                         _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                         _wsm_validate_size
	                                        ld_field_w_clr[l0126!tmp, 0011, $l0000!work_in0[4],0]
.1095 00F002803B00 common_code
	.end_macro_ref                                 sm_extract
	.end_macro_ref                             wsm_extract
	.end_macro_ref                         wsm_extract
	                        .if (tmp > NFD_OUT_MAX_PKT_BYTES)
	                        .local l0134!__immed_big_const
	                        immed[l0134!__immed_big_const,10240]
.1096 00AAB000380C common_code
	                        alu[--,l0126!tmp,-,l0134!__immed_big_const]
.1097 00D91440812A common_code
	                        ble[l052_01#]
.1098 00F000803306 common_code
	                        .endlocal
	                            .while (1)
	                            l053_start#: 
	.macro_ref                                 move(l0126!tmp, 0x806)
	.macro_ref                                         immed32(l0126!tmp, 0x806)
	                                                immed[l0126!tmp, 2054]
.1099 00FC17203300 common_code
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                                local_csr_wr[mailbox0, l0126!tmp]
.1100 00FC176C0183 common_code
	                                local_csr_wr[mailbox1, $l0000!work_in0[2]]
.1101 00FC17AC0184 common_code
	                                local_csr_wr[mailbox2, $l0000!work_in0[3]]
.1102 00FC17EC0185 common_code
	                                local_csr_wr[mailbox3, $l0000!work_in0[4]]
.1103 00E000020000 common_code
	                                ctx_arb[bpt]
.1104 00D912808038 common_code
	                            .endw
	                            l053_cont#: 
	                            br[l053_start#]
.1105 00AAC0C02301 common_code
	                            .unreachable
	                        .endif
	                        l052_01#: 
	                        l052_end#: 
	                        alu[l0126!tmp, l0000!g_dma_max, -, 1]
.1106 008AC8882E0C common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out0x[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out0x[3], l0126!pcie_hi_word, or, l0126!tmp, <<20]
.1107 040F06501F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out0x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1108 00AA80A0200A common_code
	#pragma warningdefault:5117
	                        alu[l0126!len, l0126!len, -, l0000!g_dma_max]
.1109 00A080E0200E common_code
	                        alu[l0126!mu_lo_start, l0126!mu_lo_start, +, l0000!g_dma_max]
.1110 00A080902009 common_code
	                        alu[l0126!pcie_lo_start, l0126!pcie_lo_start, +, l0000!g_dma_max]
.1111 00B8C0B02F00 common_code
	                        alu[l0126!pcie_hi_word, l0126!pcie_hi_word, +carry, 0]
.1112 00E000000004 common_code
	                        .repeat
	                        l054_start#: 
	                            ctx_arb[l0000!dma_sig0]
.1113 00A0581C000E common_code
	                            .io_completed $l0000!dma_out0[0]
	                            .io_completed $l0000!dma_out0[1]
	                            .io_completed $l0000!dma_out0[2]
	                            .io_completed $l0000!dma_out0[3]
	                            .io_completed $l0000!dma_out0x[0]
	                            .io_completed $l0000!dma_out0x[1]
	                            .io_completed $l0000!dma_out0x[2]
	                            .io_completed $l0000!dma_out0x[3]
	                            alu[$l0000!dma_out0[0], --, b, l0126!mu_lo_start]
.1114 00B000F00700 common_code
	.macro_ref                             _build_mu_dma_word1($l0000!dma_out0, $l0000!work_in0, l0000!dma_sig0)
	                            .begin
	                                .reg l0136!word
	                                    alu[l0136!word, --, b, l0000!g_dma_word1_vals]
.1115 00AAB000200A common_code
	                            .end
	.end_macro_ref                             _build_mu_dma_word1
	                            .if (len <= g_dma_max)
	                            alu[--,l0126!len,-,l0000!g_dma_max]
.1116 00D91930812B common_code
	                            bgt[l055_01#], defer[3]
.1117 00C151083D84 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    ld_field[l0136!word, 0001, $l0000!work_in0[3], >>21]
.1118 008B28283E22 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[$l0000!dma_out0[1], l0136!word, or, 2, <<14]
.1119 00A0583C0009 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out0[2], --, b, l0126!pcie_lo_start]
.1120 00AA80CC040A common_code
	                                alu[l0126!tmp, l0126!len, -, 1]
.1121 00D91AA08038 common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out0[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	.macro_ref                                 move(l0126!len, 0)
	.macro_ref                                         immed32(l0126!len, 0)
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                            .else
	                            br[l055_end#], defer[2]
.1122 008AC8482E0C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                    alu_shf[$l0000!dma_out0[3], l0126!pcie_hi_word, or, l0126!tmp, <<20]
.1123 00F0000C000A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                                immed[l0126!len, 0]
.1124 00AAC0C02301 common_code
	                            l055_01#: 
	                                alu[l0126!tmp, l0000!g_dma_max, -, 1]
.1125 008AC8482E0C common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out0[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[$l0000!dma_out0[3], l0126!pcie_hi_word, or, l0126!tmp, <<20]
.1126 00AA80A0200A common_code
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	                                alu[l0126!len, l0126!len, -, l0000!g_dma_max]
.1127 00A080E0200E common_code
	                                alu[l0126!mu_lo_start, l0126!mu_lo_start, +, l0000!g_dma_max]
.1128 00A080902009 common_code
	                                alu[l0126!pcie_lo_start, l0126!pcie_lo_start, +, l0000!g_dma_max]
.1129 00B8C0B02F00 common_code
	                                alu[l0126!pcie_hi_word, l0126!pcie_hi_word, +carry, 0]
.1130 040F06101F08 common_code
	                            .endif
	#pragma warningdisable:5117
	                            l055_end#: 
	                            pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1131 00A0700C000A common_code
	#pragma warningdefault:5117
	                        .until (len == 0)
	                        l054_cont#: 
	                        alu[--,--,b,l0126!len]
.1132 00D916008121 common_code
	                        bne[l054_start#]
.1133 00E12E840010 common_code
	                    .endif
	                    l051_end#: 
	.macro_ref                     wait_br_next_state(l0000!dma_sig1, --, state_e3n1#)
	.macro_ref                         wait_br_next_state(l0000!dma_sig1, --, state_e3n1#, --)
	                            .set_sig l0000!dma_sig1
	                                    ctx_arb[l0000!dma_sig1], br[state_e3n1#]
.1134 009150C21200 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M817_mu_only_dma#:
	                    alu_shf[l0126!mu_lo_start, --, b, $l0000!work_in0[3], <<11]
.1135 00F001F037FF common_code
	.macro_ref                     wsm_extract(l0126!tmp, $l0000!work_in0,  SB_WQ_OFFSET)
	.macro_ref                         wsm_extract(l0126!tmp, $l0000!work_in0, SB_WQ_OFFSET, 0)
	.macro_ref                             sm_extract(l0126!tmp, $l0000!work_in0[2], SB_WQ_OFFSET, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                             __WSM_GET_MASKLEN
	                                    .begin
	                                        .reg l0139!_wsm_mask
	.macro_ref                                         _wsm_loadmask(l0139!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                 _wsm_validate_size
	                                                immed[l0139!_wsm_mask, 0x1FFF]
.1136 008400C83483 common_code
	.end_macro_ref                                         _wsm_loadmask
	                                        alu_shf[l0126!tmp, l0139!_wsm_mask, and, $l0000!work_in0[2], >>0]
.1137 00A0C0E0300C common_code
	                                    .end
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0126!mu_lo_start, l0126!mu_lo_start, +, l0126!tmp]
.1138 00A0581C000E common_code
	.macro_ref                     move($l0000!dma_out0[0], l0126!mu_lo_start)
	                            alu[$l0000!dma_out0[0], --, b, l0126!mu_lo_start]
.1139 00B000C00700 common_code
	.end_macro_ref                     move
	.macro_ref                     _build_mu_dma_word1($l0000!dma_out0, $l0000!work_in0, l0000!dma_sig0)
	                    .begin
	                        .reg l0140!word
	                            alu[l0140!word, --, b, l0000!g_dma_word1_vals]
.1140 00AAB000200A common_code
	                    .end
	.end_macro_ref                     _build_mu_dma_word1
	.macro_ref                     move($l0000!dma_out0[2], l0126!pcie_lo_start)
	.end_macro_ref                     move
	                    .if (len <= g_dma_max)
	                    alu[--,l0126!len,-,l0000!g_dma_max]
.1141 00D91F70812B common_code
	                    bgt[l056_01#], defer[3]
.1142 00C151083184 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            ld_field[l0140!word, 0001, $l0000!work_in0[3], >>21]
.1143 008B28283222 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu_shf[$l0000!dma_out0[1], l0140!word, or, 2, <<14]
.1144 00A0583C0009 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out0[2], --, b, l0126!pcie_lo_start]
.1145 00AA80CC040A common_code
	                        alu[l0126!tmp, l0126!len, -, 1]
.1146 008AC8482E0C common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out0[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out0[3], l0126!pcie_hi_word, or, l0126!tmp, <<20]
.1147 040F06101F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1148 00D928C08038 common_code
	#pragma warningdefault:5117
	                    .else
	                    br[l056_end#]
.1149 00F002803700 common_code
	                        .if (len > NFD_OUT_MAX_PKT_BYTES)
	                        .local l0142!__immed_big_const
	                    l056_01#: 
	                        immed[l0142!__immed_big_const,10240]
.1150 00AAB000340A common_code
	                        alu[--,l0126!len,-,l0142!__immed_big_const]
.1151 00D921C0812A common_code
	                        ble[l057_01#]
.1152 00F000803306 common_code
	                        .endlocal
	                            .while (1)
	                            l058_start#: 
	.macro_ref                                 move(l0126!tmp, 0x806)
	.macro_ref                                         immed32(l0126!tmp, 0x806)
	                                                immed[l0126!tmp, 2054]
.1153 00FC17203300 common_code
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                                local_csr_wr[mailbox0, l0126!tmp]
.1154 00FC176C0183 common_code
	                                local_csr_wr[mailbox1, $l0000!work_in0[2]]
.1155 00FC17AC0184 common_code
	                                local_csr_wr[mailbox2, $l0000!work_in0[3]]
.1156 00FC17EC0185 common_code
	                                local_csr_wr[mailbox3, $l0000!work_in0[4]]
.1157 00E000020000 common_code
	                                ctx_arb[bpt]
.1158 00D920008038 common_code
	                            .endw
	                            l058_cont#: 
	                            br[l058_start#]
.1159 00AAC0C02301 common_code
	                            .unreachable
	                        .endif
	                        l057_01#: 
	                        l057_end#: 
	                        alu[l0126!tmp, l0000!g_dma_max, -, 1]
.1160 008AC8482E0C common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out0[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out0[3], l0126!pcie_hi_word, or, l0126!tmp, <<20]
.1161 040F06101F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1162 00AA80A0200A common_code
	#pragma warningdefault:5117
	                        alu[l0126!len, l0126!len, -, l0000!g_dma_max]
.1163 00A080E0200E common_code
	                        alu[l0126!mu_lo_start, l0126!mu_lo_start, +, l0000!g_dma_max]
.1164 00A080902009 common_code
	                        alu[l0126!pcie_lo_start, l0126!pcie_lo_start, +, l0000!g_dma_max]
.1165 00B8C0B02F00 common_code
	                        alu[l0126!pcie_hi_word, l0126!pcie_hi_word, +carry, 0]
.1166 00E000000004 common_code
	                        .repeat
	                        l059_start#: 
	                            ctx_arb[l0000!dma_sig0]
.1167 00A0581C000E common_code
	                            .io_completed $l0000!dma_out0[0]
	                            .io_completed $l0000!dma_out0[1]
	                            .io_completed $l0000!dma_out0[2]
	                            .io_completed $l0000!dma_out0[3]
	                            .io_completed $l0000!dma_out0x[0]
	                            .io_completed $l0000!dma_out0x[1]
	                            .io_completed $l0000!dma_out0x[2]
	                            .io_completed $l0000!dma_out0x[3]
	                            alu[$l0000!dma_out0[0], --, b, l0126!mu_lo_start]
.1168 00B000E00700 common_code
	.macro_ref                             _build_mu_dma_word1($l0000!dma_out0, $l0000!work_in0, l0000!dma_sig0)
	                            .begin
	                                .reg l0144!word
	                                    alu[l0144!word, --, b, l0000!g_dma_word1_vals]
.1169 00AAB000200A common_code
	                            .end
	.end_macro_ref                             _build_mu_dma_word1
	                            .if (len <= g_dma_max)
	                            alu[--,l0126!len,-,l0000!g_dma_max]
.1170 00D926B0812B common_code
	                            bgt[l060_01#], defer[3]
.1171 00C151083984 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    ld_field[l0144!word, 0001, $l0000!work_in0[3], >>21]
.1172 008B28283A22 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[$l0000!dma_out0[1], l0144!word, or, 2, <<14]
.1173 00A0583C0009 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out0[2], --, b, l0126!pcie_lo_start]
.1174 00AA80CC040A common_code
	                                alu[l0126!tmp, l0126!len, -, 1]
.1175 00D928208038 common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out0[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	.macro_ref                                 move(l0126!len, 0)
	.macro_ref                                         immed32(l0126!len, 0)
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                            .else
	                            br[l060_end#], defer[2]
.1176 008AC8482E0C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                    alu_shf[$l0000!dma_out0[3], l0126!pcie_hi_word, or, l0126!tmp, <<20]
.1177 00F0000C000A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                                immed[l0126!len, 0]
.1178 00AAC0C02301 common_code
	                            l060_01#: 
	                                alu[l0126!tmp, l0000!g_dma_max, -, 1]
.1179 008AC8482E0C common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out0[3], l0126!pcie_hi_word, PCIE_DMA_XLEN, l0126!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[$l0000!dma_out0[3], l0126!pcie_hi_word, or, l0126!tmp, <<20]
.1180 00AA80A0200A common_code
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	                                alu[l0126!len, l0126!len, -, l0000!g_dma_max]
.1181 00A080E0200E common_code
	                                alu[l0126!mu_lo_start, l0126!mu_lo_start, +, l0000!g_dma_max]
.1182 00A080902009 common_code
	                                alu[l0126!pcie_lo_start, l0126!pcie_lo_start, +, l0000!g_dma_max]
.1183 00B8C0B02F00 common_code
	                                alu[l0126!pcie_hi_word, l0126!pcie_hi_word, +carry, 0]
.1184 040F06101F08 common_code
	                            .endif
	#pragma warningdisable:5117
	                            l060_end#: 
	                            pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1185 00A0700C000A common_code
	#pragma warningdefault:5117
	                        .until (len == 0)
	                        l059_cont#: 
	                        alu[--,--,b,l0126!len]
.1186 00D923808121 common_code
	                        bne[l059_start#]
.1187 00E12E840010 common_code
	                    .endif
	                    l056_end#: 
	.macro_ref                     wait_br_next_state(l0000!dma_sig1, --, state_e3n1#)
	.macro_ref                         wait_br_next_state(l0000!dma_sig1, --, state_e3n1#, --)
	                            .set_sig l0000!dma_sig1
	                                    ctx_arb[l0000!dma_sig1], br[state_e3n1#]
.1188 00FC044C0000 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M817_no_dma#:
	                    local_csr_rd[active_ctx_sts]
.1189 00F000003300 common_code
	                    immed[l0126!tmp, 0]
.1190 00B440C03307 common_code
	                    alu[l0126!tmp, l0126!tmp, and, 7]
.1191 00E12EA40010 common_code
	.macro_ref                     wait_br_next_state(l0000!dma_sig1, --, state_e3n1#)
	.macro_ref                         wait_br_next_state(l0000!dma_sig1, --, state_e3n1#, --)
	                            .set_sig l0000!dma_sig1
	                                    ctx_arb[l0000!dma_sig1], defer[2], br[state_e3n1#]
.1192 009BD0C83222 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    alu_shf[l0126!tmp, l0126!tmp, or, 2, <<3]
.1193 00FC10A03300 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[same_me_signal, l0126!tmp]
.1194 00F000803307 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M817_ctm_only_not_flagged#:
	.macro_ref                     move(l0126!tmp, 0x807)
	M935#:
	.macro_ref                             immed32(l0126!tmp, 0x807)
	M936#:
	                                    immed[l0126!tmp, 2055]
.1195 00FC17203300 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    local_csr_wr[mailbox0, l0126!tmp]
.1196 00FC176C0183 common_code
	                    local_csr_wr[mailbox1, $l0000!work_in0[2]]
.1197 00FC17AC0184 common_code
	                    local_csr_wr[mailbox2, $l0000!work_in0[3]]
.1198 00FC17EC0185 common_code
	                    local_csr_wr[mailbox3, $l0000!work_in0[4]]
.1199 00E000020000 common_code
	                    ctx_arb[bpt]
.1200 00D92A808038 common_code
	                    br[M817_ctm_only_not_flagged#]
.1201 00F000002F00 common_code
	                M817_add_wq_credits#:
	.macro_ref                     move(l0126!addr_lo, nfd_out_sb_wq_credits0)
	M937#:
	.macro_ref                             immed32(l0126!addr_lo, nfd_out_sb_wq_credits0)
	M938#:
	                                        immed[l0126!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.1202 00F440002F00 common_code
	                                        immed_w1[l0126!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.1203 008B02028206 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    alu_shf[--, l0000!g_add_imm_iref, or, 64, <<16]
.1204 124702082F20 common_code
	                    mem[add_imm, --, 0, l0126!addr_lo,1], indirect_ref
.1205 00F001803B34 common_code
	.macro_ref                     signal_sb_credits_update()
	                    .begin
	                        .reg l0147!addr
	.macro_ref                         move(l0147!addr, 603985972)
	.macro_ref                                 immed32(l0147!addr, 603985972)
	                                            immed[l0147!addr, 6196]
.1206 00F442403B00 common_code
	                                            immed_w1[l0147!addr, 9216]
.1207 101C00083B20 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        ct[interthread_signal, --, 0, l0147!addr,1]
.1208 00D903508038 common_code
	                    .end
	.end_macro_ref                     signal_sb_credits_update
	                    br[M817_start_packet_dma#], defer[1]
.1209 00F000022B3F common_code
	.macro_ref                     move(@l0000!ndequeued, (64 - 1))
	.macro_ref                             immed32(@l0000!ndequeued, (64 - 1))
	                                    immed[@l0000!ndequeued, 63]
.1210 0095A0F2217F common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                .end
	.end_macro_ref                 _issue_packet_dma
	.end_macro_ref             issue_packet_dma
	.end_macro_ref         issue_packet_dma
	    state_e3n1#:
	    transition_e3n1_e2n1#:
	.macro_ref         complete_packet_dma(1, state_e2n1#, l0000!work_sig1, l0000!dma_sig2)
	M944#:
	.macro_ref             _complete_packet_dma($l0000!work_in1, l0000!work_sig1, state_e2n1#, l0000!work_sig1, l0000!dma_sig2)
	            .begin
	                .reg l0148!isl
	                .reg l0148!qnum
	                .reg l0148!addr_hi
	                .reg l0148!addr_lo
	                .reg l0148!ring_num
	                .reg l0148!bitmap_lo
	                .reg l0148!cntr_addr_lo
	                .reg l0148!seq
	                .reg $l0148!ticket
	                .sig l0148!ticket_sig
	M945#:
	.macro_ref                 wsm_extract(l0148!qnum, $l0000!work_in1, SB_WQ_QNUM)
	.macro_ref                     wsm_extract(l0148!qnum, $l0000!work_in1, SB_WQ_QNUM, 0)
	.macro_ref                         sm_extract(l0148!qnum, $l0000!work_in1[4], SB_WQ_QNUM, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_QNUM)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0148!isl, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0148!isl, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0148!isl, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0148!isl, 0x3F, and, $l0000!work_in1[2], >>26]
.1211 00D930B08120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M944_no_ctm_buffer#], defer[3]
.1212 008500D629FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0148!qnum, 0xFF, and, $l0000!work_in1[4], >>16]
.1213 009BC0E80E0D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[l0148!bitmap_lo, l0000!g_bitmap_base, or, l0148!qnum, <<4]
.1214 008488021902 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[$l0148!ticket, l0000!g_seq_mask, and, $l0000!work_in1[0], >>8]
.1215 008A80E03E03 common_code
	                alu_shf[l0148!addr_hi, l0000!g_pkt_free_hi, or, l0148!isl, <<24]
.1216 009500B81188 common_code
	                alu_shf[l0148!addr_lo, l0000!g_pkt_num_mask, and, $l0000!work_in1[2], >>16]
.1217 005200002F0E common_code
	                mem[packet_free, --, l0148!addr_hi, <<8, l0148!addr_lo]
.1218 104B80003B20 common_code
	            M944_no_ctm_buffer#:
	                mem[release_ticket, $l0148!ticket, 0, l0148!bitmap_lo, 1], sig_done[l0148!ticket_sig]
.1219 009830B09E89 common_code
	.macro_ref                 wsm_extract(l0148!addr_lo, $l0000!work_in1, SB_WQ_MUBUF)
	.macro_ref                     wsm_extract(l0148!addr_lo, $l0000!work_in1, SB_WQ_MUBUF, 0)
	.macro_ref                         sm_extract(l0148!addr_lo, $l0000!work_in1[3], SB_WQ_MUBUF, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_MUBUF)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0148!addr_lo, $l0000!work_in1[3], and~, 7, <<29]
.1220 00E000200300 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                ctx_arb[l0148!ticket_sig, l0148!ticket_sig+1], defer[2]
.1221 009BC0F8A20D common_code
	                alu_shf[l0148!cntr_addr_lo, 8, or, l0148!qnum, <<4]
.1222 0085D0F22523 common_code
	.macro_ref                 wsm_extract(l0148!ring_num, $l0000!work_in1, SB_WQ_BLS)
	.macro_ref                     wsm_extract(l0148!ring_num, $l0000!work_in1, SB_WQ_BLS, 0)
	.macro_ref                         sm_extract(l0148!ring_num, $l0000!work_in1[3], SB_WQ_BLS, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_BLS)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0148!ring_num, 0x3, and, $l0000!work_in1[3], >>29]
.1223 008B0208160F common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu_shf[-- , l0000!g_blm_iref, or, l0148!ring_num, <<16]
.1224 025700002F05 common_code
	                mem[fast_journal, --, l0000!g_blm_addr_hi, <<8, l0148!addr_lo], indirect_ref
.1225 00C9334A0020 common_code
	            M944_ticket_ready#:
	                br=byte[$l0148!ticket, 0, 0, M944_complete_done#]
.1226 00C933CE00FF common_code
	                br=byte[$l0148!ticket, 0, 255, M944_ticket_error#]
.1227 008B02020206 common_code
	                alu_shf[--, l0000!g_add_imm_iref, or, $l0148!ticket, <<16]
.1228 024702083F04 common_code
	                mem[add_imm, --, l0000!g_send_cntrs_addr_hi, <<8, l0148!cntr_addr_lo,1], indirect_ref
.1229 007938600300 common_code
	#pragma warningdisable:5009
	            M944_complete_done#:
	.macro_ref                 pci_out_pd_request_work($l0000!work_in1[0], l0000!work_sig1)
	                        cls[ring_workq_add_thread, $l0000!work_in1[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                            sig_done[l0000!work_sig1]
.1230 00E1A0C50048 common_code
	.end_macro_ref                 pci_out_pd_request_work
	#pragma warningdefault:5009
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig2, state_e2n1#)
	.macro_ref                     wait_br_next_state(l0000!work_sig1, l0000!dma_sig2, state_e2n1#, --)
	                        .set_sig l0000!work_sig1
	                            .set_sig l0000!dma_sig2
	                                ctx_arb[l0000!work_sig1, l0000!dma_sig2], any, br[state_e2n1#]
.1231 00B0C0902701 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M944_ticket_error#:
	                alu[l0000!g_num_ticket_errors, l0000!g_num_ticket_errors, +, 1]
.1232 00FC17202700 common_code
	                local_csr_wr[mailbox0, l0000!g_num_ticket_errors]
.1233 00F0003033FF common_code
	.macro_ref                 wsm_extract(l0148!seq, $l0000!work_in1, SB_WQ_SEQ)
	.macro_ref                     wsm_extract(l0148!seq, $l0000!work_in1, SB_WQ_SEQ, 0)
	.macro_ref                         sm_extract(l0148!seq, $l0000!work_in1[0], SB_WQ_SEQ, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_SEQ)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0149!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0149!_wsm_mask, 0x3FF, 10, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0149!_wsm_mask, 0x3FF]
.1234 009480B83186 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0148!seq, l0149!_wsm_mask, and, $l0000!work_in1[0], >>8]
.1235 00FC17602F00 common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                local_csr_wr[mailbox1, l0148!seq]
.1236 00B000DC1F00 common_code
	.macro_ref                 cycle32_sleep(250)
	                .begin
	                    .reg l0150!tmp_cycle_count l0150!_ixp_future_count_signal_num
	                    .sig l0150!_ixp_future_count_signal_name
	                    .set_sig l0150!_ixp_future_count_signal_name
	                    alu[l0150!_ixp_future_count_signal_num, --, b, 7]
.1237 00FC0C0C0000 common_code
	                    local_csr_rd[timestamp_low]
.1238 00F0000C000F common_code
	                    immed[l0150!tmp_cycle_count, 0]
.1239 00A080FC3C0F common_code
	.macro_ref                         add(l0150!tmp_cycle_count, l0150!tmp_cycle_count, 15)
	.macro_ref                             alu_op(l0150!tmp_cycle_count, l0150!tmp_cycle_count, +, 15)
	.macro_ref                                         _nfp_alu(l0150!tmp_cycle_count, l0150!tmp_cycle_count, +, 15)
	                                                alu[l0150!tmp_cycle_count, l0150!tmp_cycle_count, +, 15]
.1240 00E000200080 common_code
	.end_macro_ref                                         _nfp_alu
	.end_macro_ref                             alu_op
	.end_macro_ref                         add
	                    ctx_arb[l0150!_ixp_future_count_signal_name], defer[2]
.1241 00FC05EC000F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_ctx_future_count, l0150!tmp_cycle_count]
.1242 00FC07E03700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_future_count_signal, l0150!_ixp_future_count_signal_num]
.1243 104B80003B20 common_code
	                .end
	.end_macro_ref                 cycle32_sleep
	                mem[release_ticket, $l0148!ticket, 0, l0148!bitmap_lo, 1], sig_done[l0148!ticket_sig]
.1244 00E132440300 common_code
	                ctx_arb[l0148!ticket_sig, l0148!ticket_sig+1], br[M944_ticket_ready#]
.1245 0095A0C2217F common_code
	            .end
	.end_macro_ref             _complete_packet_dma
	.end_macro_ref         complete_packet_dma
	    transition_e1n2_e0n2#:
	.macro_ref         complete_packet_dma(1, state_e0n2#, l0000!work_sig2)
	M979#:
	.macro_ref             complete_packet_dma(1, state_e0n2#, l0000!work_sig2, --)
	M980#:
	.macro_ref                 _complete_packet_dma($l0000!work_in1, l0000!work_sig1, state_e0n2#, l0000!work_sig2, --)
	                .begin
	                    .reg l0151!isl
	                    .reg l0151!qnum
	                    .reg l0151!addr_hi
	                    .reg l0151!addr_lo
	                    .reg l0151!ring_num
	                    .reg l0151!bitmap_lo
	                    .reg l0151!cntr_addr_lo
	                    .reg l0151!seq
	                    .reg $l0151!ticket
	                    .sig l0151!ticket_sig
	M981#:
	.macro_ref                     wsm_extract(l0151!qnum, $l0000!work_in1, SB_WQ_QNUM)
	.macro_ref                         wsm_extract(l0151!qnum, $l0000!work_in1, SB_WQ_QNUM, 0)
	.macro_ref                             sm_extract(l0151!qnum, $l0000!work_in1[4], SB_WQ_QNUM, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_QNUM)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     wsm_extract(l0151!isl, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0151!isl, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0151!isl, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0151!isl, 0x3F, and, $l0000!work_in1[2], >>26]
.1246 00D939708120 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    beq[M980_no_ctm_buffer#], defer[3]
.1247 008500B629FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[l0151!qnum, 0xFF, and, $l0000!work_in1[4], >>16]
.1248 009BC0F80E0B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                    alu_shf[l0151!bitmap_lo, l0000!g_bitmap_base, or, l0151!qnum, <<4]
.1249 008488021902 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                    alu_shf[$l0151!ticket, l0000!g_seq_mask, and, $l0000!work_in1[0], >>8]
.1250 008A80D03203 common_code
	                    alu_shf[l0151!addr_hi, l0000!g_pkt_free_hi, or, l0151!isl, <<24]
.1251 009500E81188 common_code
	                    alu_shf[l0151!addr_lo, l0000!g_pkt_num_mask, and, $l0000!work_in1[2], >>16]
.1252 005200003B0D common_code
	                    mem[packet_free, --, l0151!addr_hi, <<8, l0151!addr_lo]
.1253 104B80003F20 common_code
	                M980_no_ctm_buffer#:
	                    mem[release_ticket, $l0151!ticket, 0, l0151!bitmap_lo, 1], sig_done[l0151!ticket_sig]
.1254 009830E09E89 common_code
	.macro_ref                     wsm_extract(l0151!addr_lo, $l0000!work_in1, SB_WQ_MUBUF)
	.macro_ref                         wsm_extract(l0151!addr_lo, $l0000!work_in1, SB_WQ_MUBUF, 0)
	.macro_ref                             sm_extract(l0151!addr_lo, $l0000!work_in1[3], SB_WQ_MUBUF, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_MUBUF)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0151!addr_lo, $l0000!work_in1[3], and~, 7, <<29]
.1255 00E000200300 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    ctx_arb[l0151!ticket_sig, l0151!ticket_sig+1], defer[2]
.1256 009BC0B8A20B common_code
	                    alu_shf[l0151!cntr_addr_lo, 8, or, l0151!qnum, <<4]
.1257 0085D0922523 common_code
	.macro_ref                     wsm_extract(l0151!ring_num, $l0000!work_in1, SB_WQ_BLS)
	.macro_ref                         wsm_extract(l0151!ring_num, $l0000!work_in1, SB_WQ_BLS, 0)
	.macro_ref                             sm_extract(l0151!ring_num, $l0000!work_in1[3], SB_WQ_BLS, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_BLS)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0151!ring_num, 0x3, and, $l0000!work_in1[3], >>29]
.1258 008B02081609 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu_shf[-- , l0000!g_blm_iref, or, l0151!ring_num, <<16]
.1259 025700003B05 common_code
	                    mem[fast_journal, --, l0000!g_blm_addr_hi, <<8, l0151!addr_lo], indirect_ref
.1260 00C93C0A0020 common_code
	                M980_ticket_ready#:
	                    br=byte[$l0151!ticket, 0, 0, M980_complete_done#]
.1261 00C93C8E00FF common_code
	                    br=byte[$l0151!ticket, 0, 255, M980_ticket_error#]
.1262 008B02020206 common_code
	                    alu_shf[--, l0000!g_add_imm_iref, or, $l0151!ticket, <<16]
.1263 024702082F04 common_code
	                    mem[add_imm, --, l0000!g_send_cntrs_addr_hi, <<8, l0151!cntr_addr_lo,1], indirect_ref
.1264 007938600300 common_code
	#pragma warningdisable:5009
	                M980_complete_done#:
	.macro_ref                     pci_out_pd_request_work($l0000!work_in1[0], l0000!work_sig1)
	                            cls[ring_workq_add_thread, $l0000!work_in1[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                                sig_done[l0000!work_sig1]
.1265 00E148C40020 common_code
	.end_macro_ref                     pci_out_pd_request_work
	#pragma warningdefault:5009
	.macro_ref                     wait_br_next_state(l0000!work_sig2, --, state_e0n2#)
	.macro_ref                         wait_br_next_state(l0000!work_sig2, --, state_e0n2#, --)
	                            .set_sig l0000!work_sig2
	                                    ctx_arb[l0000!work_sig2], br[state_e0n2#]
.1266 00B0C0902701 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M980_ticket_error#:
	                    alu[l0000!g_num_ticket_errors, l0000!g_num_ticket_errors, +, 1]
.1267 00FC17202700 common_code
	                    local_csr_wr[mailbox0, l0000!g_num_ticket_errors]
.1268 00F0003037FF common_code
	.macro_ref                     wsm_extract(l0151!seq, $l0000!work_in1, SB_WQ_SEQ)
	.macro_ref                         wsm_extract(l0151!seq, $l0000!work_in1, SB_WQ_SEQ, 0)
	.macro_ref                             sm_extract(l0151!seq, $l0000!work_in1[0], SB_WQ_SEQ, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_SEQ)
	.end_macro_ref                             __WSM_GET_MASKLEN
	                                    .begin
	                                        .reg l0152!_wsm_mask
	.macro_ref                                         _wsm_loadmask(l0152!_wsm_mask, 0x3FF, 10, 'sm_extract', 0)
	.macro_ref                                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                 _wsm_validate_size
	                                                immed[l0152!_wsm_mask, 0x3FF]
.1269 009480C83586 common_code
	.end_macro_ref                                         _wsm_loadmask
	                                        alu_shf[l0151!seq, l0152!_wsm_mask, and, $l0000!work_in1[0], >>8]
.1270 00FC17603300 common_code
	                                    .end
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    local_csr_wr[mailbox1, l0151!seq]
.1271 00B000EC1F00 common_code
	.macro_ref                     cycle32_sleep(250)
	                    .begin
	                        .reg l0153!tmp_cycle_count l0153!_ixp_future_count_signal_num
	                        .sig l0153!_ixp_future_count_signal_name
	                        .set_sig l0153!_ixp_future_count_signal_name
	                        alu[l0153!_ixp_future_count_signal_num, --, b, 7]
.1272 00FC0C0C0000 common_code
	                        local_csr_rd[timestamp_low]
.1273 00F0000C000B common_code
	                        immed[l0153!tmp_cycle_count, 0]
.1274 00A080BC3C0B common_code
	.macro_ref                             add(l0153!tmp_cycle_count, l0153!tmp_cycle_count, 15)
	.macro_ref                                 alu_op(l0153!tmp_cycle_count, l0153!tmp_cycle_count, +, 15)
	.macro_ref                                             _nfp_alu(l0153!tmp_cycle_count, l0153!tmp_cycle_count, +, 15)
	                                                    alu[l0153!tmp_cycle_count, l0153!tmp_cycle_count, +, 15]
.1275 00E000200080 common_code
	.end_macro_ref                                             _nfp_alu
	.end_macro_ref                                 alu_op
	.end_macro_ref                             add
	                        ctx_arb[l0153!_ixp_future_count_signal_name], defer[2]
.1276 00FC05EC000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                        local_csr_wr[active_ctx_future_count, l0153!tmp_cycle_count]
.1277 00FC07E03B00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                        local_csr_wr[active_future_count_signal, l0153!_ixp_future_count_signal_num]
.1278 104B80003F20 common_code
	                    .end
	.end_macro_ref                     cycle32_sleep
	                    mem[release_ticket, $l0151!ticket, 0, l0151!bitmap_lo, 1], sig_done[l0151!ticket_sig]
.1279 00E13B040300 common_code
	                    ctx_arb[l0151!ticket_sig, l0151!ticket_sig+1], br[M980_ticket_ready#]
.1280 0095A0D2217F common_code
	                .end
	.end_macro_ref                 _complete_packet_dma
	.end_macro_ref             complete_packet_dma
	.end_macro_ref         complete_packet_dma
	    transition_e2n0_e1n0#:
	.macro_ref         complete_packet_dma(1, state_e1n0#, l0000!work_sig0, l0000!dma_sig2)
	M1015#:
	.macro_ref             _complete_packet_dma($l0000!work_in1, l0000!work_sig1, state_e1n0#, l0000!work_sig0, l0000!dma_sig2)
	            .begin
	                .reg l0154!isl
	                .reg l0154!qnum
	                .reg l0154!addr_hi
	                .reg l0154!addr_lo
	                .reg l0154!ring_num
	                .reg l0154!bitmap_lo
	                .reg l0154!cntr_addr_lo
	                .reg l0154!seq
	                .reg $l0154!ticket
	                .sig l0154!ticket_sig
	M1016#:
	.macro_ref                 wsm_extract(l0154!qnum, $l0000!work_in1, SB_WQ_QNUM)
	.macro_ref                     wsm_extract(l0154!qnum, $l0000!work_in1, SB_WQ_QNUM, 0)
	.macro_ref                         sm_extract(l0154!qnum, $l0000!work_in1[4], SB_WQ_QNUM, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_QNUM)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0154!isl, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0154!isl, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0154!isl, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0154!isl, 0x3F, and, $l0000!work_in1[2], >>26]
.1281 00D942308120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M1015_no_ctm_buffer#], defer[3]
.1282 008500E629FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0154!qnum, 0xFF, and, $l0000!work_in1[4], >>16]
.1283 009BC0B80E0E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[l0154!bitmap_lo, l0000!g_bitmap_base, or, l0154!qnum, <<4]
.1284 008488021902 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[$l0154!ticket, l0000!g_seq_mask, and, $l0000!work_in1[0], >>8]
.1285 008A80A03603 common_code
	                alu_shf[l0154!addr_hi, l0000!g_pkt_free_hi, or, l0154!isl, <<24]
.1286 009500F81188 common_code
	                alu_shf[l0154!addr_lo, l0000!g_pkt_num_mask, and, $l0000!work_in1[2], >>16]
.1287 005200003F0A common_code
	                mem[packet_free, --, l0154!addr_hi, <<8, l0154!addr_lo]
.1288 104B80002F20 common_code
	            M1015_no_ctm_buffer#:
	                mem[release_ticket, $l0154!ticket, 0, l0154!bitmap_lo, 1], sig_done[l0154!ticket_sig]
.1289 009830F09E89 common_code
	.macro_ref                 wsm_extract(l0154!addr_lo, $l0000!work_in1, SB_WQ_MUBUF)
	.macro_ref                     wsm_extract(l0154!addr_lo, $l0000!work_in1, SB_WQ_MUBUF, 0)
	.macro_ref                         sm_extract(l0154!addr_lo, $l0000!work_in1[3], SB_WQ_MUBUF, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_MUBUF)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0154!addr_lo, $l0000!work_in1[3], and~, 7, <<29]
.1290 00E000200300 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                ctx_arb[l0154!ticket_sig, l0154!ticket_sig+1], defer[2]
.1291 009BC0C8A20E common_code
	                alu_shf[l0154!cntr_addr_lo, 8, or, l0154!qnum, <<4]
.1292 0085D0922523 common_code
	.macro_ref                 wsm_extract(l0154!ring_num, $l0000!work_in1, SB_WQ_BLS)
	.macro_ref                     wsm_extract(l0154!ring_num, $l0000!work_in1, SB_WQ_BLS, 0)
	.macro_ref                         sm_extract(l0154!ring_num, $l0000!work_in1[3], SB_WQ_BLS, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_BLS)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0154!ring_num, 0x3, and, $l0000!work_in1[3], >>29]
.1293 008B02081609 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu_shf[-- , l0000!g_blm_iref, or, l0154!ring_num, <<16]
.1294 025700003F05 common_code
	                mem[fast_journal, --, l0000!g_blm_addr_hi, <<8, l0154!addr_lo], indirect_ref
.1295 00C944CA0020 common_code
	            M1015_ticket_ready#:
	                br=byte[$l0154!ticket, 0, 0, M1015_complete_done#]
.1296 00C9454E00FF common_code
	                br=byte[$l0154!ticket, 0, 255, M1015_ticket_error#]
.1297 008B02020206 common_code
	                alu_shf[--, l0000!g_add_imm_iref, or, $l0154!ticket, <<16]
.1298 024702083304 common_code
	                mem[add_imm, --, l0000!g_send_cntrs_addr_hi, <<8, l0154!cntr_addr_lo,1], indirect_ref
.1299 007938600300 common_code
	#pragma warningdisable:5009
	            M1015_complete_done#:
	.macro_ref                 pci_out_pd_request_work($l0000!work_in1[0], l0000!work_sig1)
	                        cls[ring_workq_add_thread, $l0000!work_in1[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                            sig_done[l0000!work_sig1]
.1300 00E174850042 common_code
	.end_macro_ref                 pci_out_pd_request_work
	#pragma warningdefault:5009
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig2, state_e1n0#)
	.macro_ref                     wait_br_next_state(l0000!work_sig0, l0000!dma_sig2, state_e1n0#, --)
	                        .set_sig l0000!work_sig0
	                            .set_sig l0000!dma_sig2
	                                ctx_arb[l0000!work_sig0, l0000!dma_sig2], any, br[state_e1n0#]
.1301 00B0C0902701 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M1015_ticket_error#:
	                alu[l0000!g_num_ticket_errors, l0000!g_num_ticket_errors, +, 1]
.1302 00FC17202700 common_code
	                local_csr_wr[mailbox0, l0000!g_num_ticket_errors]
.1303 00F000303BFF common_code
	.macro_ref                 wsm_extract(l0154!seq, $l0000!work_in1, SB_WQ_SEQ)
	.macro_ref                     wsm_extract(l0154!seq, $l0000!work_in1, SB_WQ_SEQ, 0)
	.macro_ref                         sm_extract(l0154!seq, $l0000!work_in1[0], SB_WQ_SEQ, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_SEQ)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0155!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0155!_wsm_mask, 0x3FF, 10, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0155!_wsm_mask, 0x3FF]
.1304 009480D83986 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0154!seq, l0155!_wsm_mask, and, $l0000!work_in1[0], >>8]
.1305 00FC17603700 common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                local_csr_wr[mailbox1, l0154!seq]
.1306 00B000FC1F00 common_code
	.macro_ref                 cycle32_sleep(250)
	                .begin
	                    .reg l0156!tmp_cycle_count l0156!_ixp_future_count_signal_num
	                    .sig l0156!_ixp_future_count_signal_name
	                    .set_sig l0156!_ixp_future_count_signal_name
	                    alu[l0156!_ixp_future_count_signal_num, --, b, 7]
.1307 00FC0C0C0000 common_code
	                    local_csr_rd[timestamp_low]
.1308 00F0000C000F common_code
	                    immed[l0156!tmp_cycle_count, 0]
.1309 00A080FC3C0F common_code
	.macro_ref                         add(l0156!tmp_cycle_count, l0156!tmp_cycle_count, 15)
	.macro_ref                             alu_op(l0156!tmp_cycle_count, l0156!tmp_cycle_count, +, 15)
	.macro_ref                                         _nfp_alu(l0156!tmp_cycle_count, l0156!tmp_cycle_count, +, 15)
	                                                alu[l0156!tmp_cycle_count, l0156!tmp_cycle_count, +, 15]
.1310 00E000200080 common_code
	.end_macro_ref                                         _nfp_alu
	.end_macro_ref                             alu_op
	.end_macro_ref                         add
	                    ctx_arb[l0156!_ixp_future_count_signal_name], defer[2]
.1311 00FC05EC000F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_ctx_future_count, l0156!tmp_cycle_count]
.1312 00FC07E03F00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_future_count_signal, l0156!_ixp_future_count_signal_num]
.1313 104B80002F20 common_code
	                .end
	.end_macro_ref                 cycle32_sleep
	                mem[release_ticket, $l0154!ticket, 0, l0154!bitmap_lo, 1], sig_done[l0154!ticket_sig]
.1314 00E143C40300 common_code
	                ctx_arb[l0154!ticket_sig, l0154!ticket_sig+1], br[M1015_ticket_ready#]
.1315 00BAC8A22B01 common_code
	            .end
	.end_macro_ref             _complete_packet_dma
	.end_macro_ref         complete_packet_dma
	    state_e0n2#:
	    transition_e0n2_e1n0#:
	.macro_ref         issue_packet_dma(2, state_e1n0#, l0000!work_sig0, l0000!dma_sig2)
	M1050#:
	            .io_completed l0000!work_sig2
	            .io_completed l0000!dma_sig2
	.macro_ref             _issue_packet_dma($l0000!work_in2, $l0000!dma_out2, $l0000!dma_out2x, l0000!dma_sig2, state_e1n0#, l0000!work_sig0, l0000!dma_sig2)
	            .begin
	                .reg l0157!word
	                .reg l0157!tmp
	                .reg l0157!tmp2
	                .reg l0157!isl
	                .reg l0157!ovfl
	                .reg l0157!len
	                .reg l0157!addr_lo
	                .reg l0157!pcie_hi_word
	                .reg l0157!pcie_lo_start
	                .reg l0157!mu_lo_start
	                .reg l0157!ctm_bytes
	                .reg l0157!split_len
	                .io_completed $l0000!work_in2[0]
	                .io_completed $l0000!work_in2[1]
	                .io_completed $l0000!work_in2[2]
	                .io_completed $l0000!work_in2[3]
	                .io_completed $l0000!work_in2[4]
	                .io_completed $l0000!dma_out2[0]
	                .io_completed $l0000!dma_out2[1]
	                .io_completed $l0000!dma_out2[2]
	                .io_completed $l0000!dma_out2[3]
	                .io_completed $l0000!dma_out2x[0]
	                .io_completed $l0000!dma_out2x[1]
	                .io_completed $l0000!dma_out2x[2]
	                .io_completed $l0000!dma_out2x[3]
	                alu[@l0000!ndequeued, @l0000!ndequeued, -, 1]
.1316 00D972408129 common_code
	                blt[M1051_add_wq_credits#]
.1317 00D16F022C20 common_code
	            M1051_start_packet_dma#:
	.macro_ref                 wsm_test_bit_clr($l0000!work_in2, SB_WQ_ENABLED, M1051_no_dma#)
	M1052#:
	.macro_ref                     wsm_test_bit_clr($l0000!work_in2, SB_WQ_ENABLED, M1051_no_dma#, --)
	M1053#:
	.macro_ref                         sm_test_bit_clr($l0000!work_in2[0], SB_WQ_ENABLED, M1051_no_dma#, --)
	M1054#:
	                                br_bclr[$l0000!work_in2[0], 31, M1051_no_dma#]
.1318 00D14D42343A common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	.macro_ref                 wsm_test_bit_clr($l0000!work_in2, SB_WQ_CTM_ONLY, M1051_not_ctm_only#)
	.macro_ref                     wsm_test_bit_clr($l0000!work_in2, SB_WQ_CTM_ONLY, M1051_not_ctm_only#, --)
	.macro_ref                         sm_test_bit_clr($l0000!work_in2[2], SB_WQ_CTM_ONLY, M1051_not_ctm_only#, --)
	                                br_bclr[$l0000!work_in2[2], 25, M1051_not_ctm_only#]
.1319 00B440F63401 common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	            M1051_ctm_only#:
	                alu[l0157!word, $l0000!work_in2[2], and, l0000!g_dma_word0_mask]
.1320 008A1C183E21 common_code
	                alu_shf[$l0000!dma_out2[0], l0157!word, or, 1, <<31]
.1321 0085A0F2357F common_code
	.macro_ref                 wsm_extract(l0157!word, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0157!word, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0157!word, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0157!word, 0x3F, and, $l0000!work_in2[2], >>26]
.1322 00BA00F0040F common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0157!word, l0157!word, or, l0000!g_dma_word1_vals]
.1323 008B2C283E26 common_code
	                alu_shf[$l0000!dma_out2[1], l0157!word, or, 6, <<14]
.1324 00A01C363300 common_code
	                    alu[$l0000!dma_out2[2], --, b, $l0000!work_in2[1]]
.1325 01A4C0F0098B common_code
	                alu[l0157!word, l0000!g_dma_word3_vals, +8, $l0000!work_in2[0]], no_cc
.1326 009570B62DFF common_code
	.macro_ref                 wsm_extract(l0157!tmp, $l0000!work_in2,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0157!tmp, $l0000!work_in2, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0157!tmp, $l0000!work_in2[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0157!tmp, 0xFF, and, $l0000!work_in2[0], >>23]
.1327 008B40F02E0F common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0157!word, PCIE_DMA_RID, l0157!tmp)
	.macro_ref                     sm_set_noclr(l0157!word, PCIE_DMA_RID, l0157!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0157!word, l0157!word, PCIE_DMA_RID, l0157!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[l0157!word, l0157!word, or, l0157!tmp, <<12]
.1328 00C00318348F common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0157!len, $l0000!work_in2, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0157!len, $l0000!work_in2, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0157!len, $l0000!work_in2[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                ld_field_w_clr[l0157!len, 0011, $l0000!work_in2[4],0]
.1329 040F07101F08 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	#pragma warningdisable:5117
	#pragma warningdisable:4701
	#pragma warningdisable:5009
	                pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1330 00E174A50042 common_code
	#pragma warningdefault:5117
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig2, state_e1n0#, defer[2])
	                    .set_sig l0000!work_sig0
	                        .set_sig l0000!dma_sig2
	                            ctx_arb[l0000!work_sig0, l0000!dma_sig2], any, br[state_e1n0#], defer[2]
.1331 00BAC0D03701 common_code
	.end_macro_ref                 wait_br_next_state
	                alu[l0157!len, l0157!len, -, 1]
.1332 008ACC40360F common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out2[3], l0157!word, PCIE_DMA_XLEN, l0157!len, 1)
	                .begin
	.macro_ref                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                     _wsm_validate_size
	                    alu_shf[$l0000!dma_out2[3], l0157!word, or, l0157!len, <<20]
.1333 00A000A63300 common_code
	                .end
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdefault:4701
	#pragma warningdefault:5009
	            M1051_not_ctm_only#:
	                    alu[l0157!pcie_lo_start, --, b, $l0000!work_in2[1]]
.1334 01B4C0D0098B common_code
	                alu[l0157!pcie_hi_word, l0000!g_dma_word3_vals, +8, $l0000!work_in2[0]], no_cc
.1335 0095A0C2357F common_code
	.macro_ref                 wsm_extract(l0157!tmp, $l0000!work_in2,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0157!tmp, $l0000!work_in2, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0157!tmp, $l0000!work_in2[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0157!pcie_hi_word, PCIE_DMA_RID, l0157!tmp)
	.macro_ref                     sm_set_noclr(l0157!pcie_hi_word, PCIE_DMA_RID, l0157!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0157!pcie_hi_word, l0157!pcie_hi_word, PCIE_DMA_RID, l0157!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0157!len, $l0000!work_in2, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0157!len, $l0000!work_in2, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0157!len, $l0000!work_in2[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0157!isl, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0157!isl, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0157!isl, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0157!isl, 0x3F, and, $l0000!work_in2[2], >>26]
.1336 00D961B08120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M1051_mu_only_dma#], defer[3]
.1337 008570E62DFF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0157!tmp, 0xFF, and, $l0000!work_in2[0], >>23]
.1338 009B40D8360E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu_shf[l0157!pcie_hi_word, l0157!pcie_hi_word, or, l0157!tmp, <<12]
.1339 00C003123C0B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field_w_clr[l0157!len, 0011, $l0000!work_in2[4],0]
.1340 00F000102F00 common_code
	            M1051_ctm_and_mu_dma#:
	.macro_ref                 move(l0157!tmp, 256)
	M1099#:
	.macro_ref                         immed32(l0157!tmp, 256)
	M1100#:
	                                immed[l0157!tmp, 256]
.1341 0094E0C23523 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	.macro_ref                 wsm_extract(l0157!tmp2, $l0000!work_in2, SB_WQ_CTM_SPLIT)
	.macro_ref                     wsm_extract(l0157!tmp2, $l0000!work_in2, SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         sm_extract(l0157!tmp2, $l0000!work_in2[2], SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_SPLIT)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0157!tmp2, 0x3, and, $l0000!work_in2[2], >>14]
.1342 00AA70003300 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[--, l0157!tmp2, or, 0]
.1343 009000B02E00 common_code
	                alu_shf[l0157!split_len, --, b, l0157!tmp, <<indirect]
.1344 00F001F033FF common_code
	.macro_ref                 wsm_extract(l0157!tmp, $l0000!work_in2, SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0157!tmp, $l0000!work_in2, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0157!tmp, $l0000!work_in2[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0161!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0161!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0161!_wsm_mask, 0x1FFF]
.1345 008400E8308D common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0157!tmp, l0161!_wsm_mask, and, $l0000!work_in2[2], >>0]
.1346 00BAC0F02C0E common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0157!ctm_bytes, l0157!split_len, -, l0157!tmp]
.1347 00D96180812A common_code
	                ble[M1051_mu_only_dma#]
.1348 00A440F63401 common_code
	                alu[l0157!word, $l0000!work_in2[2], and, l0000!g_dma_word0_mask]
.1349 008A1C10860F common_code
	                alu_shf[$l0000!dma_out2[0], l0157!word, or, 1, <<31]
.1350 0085A0F2357F common_code
	.macro_ref                 wsm_extract(l0157!word, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0157!word, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0157!word, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0157!word, 0x3F, and, $l0000!work_in2[2], >>26]
.1351 00AA00FE000F common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0157!word, l0157!word, or, 0x80]                   ; Direct access
.1352 008B8C219A0F common_code
	                alu_shf[$l0000!dma_out2[1], l0157!word, or, 38, <<8]
.1353 00A05C3C000A common_code
	                alu[$l0000!dma_out2[2], --, b, l0157!pcie_lo_start]
.1354 00AAC0E03F01 common_code
	                alu[l0157!tmp, l0157!ctm_bytes, -, 1]
.1355 008ACC48360E common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out2[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp)
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp, 0)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2[3], l0157!pcie_hi_word, or, l0157!tmp, <<20]
.1356 040F07101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdisable:5117
	                pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1357 00AA80B03C0B common_code
	#pragma warningdefault:5117
	                alu[l0157!len, l0157!len, -, l0157!ctm_bytes]
.1358 00D97080812A common_code
	                ble[M1051_ctm_only_not_flagged#]
.1359 008150F23A00 common_code
	                alu_shf[l0157!mu_lo_start, --, b, $l0000!work_in2[3], <<11]
.1360 00A080F02C0F common_code
	                alu[l0157!mu_lo_start, l0157!mu_lo_start, +, l0157!split_len]
.1361 00A05C5C000F common_code
	.macro_ref                 move($l0000!dma_out2x[0], l0157!mu_lo_start)
	                        alu[$l0000!dma_out2x[0], --, b, l0157!mu_lo_start]
.1362 00B000E00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out2x, $l0000!work_in2, l0000!dma_sig2)
	                .begin
	                    .reg l0163!word
	                        alu[l0163!word, --, b, l0000!g_dma_word1_vals]
.1363 00A080A03C0A common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	                alu[l0157!pcie_lo_start, l0157!pcie_lo_start, +, l0157!ctm_bytes]
.1364 00B8C0D03700 common_code
	                alu[l0157!pcie_hi_word, l0157!pcie_hi_word, +carry, 0]
.1365 00AAB000200B common_code
	.macro_ref                 move($l0000!dma_out2x[2], l0157!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0157!len,-,l0000!g_dma_max]
.1366 00D957B0812B common_code
	                bgt[l061_01#], defer[3]
.1367 00C15108398E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        ld_field[l0163!word, 0001, $l0000!work_in2[3], >>21]
.1368 008B2C683A26 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        alu_shf[$l0000!dma_out2x[1], l0163!word, or, 6, <<14]
.1369 00A05C7C000A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out2x[2], --, b, l0157!pcie_lo_start]
.1370 00AA80EC040B common_code
	                    alu[l0157!tmp, l0157!len, -, 1]
.1371 008ACC88360E common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2x[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2x[3], l0157!pcie_hi_word, or, l0157!tmp, <<20]
.1372 040F07501F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out2x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1373 00D961408038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l061_end#]
.1374 00C003123C0E common_code
	                l061_01#: 
	.macro_ref                     wsm_extract(l0157!tmp, $l0000!work_in2, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0157!tmp, $l0000!work_in2, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0157!tmp, $l0000!work_in2[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    ld_field_w_clr[l0157!tmp, 0011, $l0000!work_in2[4],0]
.1375 00F002803B00 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    .if (tmp > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0165!__immed_big_const
	                    immed[l0165!__immed_big_const,10240]
.1376 00AAB000380E common_code
	                    alu[--,l0157!tmp,-,l0165!__immed_big_const]
.1377 00D95A40812A common_code
	                    ble[l062_01#]
.1378 00F000802F06 common_code
	                    .endlocal
	                        .while (1)
	                        l063_start#: 
	.macro_ref                             move(l0157!tmp, 0x806)
	.macro_ref                                     immed32(l0157!tmp, 0x806)
	                                            immed[l0157!tmp, 2054]
.1379 00FC17202F00 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0157!tmp]
.1380 00FC176C018D common_code
	                            local_csr_wr[mailbox1, $l0000!work_in2[2]]
.1381 00FC17AC018E common_code
	                            local_csr_wr[mailbox2, $l0000!work_in2[3]]
.1382 00FC17EC018F common_code
	                            local_csr_wr[mailbox3, $l0000!work_in2[4]]
.1383 00E000020000 common_code
	                            ctx_arb[bpt]
.1384 00D958808038 common_code
	                        .endw
	                        l063_cont#: 
	                        br[l063_start#]
.1385 00AAC0E02301 common_code
	                        .unreachable
	                    .endif
	                    l062_01#: 
	                    l062_end#: 
	                    alu[l0157!tmp, l0000!g_dma_max, -, 1]
.1386 008ACC88360E common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2x[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2x[3], l0157!pcie_hi_word, or, l0157!tmp, <<20]
.1387 040F07501F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out2x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1388 00AA80B0200B common_code
	#pragma warningdefault:5117
	                    alu[l0157!len, l0157!len, -, l0000!g_dma_max]
.1389 00A080F0200F common_code
	                    alu[l0157!mu_lo_start, l0157!mu_lo_start, +, l0000!g_dma_max]
.1390 00A080A0200A common_code
	                    alu[l0157!pcie_lo_start, l0157!pcie_lo_start, +, l0000!g_dma_max]
.1391 00B8C0D03700 common_code
	                    alu[l0157!pcie_hi_word, l0157!pcie_hi_word, +carry, 0]
.1392 00E000000040 common_code
	                    .repeat
	                    l064_start#: 
	                        ctx_arb[l0000!dma_sig2]
.1393 00A05C1C000F common_code
	                        .io_completed $l0000!dma_out2[0]
	                        .io_completed $l0000!dma_out2[1]
	                        .io_completed $l0000!dma_out2[2]
	                        .io_completed $l0000!dma_out2[3]
	                        .io_completed $l0000!dma_out2x[0]
	                        .io_completed $l0000!dma_out2x[1]
	                        .io_completed $l0000!dma_out2x[2]
	                        .io_completed $l0000!dma_out2x[3]
	                        alu[$l0000!dma_out2[0], --, b, l0157!mu_lo_start]
.1394 00B000F00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out2, $l0000!work_in2, l0000!dma_sig2)
	                        .begin
	                            .reg l0167!word
	                                alu[l0167!word, --, b, l0000!g_dma_word1_vals]
.1395 00AAB000200B common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0157!len,-,l0000!g_dma_max]
.1396 00D95F30812B common_code
	                        bgt[l065_01#], defer[3]
.1397 00C151083D8E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0167!word, 0001, $l0000!work_in2[3], >>21]
.1398 008B2C283E26 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out2[1], l0167!word, or, 6, <<14]
.1399 00A05C3C000A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out2[2], --, b, l0157!pcie_lo_start]
.1400 00AA80EC040B common_code
	                            alu[l0157!tmp, l0157!len, -, 1]
.1401 00D960A08038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out2[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0157!len, 0)
	.macro_ref                                     immed32(l0157!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l065_end#], defer[2]
.1402 008ACC48360E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out2[3], l0157!pcie_hi_word, or, l0157!tmp, <<20]
.1403 00F0000C000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0157!len, 0]
.1404 00AAC0E02301 common_code
	                        l065_01#: 
	                            alu[l0157!tmp, l0000!g_dma_max, -, 1]
.1405 008ACC48360E common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out2[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out2[3], l0157!pcie_hi_word, or, l0157!tmp, <<20]
.1406 00AA80B0200B common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0157!len, l0157!len, -, l0000!g_dma_max]
.1407 00A080F0200F common_code
	                            alu[l0157!mu_lo_start, l0157!mu_lo_start, +, l0000!g_dma_max]
.1408 00A080A0200A common_code
	                            alu[l0157!pcie_lo_start, l0157!pcie_lo_start, +, l0000!g_dma_max]
.1409 00B8C0D03700 common_code
	                            alu[l0157!pcie_hi_word, l0157!pcie_hi_word, +carry, 0]
.1410 040F07101F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l065_end#: 
	                        pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1411 00A0700C000B common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l064_cont#: 
	                    alu[--,--,b,l0157!len]
.1412 00D95C008121 common_code
	                    bne[l064_start#]
.1413 00E174850042 common_code
	                .endif
	                l061_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig2, state_e1n0#)
	.macro_ref                     wait_br_next_state(l0000!work_sig0, l0000!dma_sig2, state_e1n0#, --)
	                        .set_sig l0000!work_sig0
	                            .set_sig l0000!dma_sig2
	                                ctx_arb[l0000!work_sig0, l0000!dma_sig2], any, br[state_e1n0#]
.1414 009150E23A00 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M1051_mu_only_dma#:
	                alu_shf[l0157!mu_lo_start, --, b, $l0000!work_in2[3], <<11]
.1415 00F001F03FFF common_code
	.macro_ref                 wsm_extract(l0157!tmp, $l0000!work_in2,  SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0157!tmp, $l0000!work_in2, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0157!tmp, $l0000!work_in2[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0170!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0170!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0170!_wsm_mask, 0x1FFF]
.1416 008400E83C8D common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0157!tmp, l0170!_wsm_mask, and, $l0000!work_in2[2], >>0]
.1417 00A0C0F0380E common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0157!mu_lo_start, l0157!mu_lo_start, +, l0157!tmp]
.1418 00A05C1C000F common_code
	.macro_ref                 move($l0000!dma_out2[0], l0157!mu_lo_start)
	                        alu[$l0000!dma_out2[0], --, b, l0157!mu_lo_start]
.1419 00B000B00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out2, $l0000!work_in2, l0000!dma_sig2)
	                .begin
	                    .reg l0171!word
	                        alu[l0171!word, --, b, l0000!g_dma_word1_vals]
.1420 00AAB000200B common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	.macro_ref                 move($l0000!dma_out2[2], l0157!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0157!len,-,l0000!g_dma_max]
.1421 00D96570812B common_code
	                bgt[l066_01#], defer[3]
.1422 00C151082D8E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        ld_field[l0171!word, 0001, $l0000!work_in2[3], >>21]
.1423 008B2C282E26 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu_shf[$l0000!dma_out2[1], l0171!word, or, 6, <<14]
.1424 00A05C3C000A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out2[2], --, b, l0157!pcie_lo_start]
.1425 00AA80EC040B common_code
	                    alu[l0157!tmp, l0157!len, -, 1]
.1426 008ACC48360E common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2[3], l0157!pcie_hi_word, or, l0157!tmp, <<20]
.1427 040F07101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1428 00D96EC08038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l066_end#]
.1429 00F002803300 common_code
	                    .if (len > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0173!__immed_big_const
	                l066_01#: 
	                    immed[l0173!__immed_big_const,10240]
.1430 00AAB000300B common_code
	                    alu[--,l0157!len,-,l0173!__immed_big_const]
.1431 00D967C0812A common_code
	                    ble[l067_01#]
.1432 00F000802F06 common_code
	                    .endlocal
	                        .while (1)
	                        l068_start#: 
	.macro_ref                             move(l0157!tmp, 0x806)
	.macro_ref                                     immed32(l0157!tmp, 0x806)
	                                            immed[l0157!tmp, 2054]
.1433 00FC17202F00 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0157!tmp]
.1434 00FC176C018D common_code
	                            local_csr_wr[mailbox1, $l0000!work_in2[2]]
.1435 00FC17AC018E common_code
	                            local_csr_wr[mailbox2, $l0000!work_in2[3]]
.1436 00FC17EC018F common_code
	                            local_csr_wr[mailbox3, $l0000!work_in2[4]]
.1437 00E000020000 common_code
	                            ctx_arb[bpt]
.1438 00D966008038 common_code
	                        .endw
	                        l068_cont#: 
	                        br[l068_start#]
.1439 00AAC0E02301 common_code
	                        .unreachable
	                    .endif
	                    l067_01#: 
	                    l067_end#: 
	                    alu[l0157!tmp, l0000!g_dma_max, -, 1]
.1440 008ACC48360E common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out2[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out2[3], l0157!pcie_hi_word, or, l0157!tmp, <<20]
.1441 040F07101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1442 00AA80B0200B common_code
	#pragma warningdefault:5117
	                    alu[l0157!len, l0157!len, -, l0000!g_dma_max]
.1443 00A080F0200F common_code
	                    alu[l0157!mu_lo_start, l0157!mu_lo_start, +, l0000!g_dma_max]
.1444 00A080A0200A common_code
	                    alu[l0157!pcie_lo_start, l0157!pcie_lo_start, +, l0000!g_dma_max]
.1445 00B8C0D03700 common_code
	                    alu[l0157!pcie_hi_word, l0157!pcie_hi_word, +carry, 0]
.1446 00E000000040 common_code
	                    .repeat
	                    l069_start#: 
	                        ctx_arb[l0000!dma_sig2]
.1447 00A05C1C000F common_code
	                        .io_completed $l0000!dma_out2[0]
	                        .io_completed $l0000!dma_out2[1]
	                        .io_completed $l0000!dma_out2[2]
	                        .io_completed $l0000!dma_out2[3]
	                        .io_completed $l0000!dma_out2x[0]
	                        .io_completed $l0000!dma_out2x[1]
	                        .io_completed $l0000!dma_out2x[2]
	                        .io_completed $l0000!dma_out2x[3]
	                        alu[$l0000!dma_out2[0], --, b, l0157!mu_lo_start]
.1448 00B000E00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out2, $l0000!work_in2, l0000!dma_sig2)
	                        .begin
	                            .reg l0175!word
	                                alu[l0175!word, --, b, l0000!g_dma_word1_vals]
.1449 00AAB000200B common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0157!len,-,l0000!g_dma_max]
.1450 00D96CB0812B common_code
	                        bgt[l070_01#], defer[3]
.1451 00C15108398E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0175!word, 0001, $l0000!work_in2[3], >>21]
.1452 008B2C283A26 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out2[1], l0175!word, or, 6, <<14]
.1453 00A05C3C000A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out2[2], --, b, l0157!pcie_lo_start]
.1454 00AA80EC040B common_code
	                            alu[l0157!tmp, l0157!len, -, 1]
.1455 00D96E208038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out2[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0157!len, 0)
	.macro_ref                                     immed32(l0157!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l070_end#], defer[2]
.1456 008ACC48360E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out2[3], l0157!pcie_hi_word, or, l0157!tmp, <<20]
.1457 00F0000C000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0157!len, 0]
.1458 00AAC0E02301 common_code
	                        l070_01#: 
	                            alu[l0157!tmp, l0000!g_dma_max, -, 1]
.1459 008ACC48360E common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out2[3], l0157!pcie_hi_word, PCIE_DMA_XLEN, l0157!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out2[3], l0157!pcie_hi_word, or, l0157!tmp, <<20]
.1460 00AA80B0200B common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0157!len, l0157!len, -, l0000!g_dma_max]
.1461 00A080F0200F common_code
	                            alu[l0157!mu_lo_start, l0157!mu_lo_start, +, l0000!g_dma_max]
.1462 00A080A0200A common_code
	                            alu[l0157!pcie_lo_start, l0157!pcie_lo_start, +, l0000!g_dma_max]
.1463 00B8C0D03700 common_code
	                            alu[l0157!pcie_hi_word, l0157!pcie_hi_word, +carry, 0]
.1464 040F07101F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l070_end#: 
	                        pcie[write_pci, $l0000!dma_out2[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1465 00A0700C000B common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l069_cont#: 
	                    alu[--,--,b,l0157!len]
.1466 00D969808121 common_code
	                    bne[l069_start#]
.1467 00E174850042 common_code
	                .endif
	                l066_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig2, state_e1n0#)
	.macro_ref                     wait_br_next_state(l0000!work_sig0, l0000!dma_sig2, state_e1n0#, --)
	                        .set_sig l0000!work_sig0
	                            .set_sig l0000!dma_sig2
	                                ctx_arb[l0000!work_sig0, l0000!dma_sig2], any, br[state_e1n0#]
.1468 00FC044C0000 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M1051_no_dma#:
	                local_csr_rd[active_ctx_sts]
.1469 00F000002F00 common_code
	                immed[l0157!tmp, 0]
.1470 00B440B02F07 common_code
	                alu[l0157!tmp, l0157!tmp, and, 7]
.1471 00E174A50042 common_code
	.macro_ref                 wait_br_next_state(l0000!work_sig0, l0000!dma_sig2, state_e1n0#)
	.macro_ref                     wait_br_next_state(l0000!work_sig0, l0000!dma_sig2, state_e1n0#, --)
	                        .set_sig l0000!work_sig0
	                            .set_sig l0000!dma_sig2
	                                ctx_arb[l0000!work_sig0, l0000!dma_sig2], defer[2], any, br[state_e1n0#]
.1472 009BD0B82E26 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                alu_shf[l0157!tmp, l0157!tmp, or, 6, <<3]
.1473 00FC10A02F00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                local_csr_wr[same_me_signal, l0157!tmp]
.1474 00F000802F07 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M1051_ctm_only_not_flagged#:
	.macro_ref                 move(l0157!tmp, 0x807)
	M1169#:
	.macro_ref                         immed32(l0157!tmp, 0x807)
	M1170#:
	                                immed[l0157!tmp, 2055]
.1475 00FC17202F00 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                local_csr_wr[mailbox0, l0157!tmp]
.1476 00FC176C018D common_code
	                local_csr_wr[mailbox1, $l0000!work_in2[2]]
.1477 00FC17AC018E common_code
	                local_csr_wr[mailbox2, $l0000!work_in2[3]]
.1478 00FC17EC018F common_code
	                local_csr_wr[mailbox3, $l0000!work_in2[4]]
.1479 00E000020000 common_code
	                ctx_arb[bpt]
.1480 00D970808038 common_code
	                br[M1051_ctm_only_not_flagged#]
.1481 00F000003B00 common_code
	            M1051_add_wq_credits#:
	.macro_ref                 move(l0157!addr_lo, nfd_out_sb_wq_credits0)
	M1171#:
	.macro_ref                         immed32(l0157!addr_lo, nfd_out_sb_wq_credits0)
	M1172#:
	                                    immed[l0157!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.1482 00F440003B00 common_code
	                                    immed_w1[l0157!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.1483 008B02028206 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                alu_shf[--, l0000!g_add_imm_iref, or, 64, <<16]
.1484 124702083B20 common_code
	                mem[add_imm, --, 0, l0157!addr_lo,1], indirect_ref
.1485 00F001803B34 common_code
	.macro_ref                 signal_sb_credits_update()
	                .begin
	                    .reg l0178!addr
	.macro_ref                     move(l0178!addr, 603985972)
	.macro_ref                             immed32(l0178!addr, 603985972)
	                                        immed[l0178!addr, 6196]
.1486 00F442403B00 common_code
	                                        immed_w1[l0178!addr, 9216]
.1487 101C00083B20 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    ct[interthread_signal, --, 0, l0178!addr,1]
.1488 00D949508038 common_code
	                .end
	.end_macro_ref                 signal_sb_credits_update
	                br[M1051_start_packet_dma#], defer[1]
.1489 00F000022B3F common_code
	.macro_ref                 move(@l0000!ndequeued, (64 - 1))
	.macro_ref                         immed32(@l0000!ndequeued, (64 - 1))
	                                immed[@l0000!ndequeued, 63]
.1490 00D9D5C18232 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	            .end
	.end_macro_ref             _issue_packet_dma
	.end_macro_ref         issue_packet_dma
	    state_e1n0#:
	        br_signal[l0000!dma_sig2, transition_e1n0_e0n0#]
.1491 00D9E7404233 common_code
	        br_!signal[l0000!work_sig0, unreached#]
.1492 00BAC8A22B01 common_code
	    transition_e1n0_e2n1#:
	.macro_ref         issue_packet_dma(0, state_e2n1#, l0000!work_sig1, l0000!dma_sig2)
	M1178#:
	            .io_completed l0000!work_sig0
	            .io_completed l0000!dma_sig0
	.macro_ref             _issue_packet_dma($l0000!work_in0, $l0000!dma_out0, $l0000!dma_out0x, l0000!dma_sig0, state_e2n1#, l0000!work_sig1, l0000!dma_sig2)
	            .begin
	                .reg l0179!word
	                .reg l0179!tmp
	                .reg l0179!tmp2
	                .reg l0179!isl
	                .reg l0179!ovfl
	                .reg l0179!len
	                .reg l0179!addr_lo
	                .reg l0179!pcie_hi_word
	                .reg l0179!pcie_lo_start
	                .reg l0179!mu_lo_start
	                .reg l0179!ctm_bytes
	                .reg l0179!split_len
	                .io_completed $l0000!work_in0[0]
	                .io_completed $l0000!work_in0[1]
	                .io_completed $l0000!work_in0[2]
	                .io_completed $l0000!work_in0[3]
	                .io_completed $l0000!work_in0[4]
	                .io_completed $l0000!dma_out0[0]
	                .io_completed $l0000!dma_out0[1]
	                .io_completed $l0000!dma_out0[2]
	                .io_completed $l0000!dma_out0[3]
	                .io_completed $l0000!dma_out0x[0]
	                .io_completed $l0000!dma_out0x[1]
	                .io_completed $l0000!dma_out0x[2]
	                .io_completed $l0000!dma_out0x[3]
	                alu[@l0000!ndequeued, @l0000!ndequeued, -, 1]
.1493 00D99E808129 common_code
	                blt[M1179_add_wq_credits#]
.1494 00D19B420420 common_code
	            M1179_start_packet_dma#:
	.macro_ref                 wsm_test_bit_clr($l0000!work_in0, SB_WQ_ENABLED, M1179_no_dma#)
	M1180#:
	.macro_ref                     wsm_test_bit_clr($l0000!work_in0, SB_WQ_ENABLED, M1179_no_dma#, --)
	M1181#:
	.macro_ref                         sm_test_bit_clr($l0000!work_in0[0], SB_WQ_ENABLED, M1179_no_dma#, --)
	M1182#:
	                                br_bclr[$l0000!work_in0[0], 31, M1179_no_dma#]
.1495 00D179820C3A common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	.macro_ref                 wsm_test_bit_clr($l0000!work_in0, SB_WQ_CTM_ONLY, M1179_not_ctm_only#)
	.macro_ref                     wsm_test_bit_clr($l0000!work_in0, SB_WQ_CTM_ONLY, M1179_not_ctm_only#, --)
	.macro_ref                         sm_test_bit_clr($l0000!work_in0[2], SB_WQ_CTM_ONLY, M1179_not_ctm_only#, --)
	                                br_bclr[$l0000!work_in0[2], 25, M1179_not_ctm_only#]
.1496 00B440F60C01 common_code
	.end_macro_ref                         sm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.end_macro_ref                 wsm_test_bit_clr
	            M1179_ctm_only#:
	                alu[l0179!word, $l0000!work_in0[2], and, l0000!g_dma_word0_mask]
.1497 008A18183E21 common_code
	                alu_shf[$l0000!dma_out0[0], l0179!word, or, 1, <<31]
.1498 0085A0A20D7F common_code
	.macro_ref                 wsm_extract(l0179!word, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0179!word, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0179!word, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0179!word, 0x3F, and, $l0000!work_in0[2], >>26]
.1499 00BA00F0040A common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0179!word, l0179!word, or, l0000!g_dma_word1_vals]
.1500 008B28283E22 common_code
	                alu_shf[$l0000!dma_out0[1], l0179!word, or, 2, <<14]
.1501 00A018360B00 common_code
	                    alu[$l0000!dma_out0[2], --, b, $l0000!work_in0[1]]
.1502 01A4C0A00981 common_code
	                alu[l0179!word, l0000!g_dma_word3_vals, +8, $l0000!work_in0[0]], no_cc
.1503 009570D605FF common_code
	.macro_ref                 wsm_extract(l0179!tmp, $l0000!work_in0,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0179!tmp, $l0000!work_in0, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0179!tmp, $l0000!work_in0[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0179!tmp, 0xFF, and, $l0000!work_in0[0], >>23]
.1504 008B40A0360A common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0179!word, PCIE_DMA_RID, l0179!tmp)
	.macro_ref                     sm_set_noclr(l0179!word, PCIE_DMA_RID, l0179!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0179!word, l0179!word, PCIE_DMA_RID, l0179!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[l0179!word, l0179!word, or, l0179!tmp, <<12]
.1505 00C003183085 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0179!len, $l0000!work_in0, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0179!len, $l0000!work_in0, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0179!len, $l0000!work_in0[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                ld_field_w_clr[l0179!len, 0011, $l0000!work_in0[4],0]
.1506 040F06101F08 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	#pragma warningdisable:5117
	#pragma warningdisable:4701
	#pragma warningdisable:5009
	                pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1507 00E1A0E50048 common_code
	#pragma warningdefault:5117
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig2, state_e2n1#, defer[2])
	                    .set_sig l0000!work_sig1
	                        .set_sig l0000!dma_sig2
	                            ctx_arb[l0000!work_sig1, l0000!dma_sig2], any, br[state_e2n1#], defer[2]
.1508 00BAC0C03301 common_code
	.end_macro_ref                 wait_br_next_state
	                alu[l0179!len, l0179!len, -, 1]
.1509 008AC840320A common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out0[3], l0179!word, PCIE_DMA_XLEN, l0179!len, 1)
	                .begin
	.macro_ref                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                     _wsm_validate_size
	                    alu_shf[$l0000!dma_out0[3], l0179!word, or, l0179!len, <<20]
.1510 00A000D60B00 common_code
	                .end
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdefault:4701
	#pragma warningdefault:5009
	            M1179_not_ctm_only#:
	                    alu[l0179!pcie_lo_start, --, b, $l0000!work_in0[1]]
.1511 01B4C0C00981 common_code
	                alu[l0179!pcie_hi_word, l0000!g_dma_word3_vals, +8, $l0000!work_in0[0]], no_cc
.1512 0095A0F20D7F common_code
	.macro_ref                 wsm_extract(l0179!tmp, $l0000!work_in0,  SB_WQ_RID)
	.macro_ref                     wsm_extract(l0179!tmp, $l0000!work_in0, SB_WQ_RID, 0)
	.macro_ref                         sm_extract(l0179!tmp, $l0000!work_in0[0], SB_WQ_RID, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 sm_set_noclr(l0179!pcie_hi_word, PCIE_DMA_RID, l0179!tmp)
	.macro_ref                     sm_set_noclr(l0179!pcie_hi_word, PCIE_DMA_RID, l0179!tmp, 0)
	.macro_ref                         sm_set_noclr_to(l0179!pcie_hi_word, l0179!pcie_hi_word, PCIE_DMA_RID, l0179!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr
	.end_macro_ref                 sm_set_noclr
	.macro_ref                 wsm_extract(l0179!len, $l0000!work_in0, SB_WQ_DATALEN)
	.macro_ref                     wsm_extract(l0179!len, $l0000!work_in0, SB_WQ_DATALEN, 0)
	.macro_ref                         sm_extract(l0179!len, $l0000!work_in0[4], SB_WQ_DATALEN, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0179!isl, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0179!isl, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0179!isl, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0179!isl, 0x3F, and, $l0000!work_in0[2], >>26]
.1513 00D98DF08120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M1179_mu_only_dma#], defer[3]
.1514 008570F605FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0179!tmp, 0xFF, and, $l0000!work_in0[0], >>23]
.1515 009B40C8320F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu_shf[l0179!pcie_hi_word, l0179!pcie_hi_word, or, l0179!tmp, <<12]
.1516 00C00312140C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field_w_clr[l0179!len, 0011, $l0000!work_in0[4],0]
.1517 00F000103700 common_code
	            M1179_ctm_and_mu_dma#:
	.macro_ref                 move(l0179!tmp, 256)
	M1227#:
	.macro_ref                         immed32(l0179!tmp, 256)
	M1228#:
	                                immed[l0179!tmp, 256]
.1518 0094E0B20D23 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	.macro_ref                 wsm_extract(l0179!tmp2, $l0000!work_in0, SB_WQ_CTM_SPLIT)
	.macro_ref                     wsm_extract(l0179!tmp2, $l0000!work_in0, SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         sm_extract(l0179!tmp2, $l0000!work_in0[2], SB_WQ_CTM_SPLIT, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_SPLIT)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0179!tmp2, 0x3, and, $l0000!work_in0[2], >>14]
.1519 00AA70002F00 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[--, l0179!tmp2, or, 0]
.1520 009000F03600 common_code
	                alu_shf[l0179!split_len, --, b, l0179!tmp, <<indirect]
.1521 00F001F02FFF common_code
	.macro_ref                 wsm_extract(l0179!tmp, $l0000!work_in0, SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0179!tmp, $l0000!work_in0, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0179!tmp, $l0000!work_in0[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0183!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0183!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0183!_wsm_mask, 0x1FFF]
.1522 008400F82C83 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0179!tmp, l0183!_wsm_mask, and, $l0000!work_in0[2], >>0]
.1523 00BAC0E03C0F common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0179!ctm_bytes, l0179!split_len, -, l0179!tmp]
.1524 00D98DC0812A common_code
	                ble[M1179_mu_only_dma#]
.1525 00A440A60C01 common_code
	                alu[l0179!word, $l0000!work_in0[2], and, l0000!g_dma_word0_mask]
.1526 008A1810860A common_code
	                alu_shf[$l0000!dma_out0[0], l0179!word, or, 1, <<31]
.1527 0085A0A20D7F common_code
	.macro_ref                 wsm_extract(l0179!word, $l0000!work_in0, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0179!word, $l0000!work_in0, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0179!word, $l0000!work_in0[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0179!word, 0x3F, and, $l0000!work_in0[2], >>26]
.1528 00AA00AE000A common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0179!word, l0179!word, or, 0x80]                   ; Direct access
.1529 008B88219A0A common_code
	                alu_shf[$l0000!dma_out0[1], l0179!word, or, 38, <<8]
.1530 00A0583C000D common_code
	                alu[$l0000!dma_out0[2], --, b, l0179!pcie_lo_start]
.1531 00AAC0F03B01 common_code
	                alu[l0179!tmp, l0179!ctm_bytes, -, 1]
.1532 008AC848320F common_code
	.macro_ref                 sm_set_noclr_to($l0000!dma_out0[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp)
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp, 0)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0[3], l0179!pcie_hi_word, or, l0179!tmp, <<20]
.1533 040F06101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	.end_macro_ref                 sm_set_noclr_to
	#pragma warningdisable:5117
	                pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1534 00AA80C0380C common_code
	#pragma warningdefault:5117
	                alu[l0179!len, l0179!len, -, l0179!ctm_bytes]
.1535 00D99CC0812A common_code
	                ble[M1179_ctm_only_not_flagged#]
.1536 008150921200 common_code
	                alu_shf[l0179!mu_lo_start, --, b, $l0000!work_in0[3], <<11]
.1537 00A080903C09 common_code
	                alu[l0179!mu_lo_start, l0179!mu_lo_start, +, l0179!split_len]
.1538 00A0585C0009 common_code
	.macro_ref                 move($l0000!dma_out0x[0], l0179!mu_lo_start)
	                        alu[$l0000!dma_out0x[0], --, b, l0179!mu_lo_start]
.1539 00B000D00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out0x, $l0000!work_in0, l0000!dma_sig0)
	                .begin
	                    .reg l0185!word
	                        alu[l0185!word, --, b, l0000!g_dma_word1_vals]
.1540 00A080D0380D common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	                alu[l0179!pcie_lo_start, l0179!pcie_lo_start, +, l0179!ctm_bytes]
.1541 00B8C0C03300 common_code
	                alu[l0179!pcie_hi_word, l0179!pcie_hi_word, +carry, 0]
.1542 00AAB000200C common_code
	.macro_ref                 move($l0000!dma_out0x[2], l0179!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0179!len,-,l0000!g_dma_max]
.1543 00D983F0812B common_code
	                bgt[l071_01#], defer[3]
.1544 00C151083584 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        ld_field[l0185!word, 0001, $l0000!work_in0[3], >>21]
.1545 008B28683622 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                        alu_shf[$l0000!dma_out0x[1], l0185!word, or, 2, <<14]
.1546 00A0587C000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out0x[2], --, b, l0179!pcie_lo_start]
.1547 00AA80FC040C common_code
	                    alu[l0179!tmp, l0179!len, -, 1]
.1548 008AC888320F common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0x[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0x[3], l0179!pcie_hi_word, or, l0179!tmp, <<20]
.1549 040F06501F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out0x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1550 00D98D808038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l071_end#]
.1551 00C00312140F common_code
	                l071_01#: 
	.macro_ref                     wsm_extract(l0179!tmp, $l0000!work_in0, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0179!tmp, $l0000!work_in0, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0179!tmp, $l0000!work_in0[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    ld_field_w_clr[l0179!tmp, 0011, $l0000!work_in0[4],0]
.1552 00F002802F00 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    .if (tmp > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0187!__immed_big_const
	                    immed[l0187!__immed_big_const,10240]
.1553 00AAB0002C0F common_code
	                    alu[--,l0179!tmp,-,l0187!__immed_big_const]
.1554 00D98680812A common_code
	                    ble[l072_01#]
.1555 00F000803706 common_code
	                    .endlocal
	                        .while (1)
	                        l073_start#: 
	.macro_ref                             move(l0179!tmp, 0x806)
	.macro_ref                                     immed32(l0179!tmp, 0x806)
	                                            immed[l0179!tmp, 2054]
.1556 00FC17203700 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0179!tmp]
.1557 00FC176C0183 common_code
	                            local_csr_wr[mailbox1, $l0000!work_in0[2]]
.1558 00FC17AC0184 common_code
	                            local_csr_wr[mailbox2, $l0000!work_in0[3]]
.1559 00FC17EC0185 common_code
	                            local_csr_wr[mailbox3, $l0000!work_in0[4]]
.1560 00E000020000 common_code
	                            ctx_arb[bpt]
.1561 00D984C08038 common_code
	                        .endw
	                        l073_cont#: 
	                        br[l073_start#]
.1562 00AAC0F02301 common_code
	                        .unreachable
	                    .endif
	                    l072_01#: 
	                    l072_end#: 
	                    alu[l0179!tmp, l0000!g_dma_max, -, 1]
.1563 008AC888320F common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0x[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0x[3], l0179!pcie_hi_word, or, l0179!tmp, <<20]
.1564 040F06501F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out0x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1565 00AA80C0200C common_code
	#pragma warningdefault:5117
	                    alu[l0179!len, l0179!len, -, l0000!g_dma_max]
.1566 00A080902009 common_code
	                    alu[l0179!mu_lo_start, l0179!mu_lo_start, +, l0000!g_dma_max]
.1567 00A080D0200D common_code
	                    alu[l0179!pcie_lo_start, l0179!pcie_lo_start, +, l0000!g_dma_max]
.1568 00B8C0C03300 common_code
	                    alu[l0179!pcie_hi_word, l0179!pcie_hi_word, +carry, 0]
.1569 00E000000004 common_code
	                    .repeat
	                    l074_start#: 
	                        ctx_arb[l0000!dma_sig0]
.1570 00A0581C0009 common_code
	                        .io_completed $l0000!dma_out0[0]
	                        .io_completed $l0000!dma_out0[1]
	                        .io_completed $l0000!dma_out0[2]
	                        .io_completed $l0000!dma_out0[3]
	                        .io_completed $l0000!dma_out0x[0]
	                        .io_completed $l0000!dma_out0x[1]
	                        .io_completed $l0000!dma_out0x[2]
	                        .io_completed $l0000!dma_out0x[3]
	                        alu[$l0000!dma_out0[0], --, b, l0179!mu_lo_start]
.1571 00B000E00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out0, $l0000!work_in0, l0000!dma_sig0)
	                        .begin
	                            .reg l0189!word
	                                alu[l0189!word, --, b, l0000!g_dma_word1_vals]
.1572 00AAB000200C common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0179!len,-,l0000!g_dma_max]
.1573 00D98B70812B common_code
	                        bgt[l075_01#], defer[3]
.1574 00C151083984 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0189!word, 0001, $l0000!work_in0[3], >>21]
.1575 008B28283A22 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out0[1], l0189!word, or, 2, <<14]
.1576 00A0583C000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out0[2], --, b, l0179!pcie_lo_start]
.1577 00AA80FC040C common_code
	                            alu[l0179!tmp, l0179!len, -, 1]
.1578 00D98CE08038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out0[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0179!len, 0)
	.macro_ref                                     immed32(l0179!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l075_end#], defer[2]
.1579 008AC848320F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out0[3], l0179!pcie_hi_word, or, l0179!tmp, <<20]
.1580 00F0000C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0179!len, 0]
.1581 00AAC0F02301 common_code
	                        l075_01#: 
	                            alu[l0179!tmp, l0000!g_dma_max, -, 1]
.1582 008AC848320F common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out0[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out0[3], l0179!pcie_hi_word, or, l0179!tmp, <<20]
.1583 00AA80C0200C common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0179!len, l0179!len, -, l0000!g_dma_max]
.1584 00A080902009 common_code
	                            alu[l0179!mu_lo_start, l0179!mu_lo_start, +, l0000!g_dma_max]
.1585 00A080D0200D common_code
	                            alu[l0179!pcie_lo_start, l0179!pcie_lo_start, +, l0000!g_dma_max]
.1586 00B8C0C03300 common_code
	                            alu[l0179!pcie_hi_word, l0179!pcie_hi_word, +carry, 0]
.1587 040F06101F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l075_end#: 
	                        pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1588 00A0700C000C common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l074_cont#: 
	                    alu[--,--,b,l0179!len]
.1589 00D988408121 common_code
	                    bne[l074_start#]
.1590 00E1A0C50048 common_code
	                .endif
	                l071_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig2, state_e2n1#)
	.macro_ref                     wait_br_next_state(l0000!work_sig1, l0000!dma_sig2, state_e2n1#, --)
	                        .set_sig l0000!work_sig1
	                            .set_sig l0000!dma_sig2
	                                ctx_arb[l0000!work_sig1, l0000!dma_sig2], any, br[state_e2n1#]
.1591 009150D21200 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M1179_mu_only_dma#:
	                alu_shf[l0179!mu_lo_start, --, b, $l0000!work_in0[3], <<11]
.1592 00F001F03BFF common_code
	.macro_ref                 wsm_extract(l0179!tmp, $l0000!work_in0,  SB_WQ_OFFSET)
	.macro_ref                     wsm_extract(l0179!tmp, $l0000!work_in0, SB_WQ_OFFSET, 0)
	.macro_ref                         sm_extract(l0179!tmp, $l0000!work_in0[2], SB_WQ_OFFSET, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0192!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0192!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0192!_wsm_mask, 0x1FFF]
.1593 008400F83883 common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0179!tmp, l0192!_wsm_mask, and, $l0000!work_in0[2], >>0]
.1594 00A0C090340F common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu[l0179!mu_lo_start, l0179!mu_lo_start, +, l0179!tmp]
.1595 00A0581C0009 common_code
	.macro_ref                 move($l0000!dma_out0[0], l0179!mu_lo_start)
	                        alu[$l0000!dma_out0[0], --, b, l0179!mu_lo_start]
.1596 00B000F00700 common_code
	.end_macro_ref                 move
	.macro_ref                 _build_mu_dma_word1($l0000!dma_out0, $l0000!work_in0, l0000!dma_sig0)
	                .begin
	                    .reg l0193!word
	                        alu[l0193!word, --, b, l0000!g_dma_word1_vals]
.1597 00AAB000200C common_code
	                .end
	.end_macro_ref                 _build_mu_dma_word1
	.macro_ref                 move($l0000!dma_out0[2], l0179!pcie_lo_start)
	.end_macro_ref                 move
	                .if (len <= g_dma_max)
	                alu[--,l0179!len,-,l0000!g_dma_max]
.1598 00D991B0812B common_code
	                bgt[l076_01#], defer[3]
.1599 00C151083D84 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        ld_field[l0193!word, 0001, $l0000!work_in0[3], >>21]
.1600 008B28283E22 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu_shf[$l0000!dma_out0[1], l0193!word, or, 2, <<14]
.1601 00A0583C000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out0[2], --, b, l0179!pcie_lo_start]
.1602 00AA80FC040C common_code
	                    alu[l0179!tmp, l0179!len, -, 1]
.1603 008AC848320F common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0[3], l0179!pcie_hi_word, or, l0179!tmp, <<20]
.1604 040F06101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1605 00D99B008038 common_code
	#pragma warningdefault:5117
	                .else
	                br[l076_end#]
.1606 00F002802F00 common_code
	                    .if (len > NFD_OUT_MAX_PKT_BYTES)
	                    .local l0195!__immed_big_const
	                l076_01#: 
	                    immed[l0195!__immed_big_const,10240]
.1607 00AAB0002C0C common_code
	                    alu[--,l0179!len,-,l0195!__immed_big_const]
.1608 00D99400812A common_code
	                    ble[l077_01#]
.1609 00F000803706 common_code
	                    .endlocal
	                        .while (1)
	                        l078_start#: 
	.macro_ref                             move(l0179!tmp, 0x806)
	.macro_ref                                     immed32(l0179!tmp, 0x806)
	                                            immed[l0179!tmp, 2054]
.1610 00FC17203700 common_code
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                            local_csr_wr[mailbox0, l0179!tmp]
.1611 00FC176C0183 common_code
	                            local_csr_wr[mailbox1, $l0000!work_in0[2]]
.1612 00FC17AC0184 common_code
	                            local_csr_wr[mailbox2, $l0000!work_in0[3]]
.1613 00FC17EC0185 common_code
	                            local_csr_wr[mailbox3, $l0000!work_in0[4]]
.1614 00E000020000 common_code
	                            ctx_arb[bpt]
.1615 00D992408038 common_code
	                        .endw
	                        l078_cont#: 
	                        br[l078_start#]
.1616 00AAC0F02301 common_code
	                        .unreachable
	                    .endif
	                    l077_01#: 
	                    l077_end#: 
	                    alu[l0179!tmp, l0000!g_dma_max, -, 1]
.1617 008AC848320F common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out0[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out0[3], l0179!pcie_hi_word, or, l0179!tmp, <<20]
.1618 040F06101F08 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1619 00AA80C0200C common_code
	#pragma warningdefault:5117
	                    alu[l0179!len, l0179!len, -, l0000!g_dma_max]
.1620 00A080902009 common_code
	                    alu[l0179!mu_lo_start, l0179!mu_lo_start, +, l0000!g_dma_max]
.1621 00A080D0200D common_code
	                    alu[l0179!pcie_lo_start, l0179!pcie_lo_start, +, l0000!g_dma_max]
.1622 00B8C0C03300 common_code
	                    alu[l0179!pcie_hi_word, l0179!pcie_hi_word, +carry, 0]
.1623 00E000000004 common_code
	                    .repeat
	                    l079_start#: 
	                        ctx_arb[l0000!dma_sig0]
.1624 00A0581C0009 common_code
	                        .io_completed $l0000!dma_out0[0]
	                        .io_completed $l0000!dma_out0[1]
	                        .io_completed $l0000!dma_out0[2]
	                        .io_completed $l0000!dma_out0[3]
	                        .io_completed $l0000!dma_out0x[0]
	                        .io_completed $l0000!dma_out0x[1]
	                        .io_completed $l0000!dma_out0x[2]
	                        .io_completed $l0000!dma_out0x[3]
	                        alu[$l0000!dma_out0[0], --, b, l0179!mu_lo_start]
.1625 00B000D00700 common_code
	.macro_ref                         _build_mu_dma_word1($l0000!dma_out0, $l0000!work_in0, l0000!dma_sig0)
	                        .begin
	                            .reg l0197!word
	                                alu[l0197!word, --, b, l0000!g_dma_word1_vals]
.1626 00AAB000200C common_code
	                        .end
	.end_macro_ref                         _build_mu_dma_word1
	                        .if (len <= g_dma_max)
	                        alu[--,l0179!len,-,l0000!g_dma_max]
.1627 00D998F0812B common_code
	                        bgt[l080_01#], defer[3]
.1628 00C151083584 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                ld_field[l0197!word, 0001, $l0000!work_in0[3], >>21]
.1629 008B28283622 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[$l0000!dma_out0[1], l0197!word, or, 2, <<14]
.1630 00A0583C000D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                        alu[$l0000!dma_out0[2], --, b, l0179!pcie_lo_start]
.1631 00AA80FC040C common_code
	                            alu[l0179!tmp, l0179!len, -, 1]
.1632 00D99A608038 common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out0[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.macro_ref                             move(l0179!len, 0)
	.macro_ref                                     immed32(l0179!len, 0)
	.end_macro_ref                                     immed32
	.end_macro_ref                             move
	                        .else
	                        br[l080_end#], defer[2]
.1633 008AC848320F common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                alu_shf[$l0000!dma_out0[3], l0179!pcie_hi_word, or, l0179!tmp, <<20]
.1634 00F0000C000C common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                            immed[l0179!len, 0]
.1635 00AAC0F02301 common_code
	                        l080_01#: 
	                            alu[l0179!tmp, l0000!g_dma_max, -, 1]
.1636 008AC848320F common_code
	.macro_ref                             sm_set_noclr_to($l0000!dma_out0[3], l0179!pcie_hi_word, PCIE_DMA_XLEN, l0179!tmp, 1)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[$l0000!dma_out0[3], l0179!pcie_hi_word, or, l0179!tmp, <<20]
.1637 00AA80C0200C common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	                            alu[l0179!len, l0179!len, -, l0000!g_dma_max]
.1638 00A080902009 common_code
	                            alu[l0179!mu_lo_start, l0179!mu_lo_start, +, l0000!g_dma_max]
.1639 00A080D0200D common_code
	                            alu[l0179!pcie_lo_start, l0179!pcie_lo_start, +, l0000!g_dma_max]
.1640 00B8C0C03300 common_code
	                            alu[l0179!pcie_hi_word, l0179!pcie_hi_word, +carry, 0]
.1641 040F06101F08 common_code
	                        .endif
	#pragma warningdisable:5117
	                        l080_end#: 
	                        pcie[write_pci, $l0000!dma_out0[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1642 00A0700C000C common_code
	#pragma warningdefault:5117
	                    .until (len == 0)
	                    l079_cont#: 
	                    alu[--,--,b,l0179!len]
.1643 00D995C08121 common_code
	                    bne[l079_start#]
.1644 00E1A0C50048 common_code
	                .endif
	                l076_end#: 
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig2, state_e2n1#)
	.macro_ref                     wait_br_next_state(l0000!work_sig1, l0000!dma_sig2, state_e2n1#, --)
	                        .set_sig l0000!work_sig1
	                            .set_sig l0000!dma_sig2
	                                ctx_arb[l0000!work_sig1, l0000!dma_sig2], any, br[state_e2n1#]
.1645 00FC044C0000 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M1179_no_dma#:
	                local_csr_rd[active_ctx_sts]
.1646 00F000003700 common_code
	                immed[l0179!tmp, 0]
.1647 00B440D03707 common_code
	                alu[l0179!tmp, l0179!tmp, and, 7]
.1648 00E1A0E50048 common_code
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig2, state_e2n1#)
	.macro_ref                     wait_br_next_state(l0000!work_sig1, l0000!dma_sig2, state_e2n1#, --)
	                        .set_sig l0000!work_sig1
	                            .set_sig l0000!dma_sig2
	                                ctx_arb[l0000!work_sig1, l0000!dma_sig2], defer[2], any, br[state_e2n1#]
.1649 009BD0D83622 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                alu_shf[l0179!tmp, l0179!tmp, or, 2, <<3]
.1650 00FC10A03700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                local_csr_wr[same_me_signal, l0179!tmp]
.1651 00F000803707 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M1179_ctm_only_not_flagged#:
	.macro_ref                 move(l0179!tmp, 0x807)
	M1297#:
	.macro_ref                         immed32(l0179!tmp, 0x807)
	M1298#:
	                                immed[l0179!tmp, 2055]
.1652 00FC17203700 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                local_csr_wr[mailbox0, l0179!tmp]
.1653 00FC176C0183 common_code
	                local_csr_wr[mailbox1, $l0000!work_in0[2]]
.1654 00FC17AC0184 common_code
	                local_csr_wr[mailbox2, $l0000!work_in0[3]]
.1655 00FC17EC0185 common_code
	                local_csr_wr[mailbox3, $l0000!work_in0[4]]
.1656 00E000020000 common_code
	                ctx_arb[bpt]
.1657 00D99CC08038 common_code
	                br[M1179_ctm_only_not_flagged#]
.1658 00F000003B00 common_code
	            M1179_add_wq_credits#:
	.macro_ref                 move(l0179!addr_lo, nfd_out_sb_wq_credits0)
	M1299#:
	.macro_ref                         immed32(l0179!addr_lo, nfd_out_sb_wq_credits0)
	M1300#:
	                                    immed[l0179!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.1659 00F440003B00 common_code
	                                    immed_w1[l0179!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.1660 008B02028206 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                alu_shf[--, l0000!g_add_imm_iref, or, 64, <<16]
.1661 124702083B20 common_code
	                mem[add_imm, --, 0, l0179!addr_lo,1], indirect_ref
.1662 00F001803B34 common_code
	.macro_ref                 signal_sb_credits_update()
	                .begin
	                    .reg l0200!addr
	.macro_ref                     move(l0200!addr, 603985972)
	.macro_ref                             immed32(l0200!addr, 603985972)
	                                        immed[l0200!addr, 6196]
.1663 00F442403B00 common_code
	                                        immed_w1[l0200!addr, 9216]
.1664 101C00083B20 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    ct[interthread_signal, --, 0, l0200!addr,1]
.1665 00D975908038 common_code
	                .end
	.end_macro_ref                 signal_sb_credits_update
	                br[M1179_start_packet_dma#], defer[1]
.1666 00F000022B3F common_code
	.macro_ref                 move(@l0000!ndequeued, (64 - 1))
	.macro_ref                         immed32(@l0000!ndequeued, (64 - 1))
	                                immed[@l0000!ndequeued, 63]
.1667 00D9DE818232 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	            .end
	.end_macro_ref             _issue_packet_dma
	.end_macro_ref         issue_packet_dma
	    state_e2n1#:
	        br_signal[l0000!dma_sig2, transition_e2n1_e1n1#]
.1668 00D9E740C233 common_code
	        br_!signal[l0000!work_sig1, unreached#]
.1669 00BAC8A22B01 common_code
	    transition_e2n1_e3n2#:
	.macro_ref         issue_packet_dma(1, state_e3n2#, l0000!dma_sig2)
	M1306#:
	.macro_ref             issue_packet_dma(1, state_e3n2#, l0000!dma_sig2, --)
	M1307#:
	                .io_completed l0000!work_sig1
	                .io_completed l0000!dma_sig1
	.macro_ref                 _issue_packet_dma($l0000!work_in1, $l0000!dma_out1, $l0000!dma_out1x, l0000!dma_sig1, state_e3n2#, l0000!dma_sig2, --)
	                .begin
	                    .reg l0201!word
	                    .reg l0201!tmp
	                    .reg l0201!tmp2
	                    .reg l0201!isl
	                    .reg l0201!ovfl
	                    .reg l0201!len
	                    .reg l0201!addr_lo
	                    .reg l0201!pcie_hi_word
	                    .reg l0201!pcie_lo_start
	                    .reg l0201!mu_lo_start
	                    .reg l0201!ctm_bytes
	                    .reg l0201!split_len
	                    .io_completed $l0000!work_in1[0]
	                    .io_completed $l0000!work_in1[1]
	                    .io_completed $l0000!work_in1[2]
	                    .io_completed $l0000!work_in1[3]
	                    .io_completed $l0000!work_in1[4]
	                    .io_completed $l0000!dma_out1[0]
	                    .io_completed $l0000!dma_out1[1]
	                    .io_completed $l0000!dma_out1[2]
	                    .io_completed $l0000!dma_out1[3]
	                    .io_completed $l0000!dma_out1x[0]
	                    .io_completed $l0000!dma_out1x[1]
	                    .io_completed $l0000!dma_out1x[2]
	                    .io_completed $l0000!dma_out1x[3]
	                    alu[@l0000!ndequeued, @l0000!ndequeued, -, 1]
.1670 00D9CAC08129 common_code
	                    blt[M1308_add_wq_credits#]
.1671 00D1C7821820 common_code
	                M1308_start_packet_dma#:
	.macro_ref                     wsm_test_bit_clr($l0000!work_in1, SB_WQ_ENABLED, M1308_no_dma#)
	M1309#:
	.macro_ref                         wsm_test_bit_clr($l0000!work_in1, SB_WQ_ENABLED, M1308_no_dma#, --)
	M1310#:
	.macro_ref                             sm_test_bit_clr($l0000!work_in1[0], SB_WQ_ENABLED, M1308_no_dma#, --)
	M1311#:
	                                    br_bclr[$l0000!work_in1[0], 31, M1308_no_dma#]
.1672 00D1A5C2203A common_code
	.end_macro_ref                             sm_test_bit_clr
	.end_macro_ref                         wsm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	.macro_ref                     wsm_test_bit_clr($l0000!work_in1, SB_WQ_CTM_ONLY, M1308_not_ctm_only#)
	.macro_ref                         wsm_test_bit_clr($l0000!work_in1, SB_WQ_CTM_ONLY, M1308_not_ctm_only#, --)
	.macro_ref                             sm_test_bit_clr($l0000!work_in1[2], SB_WQ_CTM_ONLY, M1308_not_ctm_only#, --)
	                                    br_bclr[$l0000!work_in1[2], 25, M1308_not_ctm_only#]
.1673 00B440F62001 common_code
	.end_macro_ref                             sm_test_bit_clr
	.end_macro_ref                         wsm_test_bit_clr
	.end_macro_ref                     wsm_test_bit_clr
	                M1308_ctm_only#:
	                    alu[l0201!word, $l0000!work_in1[2], and, l0000!g_dma_word0_mask]
.1674 008A18983E21 common_code
	                    alu_shf[$l0000!dma_out1[0], l0201!word, or, 1, <<31]
.1675 0085A0C2217F common_code
	.macro_ref                     wsm_extract(l0201!word, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0201!word, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0201!word, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0201!word, 0x3F, and, $l0000!work_in1[2], >>26]
.1676 00BA00F0040C common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0201!word, l0201!word, or, l0000!g_dma_word1_vals]
.1677 008B28A83E24 common_code
	                    alu_shf[$l0000!dma_out1[1], l0201!word, or, 4, <<14]
.1678 00A018B61F00 common_code
	                        alu[$l0000!dma_out1[2], --, b, $l0000!work_in1[1]]
.1679 01A4C0C00986 common_code
	                    alu[l0201!word, l0000!g_dma_word3_vals, +8, $l0000!work_in1[0]], no_cc
.1680 009570C619FF common_code
	.macro_ref                     wsm_extract(l0201!tmp, $l0000!work_in1,  SB_WQ_RID)
	.macro_ref                         wsm_extract(l0201!tmp, $l0000!work_in1, SB_WQ_RID, 0)
	.macro_ref                             sm_extract(l0201!tmp, $l0000!work_in1[0], SB_WQ_RID, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0201!tmp, 0xFF, and, $l0000!work_in1[0], >>23]
.1681 008B40C0320C common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     sm_set_noclr(l0201!word, PCIE_DMA_RID, l0201!tmp)
	.macro_ref                         sm_set_noclr(l0201!word, PCIE_DMA_RID, l0201!tmp, 0)
	.macro_ref                             sm_set_noclr_to(l0201!word, l0201!word, PCIE_DMA_RID, l0201!tmp, 0)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0201!word, l0201!word, or, l0201!tmp, <<12]
.1682 00C003182C8A common_code
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.end_macro_ref                         sm_set_noclr
	.end_macro_ref                     sm_set_noclr
	.macro_ref                     wsm_extract(l0201!len, $l0000!work_in1, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0201!len, $l0000!work_in1, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0201!len, $l0000!work_in1[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    ld_field_w_clr[l0201!len, 0011, $l0000!work_in1[4],0]
.1683 040F06901F08 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	#pragma warningdisable:5117
	#pragma warningdisable:4701
	#pragma warningdisable:5009
	                    pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1684 00E1CD240040 common_code
	#pragma warningdefault:5117
	.macro_ref                     wait_br_next_state(l0000!dma_sig2, --, state_e3n2#, defer[2])
	                        .set_sig l0000!dma_sig2
	                                ctx_arb[l0000!dma_sig2], br[state_e3n2#], defer[2]
.1685 00BAC0B02F01 common_code
	.end_macro_ref                     wait_br_next_state
	                    alu[l0201!len, l0201!len, -, 1]
.1686 008AC8C02E0C common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1[3], l0201!word, PCIE_DMA_XLEN, l0201!len, 1)
	                    .begin
	.macro_ref                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                         _wsm_validate_size
	                        alu_shf[$l0000!dma_out1[3], l0201!word, or, l0201!len, <<20]
.1687 00A000B61F00 common_code
	                    .end
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdefault:4701
	#pragma warningdefault:5009
	                M1308_not_ctm_only#:
	                        alu[l0201!pcie_lo_start, --, b, $l0000!work_in1[1]]
.1688 01B4C0B00986 common_code
	                    alu[l0201!pcie_hi_word, l0000!g_dma_word3_vals, +8, $l0000!work_in1[0]], no_cc
.1689 0095A0E2217F common_code
	.macro_ref                     wsm_extract(l0201!tmp, $l0000!work_in1,  SB_WQ_RID)
	.macro_ref                         wsm_extract(l0201!tmp, $l0000!work_in1, SB_WQ_RID, 0)
	.macro_ref                             sm_extract(l0201!tmp, $l0000!work_in1[0], SB_WQ_RID, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_RID)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     sm_set_noclr(l0201!pcie_hi_word, PCIE_DMA_RID, l0201!tmp)
	.macro_ref                         sm_set_noclr(l0201!pcie_hi_word, PCIE_DMA_RID, l0201!tmp, 0)
	.macro_ref                             sm_set_noclr_to(l0201!pcie_hi_word, l0201!pcie_hi_word, PCIE_DMA_RID, l0201!tmp, 0)
	                            .begin
	.macro_ref                                 _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                            .end
	.end_macro_ref                             sm_set_noclr_to
	.end_macro_ref                         sm_set_noclr
	.end_macro_ref                     sm_set_noclr
	.macro_ref                     wsm_extract(l0201!len, $l0000!work_in1, SB_WQ_DATALEN)
	.macro_ref                         wsm_extract(l0201!len, $l0000!work_in1, SB_WQ_DATALEN, 0)
	.macro_ref                             sm_extract(l0201!len, $l0000!work_in1[4], SB_WQ_DATALEN, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     wsm_extract(l0201!isl, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0201!isl, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0201!isl, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0201!isl, 0x3F, and, $l0000!work_in1[2], >>26]
.1690 00D9BA308120 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    beq[M1308_mu_only_dma#], defer[3]
.1691 0085709619FF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[l0201!tmp, 0xFF, and, $l0000!work_in1[0], >>23]
.1692 009B40B82E09 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0201!pcie_hi_word, l0201!pcie_hi_word, or, l0201!tmp, <<12]
.1693 00C00312280E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    ld_field_w_clr[l0201!len, 0011, $l0000!work_in1[4],0]
.1694 00F000103300 common_code
	                M1308_ctm_and_mu_dma#:
	.macro_ref                     move(l0201!tmp, 256)
	M1356#:
	.macro_ref                             immed32(l0201!tmp, 256)
	M1357#:
	                                    immed[l0201!tmp, 256]
.1695 0094E0F22123 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	.macro_ref                     wsm_extract(l0201!tmp2, $l0000!work_in1, SB_WQ_CTM_SPLIT)
	.macro_ref                         wsm_extract(l0201!tmp2, $l0000!work_in1, SB_WQ_CTM_SPLIT, 0)
	.macro_ref                             sm_extract(l0201!tmp2, $l0000!work_in1[2], SB_WQ_CTM_SPLIT, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_SPLIT)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0201!tmp2, 0x3, and, $l0000!work_in1[2], >>14]
.1696 00AA70003F00 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[--, l0201!tmp2, or, 0]
.1697 009000E03200 common_code
	                    alu_shf[l0201!split_len, --, b, l0201!tmp, <<indirect]
.1698 00F001F03FFF common_code
	.macro_ref                     wsm_extract(l0201!tmp, $l0000!work_in1, SB_WQ_OFFSET)
	.macro_ref                         wsm_extract(l0201!tmp, $l0000!work_in1, SB_WQ_OFFSET, 0)
	.macro_ref                             sm_extract(l0201!tmp, $l0000!work_in1[2], SB_WQ_OFFSET, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                             __WSM_GET_MASKLEN
	                                    .begin
	                                        .reg l0205!_wsm_mask
	.macro_ref                                         _wsm_loadmask(l0205!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                 _wsm_validate_size
	                                                immed[l0205!_wsm_mask, 0x1FFF]
.1699 008400983C88 common_code
	.end_macro_ref                                         _wsm_loadmask
	                                        alu_shf[l0201!tmp, l0205!_wsm_mask, and, $l0000!work_in1[2], >>0]
.1700 00BAC0D03809 common_code
	                                    .end
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0201!ctm_bytes, l0201!split_len, -, l0201!tmp]
.1701 00D9BA00812A common_code
	                    ble[M1308_mu_only_dma#]
.1702 00A440C62001 common_code
	                    alu[l0201!word, $l0000!work_in1[2], and, l0000!g_dma_word0_mask]
.1703 008A1890860C common_code
	                    alu_shf[$l0000!dma_out1[0], l0201!word, or, 1, <<31]
.1704 0085A0C2217F common_code
	.macro_ref                     wsm_extract(l0201!word, $l0000!work_in1, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0201!word, $l0000!work_in1, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0201!word, $l0000!work_in1[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0201!word, 0x3F, and, $l0000!work_in1[2], >>26]
.1705 00AA00CE000C common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0201!word, l0201!word, or, 0x80]                   ; Direct access
.1706 008B88A19A0C common_code
	                    alu_shf[$l0000!dma_out1[1], l0201!word, or, 38, <<8]
.1707 00A058BC000B common_code
	                    alu[$l0000!dma_out1[2], --, b, l0201!pcie_lo_start]
.1708 00AAC0903701 common_code
	                    alu[l0201!tmp, l0201!ctm_bytes, -, 1]
.1709 008AC8C82E09 common_code
	.macro_ref                     sm_set_noclr_to($l0000!dma_out1[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp)
	.macro_ref                         sm_set_noclr_to($l0000!dma_out1[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp, 0)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 0, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out1[3], l0201!pcie_hi_word, or, l0201!tmp, <<20]
.1710 040F06901F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	.end_macro_ref                     sm_set_noclr_to
	#pragma warningdisable:5117
	                    pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1711 00AA80E0340E common_code
	#pragma warningdefault:5117
	                    alu[l0201!len, l0201!len, -, l0201!ctm_bytes]
.1712 00D9C900812A common_code
	                    ble[M1308_ctm_only_not_flagged#]
.1713 008150A22600 common_code
	                    alu_shf[l0201!mu_lo_start, --, b, $l0000!work_in1[3], <<11]
.1714 00A080A0380A common_code
	                    alu[l0201!mu_lo_start, l0201!mu_lo_start, +, l0201!split_len]
.1715 00A058DC000A common_code
	.macro_ref                     move($l0000!dma_out1x[0], l0201!mu_lo_start)
	                            alu[$l0000!dma_out1x[0], --, b, l0201!mu_lo_start]
.1716 00B000C00700 common_code
	.end_macro_ref                     move
	.macro_ref                     _build_mu_dma_word1($l0000!dma_out1x, $l0000!work_in1, l0000!dma_sig1)
	                    .begin
	                        .reg l0207!word
	                            alu[l0207!word, --, b, l0000!g_dma_word1_vals]
.1717 00A080B0340B common_code
	                    .end
	.end_macro_ref                     _build_mu_dma_word1
	                    alu[l0201!pcie_lo_start, l0201!pcie_lo_start, +, l0201!ctm_bytes]
.1718 00B8C0B02F00 common_code
	                    alu[l0201!pcie_hi_word, l0201!pcie_hi_word, +carry, 0]
.1719 00AAB000200E common_code
	.macro_ref                     move($l0000!dma_out1x[2], l0201!pcie_lo_start)
	.end_macro_ref                     move
	                    .if (len <= g_dma_max)
	                    alu[--,l0201!len,-,l0000!g_dma_max]
.1720 00D9B030812B common_code
	                    bgt[l081_01#], defer[3]
.1721 00C151083189 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                            ld_field[l0207!word, 0001, $l0000!work_in1[3], >>21]
.1722 008B28E83224 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                            alu_shf[$l0000!dma_out1x[1], l0207!word, or, 4, <<14]
.1723 00A058FC000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out1x[2], --, b, l0201!pcie_lo_start]
.1724 00AA809C040E common_code
	                        alu[l0201!tmp, l0201!len, -, 1]
.1725 008ACC082E09 common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out1x[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out1x[3], l0201!pcie_hi_word, or, l0201!tmp, <<20]
.1726 040F06D01F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out1x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1727 00D9B9C08038 common_code
	#pragma warningdefault:5117
	                    .else
	                    br[l081_end#]
.1728 00C003122809 common_code
	                    l081_01#: 
	.macro_ref                         wsm_extract(l0201!tmp, $l0000!work_in1, SB_WQ_DATALEN)
	.macro_ref                             wsm_extract(l0201!tmp, $l0000!work_in1, SB_WQ_DATALEN, 0)
	.macro_ref                                 sm_extract(l0201!tmp, $l0000!work_in1[4], SB_WQ_DATALEN, 0)
	.macro_ref                                 __WSM_GET_MASKLEN(SB_WQ_DATALEN)
	.end_macro_ref                                 __WSM_GET_MASKLEN
	.macro_ref                                         _wsm_validate_size(sm_extract, 0, 1)
	.end_macro_ref                                         _wsm_validate_size
	                                        ld_field_w_clr[l0201!tmp, 0011, $l0000!work_in1[4],0]
.1729 00F002803F00 common_code
	.end_macro_ref                                 sm_extract
	.end_macro_ref                             wsm_extract
	.end_macro_ref                         wsm_extract
	                        .if (tmp > NFD_OUT_MAX_PKT_BYTES)
	                        .local l0209!__immed_big_const
	                        immed[l0209!__immed_big_const,10240]
.1730 00AAB0003C09 common_code
	                        alu[--,l0201!tmp,-,l0209!__immed_big_const]
.1731 00D9B2C0812A common_code
	                        ble[l082_01#]
.1732 00F000803306 common_code
	                        .endlocal
	                            .while (1)
	                            l083_start#: 
	.macro_ref                                 move(l0201!tmp, 0x806)
	.macro_ref                                         immed32(l0201!tmp, 0x806)
	                                                immed[l0201!tmp, 2054]
.1733 00FC17203300 common_code
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                                local_csr_wr[mailbox0, l0201!tmp]
.1734 00FC176C0188 common_code
	                                local_csr_wr[mailbox1, $l0000!work_in1[2]]
.1735 00FC17AC0189 common_code
	                                local_csr_wr[mailbox2, $l0000!work_in1[3]]
.1736 00FC17EC018A common_code
	                                local_csr_wr[mailbox3, $l0000!work_in1[4]]
.1737 00E000020000 common_code
	                                ctx_arb[bpt]
.1738 00D9B1008038 common_code
	                            .endw
	                            l083_cont#: 
	                            br[l083_start#]
.1739 00AAC0902301 common_code
	                            .unreachable
	                        .endif
	                        l082_01#: 
	                        l082_end#: 
	                        alu[l0201!tmp, l0000!g_dma_max, -, 1]
.1740 008ACC082E09 common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out1x[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out1x[3], l0201!pcie_hi_word, or, l0201!tmp, <<20]
.1741 040F06D01F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out1x[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1742 00AA80E0200E common_code
	#pragma warningdefault:5117
	                        alu[l0201!len, l0201!len, -, l0000!g_dma_max]
.1743 00A080A0200A common_code
	                        alu[l0201!mu_lo_start, l0201!mu_lo_start, +, l0000!g_dma_max]
.1744 00A080B0200B common_code
	                        alu[l0201!pcie_lo_start, l0201!pcie_lo_start, +, l0000!g_dma_max]
.1745 00B8C0B02F00 common_code
	                        alu[l0201!pcie_hi_word, l0201!pcie_hi_word, +carry, 0]
.1746 00E000000010 common_code
	                        .repeat
	                        l084_start#: 
	                            ctx_arb[l0000!dma_sig1]
.1747 00A0589C000A common_code
	                            .io_completed $l0000!dma_out1[0]
	                            .io_completed $l0000!dma_out1[1]
	                            .io_completed $l0000!dma_out1[2]
	                            .io_completed $l0000!dma_out1[3]
	                            .io_completed $l0000!dma_out1x[0]
	                            .io_completed $l0000!dma_out1x[1]
	                            .io_completed $l0000!dma_out1x[2]
	                            .io_completed $l0000!dma_out1x[3]
	                            alu[$l0000!dma_out1[0], --, b, l0201!mu_lo_start]
.1748 00B000D00700 common_code
	.macro_ref                             _build_mu_dma_word1($l0000!dma_out1, $l0000!work_in1, l0000!dma_sig1)
	                            .begin
	                                .reg l0211!word
	                                    alu[l0211!word, --, b, l0000!g_dma_word1_vals]
.1749 00AAB000200E common_code
	                            .end
	.end_macro_ref                             _build_mu_dma_word1
	                            .if (len <= g_dma_max)
	                            alu[--,l0201!len,-,l0000!g_dma_max]
.1750 00D9B7B0812B common_code
	                            bgt[l085_01#], defer[3]
.1751 00C151083589 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    ld_field[l0211!word, 0001, $l0000!work_in1[3], >>21]
.1752 008B28A83624 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[$l0000!dma_out1[1], l0211!word, or, 4, <<14]
.1753 00A058BC000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out1[2], --, b, l0201!pcie_lo_start]
.1754 00AA809C040E common_code
	                                alu[l0201!tmp, l0201!len, -, 1]
.1755 00D9B9208038 common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out1[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	.macro_ref                                 move(l0201!len, 0)
	.macro_ref                                         immed32(l0201!len, 0)
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                            .else
	                            br[l085_end#], defer[2]
.1756 008AC8C82E09 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                    alu_shf[$l0000!dma_out1[3], l0201!pcie_hi_word, or, l0201!tmp, <<20]
.1757 00F0000C000E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                                immed[l0201!len, 0]
.1758 00AAC0902301 common_code
	                            l085_01#: 
	                                alu[l0201!tmp, l0000!g_dma_max, -, 1]
.1759 008AC8C82E09 common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out1[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[$l0000!dma_out1[3], l0201!pcie_hi_word, or, l0201!tmp, <<20]
.1760 00AA80E0200E common_code
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	                                alu[l0201!len, l0201!len, -, l0000!g_dma_max]
.1761 00A080A0200A common_code
	                                alu[l0201!mu_lo_start, l0201!mu_lo_start, +, l0000!g_dma_max]
.1762 00A080B0200B common_code
	                                alu[l0201!pcie_lo_start, l0201!pcie_lo_start, +, l0000!g_dma_max]
.1763 00B8C0B02F00 common_code
	                                alu[l0201!pcie_hi_word, l0201!pcie_hi_word, +carry, 0]
.1764 040F06901F08 common_code
	                            .endif
	#pragma warningdisable:5117
	                            l085_end#: 
	                            pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1765 00A0700C000E common_code
	#pragma warningdefault:5117
	                        .until (len == 0)
	                        l084_cont#: 
	                        alu[--,--,b,l0201!len]
.1766 00D9B4808121 common_code
	                        bne[l084_start#]
.1767 00E1CD040040 common_code
	                    .endif
	                    l081_end#: 
	.macro_ref                     wait_br_next_state(l0000!dma_sig2, --, state_e3n2#)
	.macro_ref                         wait_br_next_state(l0000!dma_sig2, --, state_e3n2#, --)
	                            .set_sig l0000!dma_sig2
	                                    ctx_arb[l0000!dma_sig2], br[state_e3n2#]
.1768 009150C22600 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M1308_mu_only_dma#:
	                    alu_shf[l0201!mu_lo_start, --, b, $l0000!work_in1[3], <<11]
.1769 00F001F037FF common_code
	.macro_ref                     wsm_extract(l0201!tmp, $l0000!work_in1,  SB_WQ_OFFSET)
	.macro_ref                         wsm_extract(l0201!tmp, $l0000!work_in1, SB_WQ_OFFSET, 0)
	.macro_ref                             sm_extract(l0201!tmp, $l0000!work_in1[2], SB_WQ_OFFSET, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_OFFSET)
	.end_macro_ref                             __WSM_GET_MASKLEN
	                                    .begin
	                                        .reg l0214!_wsm_mask
	.macro_ref                                         _wsm_loadmask(l0214!_wsm_mask, 0x1FFF, 13, 'sm_extract', 0)
	.macro_ref                                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                 _wsm_validate_size
	                                                immed[l0214!_wsm_mask, 0x1FFF]
.1770 008400983488 common_code
	.end_macro_ref                                         _wsm_loadmask
	                                        alu_shf[l0201!tmp, l0214!_wsm_mask, and, $l0000!work_in1[2], >>0]
.1771 00A0C0A03009 common_code
	                                    .end
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu[l0201!mu_lo_start, l0201!mu_lo_start, +, l0201!tmp]
.1772 00A0589C000A common_code
	.macro_ref                     move($l0000!dma_out1[0], l0201!mu_lo_start)
	                            alu[$l0000!dma_out1[0], --, b, l0201!mu_lo_start]
.1773 00B000E00700 common_code
	.end_macro_ref                     move
	.macro_ref                     _build_mu_dma_word1($l0000!dma_out1, $l0000!work_in1, l0000!dma_sig1)
	                    .begin
	                        .reg l0215!word
	                            alu[l0215!word, --, b, l0000!g_dma_word1_vals]
.1774 00AAB000200E common_code
	                    .end
	.end_macro_ref                     _build_mu_dma_word1
	.macro_ref                     move($l0000!dma_out1[2], l0201!pcie_lo_start)
	.end_macro_ref                     move
	                    .if (len <= g_dma_max)
	                    alu[--,l0201!len,-,l0000!g_dma_max]
.1775 00D9BDF0812B common_code
	                    bgt[l086_01#], defer[3]
.1776 00C151083989 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            ld_field[l0215!word, 0001, $l0000!work_in1[3], >>21]
.1777 008B28A83A24 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu_shf[$l0000!dma_out1[1], l0215!word, or, 4, <<14]
.1778 00A058BC000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out1[2], --, b, l0201!pcie_lo_start]
.1779 00AA809C040E common_code
	                        alu[l0201!tmp, l0201!len, -, 1]
.1780 008AC8C82E09 common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out1[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out1[3], l0201!pcie_hi_word, or, l0201!tmp, <<20]
.1781 040F06901F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1782 00D9C7408038 common_code
	#pragma warningdefault:5117
	                    .else
	                    br[l086_end#]
.1783 00F002803F00 common_code
	                        .if (len > NFD_OUT_MAX_PKT_BYTES)
	                        .local l0217!__immed_big_const
	                    l086_01#: 
	                        immed[l0217!__immed_big_const,10240]
.1784 00AAB0003C0E common_code
	                        alu[--,l0201!len,-,l0217!__immed_big_const]
.1785 00D9C040812A common_code
	                        ble[l087_01#]
.1786 00F000803306 common_code
	                        .endlocal
	                            .while (1)
	                            l088_start#: 
	.macro_ref                                 move(l0201!tmp, 0x806)
	.macro_ref                                         immed32(l0201!tmp, 0x806)
	                                                immed[l0201!tmp, 2054]
.1787 00FC17203300 common_code
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                                local_csr_wr[mailbox0, l0201!tmp]
.1788 00FC176C0188 common_code
	                                local_csr_wr[mailbox1, $l0000!work_in1[2]]
.1789 00FC17AC0189 common_code
	                                local_csr_wr[mailbox2, $l0000!work_in1[3]]
.1790 00FC17EC018A common_code
	                                local_csr_wr[mailbox3, $l0000!work_in1[4]]
.1791 00E000020000 common_code
	                                ctx_arb[bpt]
.1792 00D9BE808038 common_code
	                            .endw
	                            l088_cont#: 
	                            br[l088_start#]
.1793 00AAC0902301 common_code
	                            .unreachable
	                        .endif
	                        l087_01#: 
	                        l087_end#: 
	                        alu[l0201!tmp, l0000!g_dma_max, -, 1]
.1794 008AC8C82E09 common_code
	.macro_ref                         sm_set_noclr_to($l0000!dma_out1[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp, 1)
	                        .begin
	.macro_ref                             _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                             _wsm_validate_size
	                            alu_shf[$l0000!dma_out1[3], l0201!pcie_hi_word, or, l0201!tmp, <<20]
.1795 040F06901F08 common_code
	                        .end
	.end_macro_ref                         sm_set_noclr_to
	#pragma warningdisable:5117
	                        pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1796 00AA80E0200E common_code
	#pragma warningdefault:5117
	                        alu[l0201!len, l0201!len, -, l0000!g_dma_max]
.1797 00A080A0200A common_code
	                        alu[l0201!mu_lo_start, l0201!mu_lo_start, +, l0000!g_dma_max]
.1798 00A080B0200B common_code
	                        alu[l0201!pcie_lo_start, l0201!pcie_lo_start, +, l0000!g_dma_max]
.1799 00B8C0B02F00 common_code
	                        alu[l0201!pcie_hi_word, l0201!pcie_hi_word, +carry, 0]
.1800 00E000000010 common_code
	                        .repeat
	                        l089_start#: 
	                            ctx_arb[l0000!dma_sig1]
.1801 00A0589C000A common_code
	                            .io_completed $l0000!dma_out1[0]
	                            .io_completed $l0000!dma_out1[1]
	                            .io_completed $l0000!dma_out1[2]
	                            .io_completed $l0000!dma_out1[3]
	                            .io_completed $l0000!dma_out1x[0]
	                            .io_completed $l0000!dma_out1x[1]
	                            .io_completed $l0000!dma_out1x[2]
	                            .io_completed $l0000!dma_out1x[3]
	                            alu[$l0000!dma_out1[0], --, b, l0201!mu_lo_start]
.1802 00B000C00700 common_code
	.macro_ref                             _build_mu_dma_word1($l0000!dma_out1, $l0000!work_in1, l0000!dma_sig1)
	                            .begin
	                                .reg l0219!word
	                                    alu[l0219!word, --, b, l0000!g_dma_word1_vals]
.1803 00AAB000200E common_code
	                            .end
	.end_macro_ref                             _build_mu_dma_word1
	                            .if (len <= g_dma_max)
	                            alu[--,l0201!len,-,l0000!g_dma_max]
.1804 00D9C530812B common_code
	                            bgt[l090_01#], defer[3]
.1805 00C151083189 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    ld_field[l0219!word, 0001, $l0000!work_in1[3], >>21]
.1806 008B28A83224 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[$l0000!dma_out1[1], l0219!word, or, 4, <<14]
.1807 00A058BC000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                            alu[$l0000!dma_out1[2], --, b, l0201!pcie_lo_start]
.1808 00AA809C040E common_code
	                                alu[l0201!tmp, l0201!len, -, 1]
.1809 00D9C6A08038 common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out1[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	.macro_ref                                 move(l0201!len, 0)
	.macro_ref                                         immed32(l0201!len, 0)
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                            .else
	                            br[l090_end#], defer[2]
.1810 008AC8C82E09 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                    alu_shf[$l0000!dma_out1[3], l0201!pcie_hi_word, or, l0201!tmp, <<20]
.1811 00F0000C000E common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                                                immed[l0201!len, 0]
.1812 00AAC0902301 common_code
	                            l090_01#: 
	                                alu[l0201!tmp, l0000!g_dma_max, -, 1]
.1813 008AC8C82E09 common_code
	.macro_ref                                 sm_set_noclr_to($l0000!dma_out1[3], l0201!pcie_hi_word, PCIE_DMA_XLEN, l0201!tmp, 1)
	                                .begin
	.macro_ref                                     _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[$l0000!dma_out1[3], l0201!pcie_hi_word, or, l0201!tmp, <<20]
.1814 00AA80E0200E common_code
	                                .end
	.end_macro_ref                                 sm_set_noclr_to
	                                alu[l0201!len, l0201!len, -, l0000!g_dma_max]
.1815 00A080A0200A common_code
	                                alu[l0201!mu_lo_start, l0201!mu_lo_start, +, l0000!g_dma_max]
.1816 00A080B0200B common_code
	                                alu[l0201!pcie_lo_start, l0201!pcie_lo_start, +, l0000!g_dma_max]
.1817 00B8C0B02F00 common_code
	                                alu[l0201!pcie_hi_word, l0201!pcie_hi_word, +carry, 0]
.1818 040F06901F08 common_code
	                            .endif
	#pragma warningdisable:5117
	                            l090_end#: 
	                            pcie[write_pci, $l0000!dma_out1[0], l0000!g_pcie_addr_hi, <<8, l0000!g_pcie_addr_lo, 4]
.1819 00A0700C000E common_code
	#pragma warningdefault:5117
	                        .until (len == 0)
	                        l089_cont#: 
	                        alu[--,--,b,l0201!len]
.1820 00D9C2008121 common_code
	                        bne[l089_start#]
.1821 00E1CD040040 common_code
	                    .endif
	                    l086_end#: 
	.macro_ref                     wait_br_next_state(l0000!dma_sig2, --, state_e3n2#)
	.macro_ref                         wait_br_next_state(l0000!dma_sig2, --, state_e3n2#, --)
	                            .set_sig l0000!dma_sig2
	                                    ctx_arb[l0000!dma_sig2], br[state_e3n2#]
.1822 00FC044C0000 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M1308_no_dma#:
	                    local_csr_rd[active_ctx_sts]
.1823 00F000003300 common_code
	                    immed[l0201!tmp, 0]
.1824 00B440C03307 common_code
	                    alu[l0201!tmp, l0201!tmp, and, 7]
.1825 00E1CD240040 common_code
	.macro_ref                     wait_br_next_state(l0000!dma_sig2, --, state_e3n2#)
	.macro_ref                         wait_br_next_state(l0000!dma_sig2, --, state_e3n2#, --)
	                            .set_sig l0000!dma_sig2
	                                    ctx_arb[l0000!dma_sig2], defer[2], br[state_e3n2#]
.1826 009BD0C83224 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    alu_shf[l0201!tmp, l0201!tmp, or, 4, <<3]
.1827 00FC10A03300 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[same_me_signal, l0201!tmp]
.1828 00F000803307 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M1308_ctm_only_not_flagged#:
	.macro_ref                     move(l0201!tmp, 0x807)
	M1426#:
	.macro_ref                             immed32(l0201!tmp, 0x807)
	M1427#:
	                                    immed[l0201!tmp, 2055]
.1829 00FC17203300 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    local_csr_wr[mailbox0, l0201!tmp]
.1830 00FC176C0188 common_code
	                    local_csr_wr[mailbox1, $l0000!work_in1[2]]
.1831 00FC17AC0189 common_code
	                    local_csr_wr[mailbox2, $l0000!work_in1[3]]
.1832 00FC17EC018A common_code
	                    local_csr_wr[mailbox3, $l0000!work_in1[4]]
.1833 00E000020000 common_code
	                    ctx_arb[bpt]
.1834 00D9C9008038 common_code
	                    br[M1308_ctm_only_not_flagged#]
.1835 00F000003B00 common_code
	                M1308_add_wq_credits#:
	.macro_ref                     move(l0201!addr_lo, nfd_out_sb_wq_credits0)
	M1428#:
	.macro_ref                             immed32(l0201!addr_lo, nfd_out_sb_wq_credits0)
	M1429#:
	                                        immed[l0201!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.1836 00F440003B00 common_code
	                                        immed_w1[l0201!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.1837 008B02028206 common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                    alu_shf[--, l0000!g_add_imm_iref, or, 64, <<16]
.1838 124702083B20 common_code
	                    mem[add_imm, --, 0, l0201!addr_lo,1], indirect_ref
.1839 00F001803B34 common_code
	.macro_ref                     signal_sb_credits_update()
	                    .begin
	                        .reg l0222!addr
	.macro_ref                         move(l0222!addr, 603985972)
	.macro_ref                                 immed32(l0222!addr, 603985972)
	                                            immed[l0222!addr, 6196]
.1840 00F442403B00 common_code
	                                            immed_w1[l0222!addr, 9216]
.1841 101C00083B20 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        ct[interthread_signal, --, 0, l0222!addr,1]
.1842 00D9A1D08038 common_code
	                    .end
	.end_macro_ref                     signal_sb_credits_update
	                    br[M1308_start_packet_dma#], defer[1]
.1843 00F000022B3F common_code
	.macro_ref                     move(@l0000!ndequeued, (64 - 1))
	.macro_ref                             immed32(@l0000!ndequeued, (64 - 1))
	                                    immed[@l0000!ndequeued, 63]
.1844 0095A0D2357F common_code
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	                .end
	.end_macro_ref                 _issue_packet_dma
	.end_macro_ref             issue_packet_dma
	.end_macro_ref         issue_packet_dma
	    state_e3n2#:
	    transition_e3n2_e2n2#:
	.macro_ref         complete_packet_dma(2, state_e2n2#, l0000!work_sig2, l0000!dma_sig0)
	M1435#:
	.macro_ref             _complete_packet_dma($l0000!work_in2, l0000!work_sig2, state_e2n2#, l0000!work_sig2, l0000!dma_sig0)
	            .begin
	                .reg l0223!isl
	                .reg l0223!qnum
	                .reg l0223!addr_hi
	                .reg l0223!addr_lo
	                .reg l0223!ring_num
	                .reg l0223!bitmap_lo
	                .reg l0223!cntr_addr_lo
	                .reg l0223!seq
	                .reg $l0223!ticket
	                .sig l0223!ticket_sig
	M1436#:
	.macro_ref                 wsm_extract(l0223!qnum, $l0000!work_in2, SB_WQ_QNUM)
	.macro_ref                     wsm_extract(l0223!qnum, $l0000!work_in2, SB_WQ_QNUM, 0)
	.macro_ref                         sm_extract(l0223!qnum, $l0000!work_in2[4], SB_WQ_QNUM, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_QNUM)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0223!isl, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0223!isl, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0223!isl, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0223!isl, 0x3F, and, $l0000!work_in2[2], >>26]
.1845 00D9CF308120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M1435_no_ctm_buffer#], defer[3]
.1846 008500B63DFF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0223!qnum, 0xFF, and, $l0000!work_in2[4], >>16]
.1847 009BC0E80E0B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[l0223!bitmap_lo, l0000!g_bitmap_base, or, l0223!qnum, <<4]
.1848 008488022D02 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[$l0223!ticket, l0000!g_seq_mask, and, $l0000!work_in2[0], >>8]
.1849 008A80C03603 common_code
	                alu_shf[l0223!addr_hi, l0000!g_pkt_free_hi, or, l0223!isl, <<24]
.1850 009500B8118D common_code
	                alu_shf[l0223!addr_lo, l0000!g_pkt_num_mask, and, $l0000!work_in2[2], >>16]
.1851 005200002F0C common_code
	                mem[packet_free, --, l0223!addr_hi, <<8, l0223!addr_lo]
.1852 104B80003B20 common_code
	            M1435_no_ctm_buffer#:
	                mem[release_ticket, $l0223!ticket, 0, l0223!bitmap_lo, 1], sig_done[l0223!ticket_sig]
.1853 009830B09E8E common_code
	.macro_ref                 wsm_extract(l0223!addr_lo, $l0000!work_in2, SB_WQ_MUBUF)
	.macro_ref                     wsm_extract(l0223!addr_lo, $l0000!work_in2, SB_WQ_MUBUF, 0)
	.macro_ref                         sm_extract(l0223!addr_lo, $l0000!work_in2[3], SB_WQ_MUBUF, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_MUBUF)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0223!addr_lo, $l0000!work_in2[3], and~, 7, <<29]
.1854 00E000200300 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                ctx_arb[l0223!ticket_sig, l0223!ticket_sig+1], defer[2]
.1855 009BC0F8A20B common_code
	                alu_shf[l0223!cntr_addr_lo, 8, or, l0223!qnum, <<4]
.1856 0085D0B23923 common_code
	.macro_ref                 wsm_extract(l0223!ring_num, $l0000!work_in2, SB_WQ_BLS)
	.macro_ref                     wsm_extract(l0223!ring_num, $l0000!work_in2, SB_WQ_BLS, 0)
	.macro_ref                         sm_extract(l0223!ring_num, $l0000!work_in2[3], SB_WQ_BLS, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_BLS)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0223!ring_num, 0x3, and, $l0000!work_in2[3], >>29]
.1857 008B0208160B common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu_shf[-- , l0000!g_blm_iref, or, l0223!ring_num, <<16]
.1858 025700002F05 common_code
	                mem[fast_journal, --, l0000!g_blm_addr_hi, <<8, l0223!addr_lo], indirect_ref
.1859 00C9D1CA0020 common_code
	            M1435_ticket_ready#:
	                br=byte[$l0223!ticket, 0, 0, M1435_complete_done#]
.1860 00C9D24E00FF common_code
	                br=byte[$l0223!ticket, 0, 255, M1435_ticket_error#]
.1861 008B02020206 common_code
	                alu_shf[--, l0000!g_add_imm_iref, or, $l0223!ticket, <<16]
.1862 024702083F04 common_code
	                mem[add_imm, --, l0000!g_send_cntrs_addr_hi, <<8, l0223!cntr_addr_lo,1], indirect_ref
.1863 007958B00300 common_code
	#pragma warningdisable:5009
	            M1435_complete_done#:
	.macro_ref                 pci_out_pd_request_work($l0000!work_in2[0], l0000!work_sig2)
	                        cls[ring_workq_add_thread, $l0000!work_in2[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                            sig_done[l0000!work_sig2]
.1864 00E063C50024 common_code
	.end_macro_ref                 pci_out_pd_request_work
	#pragma warningdefault:5009
	.macro_ref                 wait_br_next_state(l0000!work_sig2, l0000!dma_sig0, state_e2n2#)
	.macro_ref                     wait_br_next_state(l0000!work_sig2, l0000!dma_sig0, state_e2n2#, --)
	                        .set_sig l0000!work_sig2
	                            .set_sig l0000!dma_sig0
	                                ctx_arb[l0000!work_sig2, l0000!dma_sig0], any, br[state_e2n2#]
.1865 00B0C0902701 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M1435_ticket_error#:
	                alu[l0000!g_num_ticket_errors, l0000!g_num_ticket_errors, +, 1]
.1866 00FC17202700 common_code
	                local_csr_wr[mailbox0, l0000!g_num_ticket_errors]
.1867 00F0003033FF common_code
	.macro_ref                 wsm_extract(l0223!seq, $l0000!work_in2, SB_WQ_SEQ)
	.macro_ref                     wsm_extract(l0223!seq, $l0000!work_in2, SB_WQ_SEQ, 0)
	.macro_ref                         sm_extract(l0223!seq, $l0000!work_in2[0], SB_WQ_SEQ, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_SEQ)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0224!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0224!_wsm_mask, 0x3FF, 10, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0224!_wsm_mask, 0x3FF]
.1868 009480B8318B common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0223!seq, l0224!_wsm_mask, and, $l0000!work_in2[0], >>8]
.1869 00FC17602F00 common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                local_csr_wr[mailbox1, l0223!seq]
.1870 00B000DC1F00 common_code
	.macro_ref                 cycle32_sleep(250)
	                .begin
	                    .reg l0225!tmp_cycle_count l0225!_ixp_future_count_signal_num
	                    .sig l0225!_ixp_future_count_signal_name
	                    .set_sig l0225!_ixp_future_count_signal_name
	                    alu[l0225!_ixp_future_count_signal_num, --, b, 7]
.1871 00FC0C0C0000 common_code
	                    local_csr_rd[timestamp_low]
.1872 00F0000C000B common_code
	                    immed[l0225!tmp_cycle_count, 0]
.1873 00A080BC3C0B common_code
	.macro_ref                         add(l0225!tmp_cycle_count, l0225!tmp_cycle_count, 15)
	.macro_ref                             alu_op(l0225!tmp_cycle_count, l0225!tmp_cycle_count, +, 15)
	.macro_ref                                         _nfp_alu(l0225!tmp_cycle_count, l0225!tmp_cycle_count, +, 15)
	                                                alu[l0225!tmp_cycle_count, l0225!tmp_cycle_count, +, 15]
.1874 00E000200080 common_code
	.end_macro_ref                                         _nfp_alu
	.end_macro_ref                             alu_op
	.end_macro_ref                         add
	                    ctx_arb[l0225!_ixp_future_count_signal_name], defer[2]
.1875 00FC05EC000B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_ctx_future_count, l0225!tmp_cycle_count]
.1876 00FC07E03700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_future_count_signal, l0225!_ixp_future_count_signal_num]
.1877 104B80003B20 common_code
	                .end
	.end_macro_ref                 cycle32_sleep
	                mem[release_ticket, $l0223!ticket, 0, l0223!bitmap_lo, 1], sig_done[l0223!ticket_sig]
.1878 00E1D0C40300 common_code
	                ctx_arb[l0223!ticket_sig, l0223!ticket_sig+1], br[M1435_ticket_ready#]
.1879 0095A0E2357F common_code
	            .end
	.end_macro_ref             _complete_packet_dma
	.end_macro_ref         complete_packet_dma
	    transition_e1n0_e0n0#:
	.macro_ref         complete_packet_dma(2, state_e0n0#, l0000!work_sig0)
	M1470#:
	.macro_ref             complete_packet_dma(2, state_e0n0#, l0000!work_sig0, --)
	M1471#:
	.macro_ref                 _complete_packet_dma($l0000!work_in2, l0000!work_sig2, state_e0n0#, l0000!work_sig0, --)
	                .begin
	                    .reg l0226!isl
	                    .reg l0226!qnum
	                    .reg l0226!addr_hi
	                    .reg l0226!addr_lo
	                    .reg l0226!ring_num
	                    .reg l0226!bitmap_lo
	                    .reg l0226!cntr_addr_lo
	                    .reg l0226!seq
	                    .reg $l0226!ticket
	                    .sig l0226!ticket_sig
	M1472#:
	.macro_ref                     wsm_extract(l0226!qnum, $l0000!work_in2, SB_WQ_QNUM)
	.macro_ref                         wsm_extract(l0226!qnum, $l0000!work_in2, SB_WQ_QNUM, 0)
	.macro_ref                             sm_extract(l0226!qnum, $l0000!work_in2[4], SB_WQ_QNUM, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_QNUM)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	.macro_ref                     wsm_extract(l0226!isl, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                         wsm_extract(l0226!isl, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                             sm_extract(l0226!isl, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0226!isl, 0x3F, and, $l0000!work_in2[2], >>26]
.1880 00D9D7F08120 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    beq[M1471_no_ctm_buffer#], defer[3]
.1881 008500D63DFF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu_shf[l0226!qnum, 0xFF, and, $l0000!work_in2[4], >>16]
.1882 009BC0F80E0D common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                    alu_shf[l0226!bitmap_lo, l0000!g_bitmap_base, or, l0226!qnum, <<4]
.1883 008488022D02 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                    alu_shf[$l0226!ticket, l0000!g_seq_mask, and, $l0000!work_in2[0], >>8]
.1884 008A80A03A03 common_code
	                    alu_shf[l0226!addr_hi, l0000!g_pkt_free_hi, or, l0226!isl, <<24]
.1885 009500E8118D common_code
	                    alu_shf[l0226!addr_lo, l0000!g_pkt_num_mask, and, $l0000!work_in2[2], >>16]
.1886 005200003B0A common_code
	                    mem[packet_free, --, l0226!addr_hi, <<8, l0226!addr_lo]
.1887 104B80003F20 common_code
	                M1471_no_ctm_buffer#:
	                    mem[release_ticket, $l0226!ticket, 0, l0226!bitmap_lo, 1], sig_done[l0226!ticket_sig]
.1888 009830E09E8E common_code
	.macro_ref                     wsm_extract(l0226!addr_lo, $l0000!work_in2, SB_WQ_MUBUF)
	.macro_ref                         wsm_extract(l0226!addr_lo, $l0000!work_in2, SB_WQ_MUBUF, 0)
	.macro_ref                             sm_extract(l0226!addr_lo, $l0000!work_in2[3], SB_WQ_MUBUF, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_MUBUF)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0226!addr_lo, $l0000!work_in2[3], and~, 7, <<29]
.1889 00E000200300 common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    ctx_arb[l0226!ticket_sig, l0226!ticket_sig+1], defer[2]
.1890 009BC0B8A20D common_code
	                    alu_shf[l0226!cntr_addr_lo, 8, or, l0226!qnum, <<4]
.1891 0085D0D23923 common_code
	.macro_ref                     wsm_extract(l0226!ring_num, $l0000!work_in2, SB_WQ_BLS)
	.macro_ref                         wsm_extract(l0226!ring_num, $l0000!work_in2, SB_WQ_BLS, 0)
	.macro_ref                             sm_extract(l0226!ring_num, $l0000!work_in2[3], SB_WQ_BLS, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_BLS)
	.end_macro_ref                             __WSM_GET_MASKLEN
	.macro_ref                                     _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                     _wsm_validate_size
	                                    alu_shf[l0226!ring_num, 0x3, and, $l0000!work_in2[3], >>29]
.1892 008B0208160D common_code
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    alu_shf[-- , l0000!g_blm_iref, or, l0226!ring_num, <<16]
.1893 025700003B05 common_code
	                    mem[fast_journal, --, l0000!g_blm_addr_hi, <<8, l0226!addr_lo], indirect_ref
.1894 00C9DA8A0020 common_code
	                M1471_ticket_ready#:
	                    br=byte[$l0226!ticket, 0, 0, M1471_complete_done#]
.1895 00C9DB0E00FF common_code
	                    br=byte[$l0226!ticket, 0, 255, M1471_ticket_error#]
.1896 008B02020206 common_code
	                    alu_shf[--, l0000!g_add_imm_iref, or, $l0226!ticket, <<16]
.1897 024702082F04 common_code
	                    mem[add_imm, --, l0000!g_send_cntrs_addr_hi, <<8, l0226!cntr_addr_lo,1], indirect_ref
.1898 007958B00300 common_code
	#pragma warningdisable:5009
	                M1471_complete_done#:
	.macro_ref                     pci_out_pd_request_work($l0000!work_in2[0], l0000!work_sig2)
	                            cls[ring_workq_add_thread, $l0000!work_in2[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                                sig_done[l0000!work_sig2]
.1899 00E00BC40002 common_code
	.end_macro_ref                     pci_out_pd_request_work
	#pragma warningdefault:5009
	.macro_ref                     wait_br_next_state(l0000!work_sig0, --, state_e0n0#)
	.macro_ref                         wait_br_next_state(l0000!work_sig0, --, state_e0n0#, --)
	                            .set_sig l0000!work_sig0
	                                    ctx_arb[l0000!work_sig0], br[state_e0n0#]
.1900 00B0C0902701 common_code
	.end_macro_ref                         wait_br_next_state
	.end_macro_ref                     wait_br_next_state
	                M1471_ticket_error#:
	                    alu[l0000!g_num_ticket_errors, l0000!g_num_ticket_errors, +, 1]
.1901 00FC17202700 common_code
	                    local_csr_wr[mailbox0, l0000!g_num_ticket_errors]
.1902 00F0003037FF common_code
	.macro_ref                     wsm_extract(l0226!seq, $l0000!work_in2, SB_WQ_SEQ)
	.macro_ref                         wsm_extract(l0226!seq, $l0000!work_in2, SB_WQ_SEQ, 0)
	.macro_ref                             sm_extract(l0226!seq, $l0000!work_in2[0], SB_WQ_SEQ, 0)
	.macro_ref                             __WSM_GET_MASKLEN(SB_WQ_SEQ)
	.end_macro_ref                             __WSM_GET_MASKLEN
	                                    .begin
	                                        .reg l0227!_wsm_mask
	.macro_ref                                         _wsm_loadmask(l0227!_wsm_mask, 0x3FF, 10, 'sm_extract', 0)
	.macro_ref                                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                 _wsm_validate_size
	                                                immed[l0227!_wsm_mask, 0x3FF]
.1903 009480C8358B common_code
	.end_macro_ref                                         _wsm_loadmask
	                                        alu_shf[l0226!seq, l0227!_wsm_mask, and, $l0000!work_in2[0], >>8]
.1904 00FC17603300 common_code
	                                    .end
	.end_macro_ref                             sm_extract
	.end_macro_ref                         wsm_extract
	.end_macro_ref                     wsm_extract
	                    local_csr_wr[mailbox1, l0226!seq]
.1905 00B000EC1F00 common_code
	.macro_ref                     cycle32_sleep(250)
	                    .begin
	                        .reg l0228!tmp_cycle_count l0228!_ixp_future_count_signal_num
	                        .sig l0228!_ixp_future_count_signal_name
	                        .set_sig l0228!_ixp_future_count_signal_name
	                        alu[l0228!_ixp_future_count_signal_num, --, b, 7]
.1906 00FC0C0C0000 common_code
	                        local_csr_rd[timestamp_low]
.1907 00F0000C0009 common_code
	                        immed[l0228!tmp_cycle_count, 0]
.1908 00A0809C3C09 common_code
	.macro_ref                             add(l0228!tmp_cycle_count, l0228!tmp_cycle_count, 15)
	.macro_ref                                 alu_op(l0228!tmp_cycle_count, l0228!tmp_cycle_count, +, 15)
	.macro_ref                                             _nfp_alu(l0228!tmp_cycle_count, l0228!tmp_cycle_count, +, 15)
	                                                    alu[l0228!tmp_cycle_count, l0228!tmp_cycle_count, +, 15]
.1909 00E000200080 common_code
	.end_macro_ref                                             _nfp_alu
	.end_macro_ref                                 alu_op
	.end_macro_ref                             add
	                        ctx_arb[l0228!_ixp_future_count_signal_name], defer[2]
.1910 00FC05EC0009 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                        local_csr_wr[active_ctx_future_count, l0228!tmp_cycle_count]
.1911 00FC07E03B00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                        local_csr_wr[active_future_count_signal, l0228!_ixp_future_count_signal_num]
.1912 104B80003F20 common_code
	                    .end
	.end_macro_ref                     cycle32_sleep
	                    mem[release_ticket, $l0226!ticket, 0, l0226!bitmap_lo, 1], sig_done[l0226!ticket_sig]
.1913 00E1D9840300 common_code
	                    ctx_arb[l0226!ticket_sig, l0226!ticket_sig+1], br[M1471_ticket_ready#]
.1914 0095A0F2357F common_code
	                .end
	.end_macro_ref                 _complete_packet_dma
	.end_macro_ref             complete_packet_dma
	.end_macro_ref         complete_packet_dma
	    transition_e2n1_e1n1#:
	.macro_ref         complete_packet_dma(2, state_e1n1#, l0000!work_sig1, l0000!dma_sig0)
	M1506#:
	.macro_ref             _complete_packet_dma($l0000!work_in2, l0000!work_sig2, state_e1n1#, l0000!work_sig1, l0000!dma_sig0)
	            .begin
	                .reg l0229!isl
	                .reg l0229!qnum
	                .reg l0229!addr_hi
	                .reg l0229!addr_lo
	                .reg l0229!ring_num
	                .reg l0229!bitmap_lo
	                .reg l0229!cntr_addr_lo
	                .reg l0229!seq
	                .reg $l0229!ticket
	                .sig l0229!ticket_sig
	M1507#:
	.macro_ref                 wsm_extract(l0229!qnum, $l0000!work_in2, SB_WQ_QNUM)
	.macro_ref                     wsm_extract(l0229!qnum, $l0000!work_in2, SB_WQ_QNUM, 0)
	.macro_ref                         sm_extract(l0229!qnum, $l0000!work_in2[4], SB_WQ_QNUM, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_QNUM)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	.macro_ref                 wsm_extract(l0229!isl, $l0000!work_in2, SB_WQ_CTM_ISL)
	.macro_ref                     wsm_extract(l0229!isl, $l0000!work_in2, SB_WQ_CTM_ISL, 0)
	.macro_ref                         sm_extract(l0229!isl, $l0000!work_in2[2], SB_WQ_CTM_ISL, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_CTM_ISL)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0229!isl, 0x3F, and, $l0000!work_in2[2], >>26]
.1915 00D9E0B08120 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                beq[M1506_no_ctm_buffer#], defer[3]
.1916 008500B63DFF common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                alu_shf[l0229!qnum, 0xFF, and, $l0000!work_in2[4], >>16]
.1917 009BC0B80E0B common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[l0229!bitmap_lo, l0000!g_bitmap_base, or, l0229!qnum, <<4]
.1918 008488022D02 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                alu_shf[$l0229!ticket, l0000!g_seq_mask, and, $l0000!work_in2[0], >>8]
.1919 008A80C03E03 common_code
	                alu_shf[l0229!addr_hi, l0000!g_pkt_free_hi, or, l0229!isl, <<24]
.1920 009500F8118D common_code
	                alu_shf[l0229!addr_lo, l0000!g_pkt_num_mask, and, $l0000!work_in2[2], >>16]
.1921 005200003F0C common_code
	                mem[packet_free, --, l0229!addr_hi, <<8, l0229!addr_lo]
.1922 104B80002F20 common_code
	            M1506_no_ctm_buffer#:
	                mem[release_ticket, $l0229!ticket, 0, l0229!bitmap_lo, 1], sig_done[l0229!ticket_sig]
.1923 009830F09E8E common_code
	.macro_ref                 wsm_extract(l0229!addr_lo, $l0000!work_in2, SB_WQ_MUBUF)
	.macro_ref                     wsm_extract(l0229!addr_lo, $l0000!work_in2, SB_WQ_MUBUF, 0)
	.macro_ref                         sm_extract(l0229!addr_lo, $l0000!work_in2[3], SB_WQ_MUBUF, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_MUBUF)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0229!addr_lo, $l0000!work_in2[3], and~, 7, <<29]
.1924 00E000200300 common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                ctx_arb[l0229!ticket_sig, l0229!ticket_sig+1], defer[2]
.1925 009BC0C8A20B common_code
	                alu_shf[l0229!cntr_addr_lo, 8, or, l0229!qnum, <<4]
.1926 0085D0D23923 common_code
	.macro_ref                 wsm_extract(l0229!ring_num, $l0000!work_in2, SB_WQ_BLS)
	.macro_ref                     wsm_extract(l0229!ring_num, $l0000!work_in2, SB_WQ_BLS, 0)
	.macro_ref                         sm_extract(l0229!ring_num, $l0000!work_in2[3], SB_WQ_BLS, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_BLS)
	.end_macro_ref                         __WSM_GET_MASKLEN
	.macro_ref                                 _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                 _wsm_validate_size
	                                alu_shf[l0229!ring_num, 0x3, and, $l0000!work_in2[3], >>29]
.1927 008B0208160D common_code
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                alu_shf[-- , l0000!g_blm_iref, or, l0229!ring_num, <<16]
.1928 025700003F05 common_code
	                mem[fast_journal, --, l0000!g_blm_addr_hi, <<8, l0229!addr_lo], indirect_ref
.1929 00C9E34A0020 common_code
	            M1506_ticket_ready#:
	                br=byte[$l0229!ticket, 0, 0, M1506_complete_done#]
.1930 00C9E3CE00FF common_code
	                br=byte[$l0229!ticket, 0, 255, M1506_ticket_error#]
.1931 008B02020206 common_code
	                alu_shf[--, l0000!g_add_imm_iref, or, $l0229!ticket, <<16]
.1932 024702083304 common_code
	                mem[add_imm, --, l0000!g_send_cntrs_addr_hi, <<8, l0229!cntr_addr_lo,1], indirect_ref
.1933 007958B00300 common_code
	#pragma warningdisable:5009
	            M1506_complete_done#:
	.macro_ref                 pci_out_pd_request_work($l0000!work_in2[0], l0000!work_sig2)
	                        cls[ring_workq_add_thread, $l0000!work_in2[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                            sig_done[l0000!work_sig2]
.1934 00E03785000C common_code
	.end_macro_ref                 pci_out_pd_request_work
	#pragma warningdefault:5009
	.macro_ref                 wait_br_next_state(l0000!work_sig1, l0000!dma_sig0, state_e1n1#)
	.macro_ref                     wait_br_next_state(l0000!work_sig1, l0000!dma_sig0, state_e1n1#, --)
	                        .set_sig l0000!work_sig1
	                            .set_sig l0000!dma_sig0
	                                ctx_arb[l0000!work_sig1, l0000!dma_sig0], any, br[state_e1n1#]
.1935 00B0C0902701 common_code
	.end_macro_ref                     wait_br_next_state
	.end_macro_ref                 wait_br_next_state
	            M1506_ticket_error#:
	                alu[l0000!g_num_ticket_errors, l0000!g_num_ticket_errors, +, 1]
.1936 00FC17202700 common_code
	                local_csr_wr[mailbox0, l0000!g_num_ticket_errors]
.1937 00F000303BFF common_code
	.macro_ref                 wsm_extract(l0229!seq, $l0000!work_in2, SB_WQ_SEQ)
	.macro_ref                     wsm_extract(l0229!seq, $l0000!work_in2, SB_WQ_SEQ, 0)
	.macro_ref                         sm_extract(l0229!seq, $l0000!work_in2[0], SB_WQ_SEQ, 0)
	.macro_ref                         __WSM_GET_MASKLEN(SB_WQ_SEQ)
	.end_macro_ref                         __WSM_GET_MASKLEN
	                                .begin
	                                    .reg l0230!_wsm_mask
	.macro_ref                                     _wsm_loadmask(l0230!_wsm_mask, 0x3FF, 10, 'sm_extract', 0)
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            immed[l0230!_wsm_mask, 0x3FF]
.1938 009480D8398B common_code
	.end_macro_ref                                     _wsm_loadmask
	                                    alu_shf[l0229!seq, l0230!_wsm_mask, and, $l0000!work_in2[0], >>8]
.1939 00FC17603700 common_code
	                                .end
	.end_macro_ref                         sm_extract
	.end_macro_ref                     wsm_extract
	.end_macro_ref                 wsm_extract
	                local_csr_wr[mailbox1, l0229!seq]
.1940 00B000FC1F00 common_code
	.macro_ref                 cycle32_sleep(250)
	                .begin
	                    .reg l0231!tmp_cycle_count l0231!_ixp_future_count_signal_num
	                    .sig l0231!_ixp_future_count_signal_name
	                    .set_sig l0231!_ixp_future_count_signal_name
	                    alu[l0231!_ixp_future_count_signal_num, --, b, 7]
.1941 00FC0C0C0000 common_code
	                    local_csr_rd[timestamp_low]
.1942 00F0000C000A common_code
	                    immed[l0231!tmp_cycle_count, 0]
.1943 00A080AC3C0A common_code
	.macro_ref                         add(l0231!tmp_cycle_count, l0231!tmp_cycle_count, 15)
	.macro_ref                             alu_op(l0231!tmp_cycle_count, l0231!tmp_cycle_count, +, 15)
	.macro_ref                                         _nfp_alu(l0231!tmp_cycle_count, l0231!tmp_cycle_count, +, 15)
	                                                alu[l0231!tmp_cycle_count, l0231!tmp_cycle_count, +, 15]
.1944 00E000200080 common_code
	.end_macro_ref                                         _nfp_alu
	.end_macro_ref                             alu_op
	.end_macro_ref                         add
	                    ctx_arb[l0231!_ixp_future_count_signal_name], defer[2]
.1945 00FC05EC000A common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_ctx_future_count, l0231!tmp_cycle_count]
.1946 00FC07E03F00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                    local_csr_wr[active_future_count_signal, l0231!_ixp_future_count_signal_num]
.1947 104B80002F20 common_code
	                .end
	.end_macro_ref                 cycle32_sleep
	                mem[release_ticket, $l0229!ticket, 0, l0229!bitmap_lo, 1], sig_done[l0229!ticket_sig]
.1948 00E1E2440300 common_code
	                ctx_arb[l0229!ticket_sig, l0229!ticket_sig+1], br[M1506_ticket_ready#]
.1949 00E1E7460000 common_code
	            .end
	.end_macro_ref             _complete_packet_dma
	.end_macro_ref         complete_packet_dma
	    unreached#:
	        ctx_arb[bpt], br[unreached#]
+ucode_end

