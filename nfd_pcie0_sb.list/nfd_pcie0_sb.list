+version:  10/31/2000
+switches:  
+nfas_version: 6.1.0.1-preview.3243
+nfas_date: Oct  9 2018 17:02:52
+current_date: Fri Jan 22 04:15:13 2021

.chip_id nfp-4xxxc-b0 0x10 0x10

.%init_csr "default assembler setting" -1 mecsr:MISC_CONTROL.LEGACY_INDIRECT_REF_MODE const 0
.%init_csr "default assembler setting" -1 mecsr:MISC_CONTROL.THIRD_PARTY_ADDRESS_MODE const 0
.%init_csr "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb_iface.uc" 67 cls:Rings.RingBase15 const " nfd_out_sb_wq_mem0 &v 0x7 >> 0x0 << 0x50000 |"
.%init_csr "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb_iface.uc" 70 cls:Rings.RingPtrs15 const 0

.%num_contexts 8
.%ctx_range 0 7

.%local_mem0_mode rel
.%local_mem1_mode rel

.%local_mem2_mode rel
.%local_mem3_mode rel

.%init_nn_mode --
.%third_party_addressing 40bit
.%indirect_ref_mode nfp6000
.%neighbor_usage 0x00
.%case_sensitivity 1

.%resource CAM 0
.%resource CRC 0
.%resource T_INDEX 0
.%resource BYTE_INDEX 0


:M164_copy_loop# 160
:M175# 160
:M209_process_request_0# 261
:M209_process_request_0_flow_controlled# 282
:M209_process_request_0_test_ready_to_send# 261
:M209_process_request_1# 285
:M209_process_request_1_flow_controlled# 306
:M209_process_request_1_test_ready_to_send# 285
:M209_process_request_2# 309
:M209_process_request_2_flow_controlled# 330
:M209_process_request_2_test_ready_to_send# 309
:M209_process_request_3# 333
:M209_process_request_3_flow_controlled# 354
:M209_process_request_3_test_ready_to_send# 333
:M209_process_request_4# 357
:M209_process_request_4_flow_controlled# 378
:M209_process_request_4_test_ready_to_send# 357
:M209_worker_loop# 261
:M236# 261
:M243# 285
:M250# 309
:M257# 333
:M264# 357
:l000_01# 208
:l000_end# 381
:l001_start# 16
:l002_01# 25
:l002_end# 25
:l003_01# 148
:l003_end# 148
:l004_cont# 147
:l004_start# 34
:l005_01# 37
:l005_end# 37
:l006_01# 38
:l006_end# 38
:l007_01# 46
:l007_end# 46
:l008_01# 90
:l008_end# 135
:l009_cont# 87
:l009_end# 89
:l009_start# 54
:l010_01# 86
:l010_end# 86
:l011_01# 84
:l011_end# 86
:l012_cont# 82
:l012_end# 83
:l012_start# 82
:l013_cont# 133
:l013_end# 135
:l013_start# 93
:l014_01# 98
:l014_end# 100
:l015_01# 132
:l015_end# 132
:l016_01# 130
:l016_end# 132
:l017_cont# 128
:l017_end# 129
:l017_start# 128
:l019_cont# 196
:l019_end# 199
:l019_start# 178
:l020_01# 219
:l020_010_t# 218
:l020_end# 219
:l021_01# 223
:l021_end# 223
:main# 0
*-- no_destination 0
*@l0000!nconfigs gpr_b_abs 00
*l0000!g_sbpd_wq_hi gpr_a_rel 00
*l0000!g_sbpd_wq_lo gpr_b_rel 01
*l0001!lma gpr_b_rel 0F
*l0001!state_version gpr_b_rel 01
;*l0003!count!!2 gpr_b_rel 03
*l0003!count gpr_a_rel 0E
*l0003!amt gpr_b_rel 04
*$l0004!credits xfer_rel 00 0 both 1 0x0
*l0004!addr_lo gpr_b_rel 05
*l0005!ring_addr_hi gpr_a_rel 00
*l0005!ring_in_addr_lo gpr_b_rel 02
*l0005!ring_out_addr_lo gpr_b_rel 03
*l0005!vid gpr_a_rel 01
*$l0005!cmsg[0] xfer_rel 06 0 both 1 0x0
*l0006!bar_addr_hi gpr_a_rel 0A
*l0006!bar_addr_lo gpr_b_rel 0A
;*l0006!q!!2 gpr_b_rel 04
*l0006!q gpr_b_rel 04
;*l0006!up!!2 gpr_a_rel 02
*l0006!up gpr_a_rel 02
*l0006!maxqs gpr_a_rel 03
*l0006!rid gpr_a_rel 04
*$l0006!bar[0] xfer_rel 00 0 read 6 0xAD
*$l0006!bar[1] xfer_rel 01 0 read 5 0xAD
*$l0006!bar[2] xfer_rel 02 0 read 4 0xAD
*$l0006!bar[3] xfer_rel 03 0 read 3 0xAD
*$l0006!bar[4] xfer_rel 04 0 read 2 0xAD
*$l0006!bar[5] xfer_rel 05 0 read 1 0xAD
*l0007!tmp_lo gpr_a_rel 0B
*l0007!off gpr_b_rel 0B
*l0009!qid gpr_a_rel 05
*l0009!lma gpr_b_rel 05
*l0009!currently_up gpr_b_rel 0E
*l0009!base_addr gpr_b_rel 0F
*l0018!addr_hi gpr_b_rel 05
*l0018!addr_lo gpr_a_rel 07
*$l0018!bitmap[0] xfer_rel 00 0 write 4 0xA1
*$l0018!bitmap[1] xfer_rel 01 0 write 3 0xA1
*$l0018!bitmap[2] xfer_rel 02 0 write 2 0xA1
*$l0018!bitmap[3] xfer_rel 03 0 write 1 0xA1
*l0021!qid gpr_a_rel 08
*l0021!lma gpr_b_rel 06
*l0021!currently_up gpr_b_rel 07
*l0021!base_addr gpr_b_rel 08
*l0030!addr_hi gpr_a_rel 09
*l0030!addr_lo gpr_b_rel 09
*$l0030!bitmap[0] xfer_rel 00 0 write 4 0x97
*$l0030!bitmap[1] xfer_rel 01 0 write 3 0x97
*$l0030!bitmap[2] xfer_rel 02 0 write 2 0x97
*$l0030!bitmap[3] xfer_rel 03 0 write 1 0x97
*l0033!meid gpr_a_rel 0C
;*l0033!addr!!2 gpr_b_rel 0C
;*l0033!addr!!3 gpr_a_rel 0D
;*l0033!addr!!4 gpr_b_rel 0C
*l0033!addr gpr_a_rel 0D
;*l0033!tmp!!2 gpr_b_rel 0D
;*l0033!tmp!!3 gpr_b_rel 0D
;*l0033!tmp!!4 gpr_b_rel 0D
*l0033!tmp gpr_b_rel 0D
*l0034!addr_hi gpr_a_rel 0F
;*l0034!addr_lo!!2 gpr_b_rel 02
*l0034!addr_lo gpr_b_rel 02
;*l0034!lma!!2 gpr_b_rel 03
;*l0034!lma!!3 gpr_b_rel 03
*l0034!lma gpr_b_rel 03
;*l0034!i!!2 gpr_b_rel 0E
*l0034!i gpr_b_rel 0E
*$l0034!out[0] xfer_rel 00 0 both 16 0x67
*$l0034!out[1] xfer_rel 01 0 both 15 0x67
*$l0034!out[2] xfer_rel 02 0 both 14 0x67
*$l0034!out[3] xfer_rel 03 0 both 13 0x67
*$l0034!out[4] xfer_rel 04 0 both 12 0x67
*$l0034!out[5] xfer_rel 05 0 both 11 0x67
*$l0034!out[6] xfer_rel 06 0 both 10 0x67
*$l0034!out[7] xfer_rel 07 0 both 9 0x67
*$l0034!out[8] xfer_rel 08 0 both 8 0x67
*$l0034!out[9] xfer_rel 09 0 both 7 0x67
*$l0034!out[10] xfer_rel 0A 0 both 6 0x67
*$l0034!out[11] xfer_rel 0B 0 both 5 0x67
*$l0034!out[12] xfer_rel 0C 0 both 4 0x67
*$l0034!out[13] xfer_rel 0D 0 both 3 0x67
*$l0034!out[14] xfer_rel 0E 0 both 2 0x67
*$l0034!out[15] xfer_rel 0F 0 both 1 0x67
;*l0035!count!!2 gpr_b_rel 06
*l0035!count gpr_a_rel 00
*l0035!amt gpr_b_rel 07
*$l0036!in_0[0] xfer_rel 00 0 read 4 0x5F
*$l0036!in_0[1] xfer_rel 01 0 read 3 0x5F
*$l0036!in_0[2] xfer_rel 02 0 read 2 0x5F
*$l0036!in_0[3] xfer_rel 03 0 read 1 0x5F
*$l0036!out_0[0] xfer_rel 00 0 write 6 0x59
*$l0036!out_0[1] xfer_rel 01 0 write 5 0x59
*$l0036!out_0[2] xfer_rel 02 0 write 4 0x59
*$l0036!out_0[3] xfer_rel 03 0 write 3 0x59
*$l0036!out_0[4] xfer_rel 04 0 write 2 0x59
*$l0036!out_0[5] xfer_rel 05 0 write 1 0x59
*$l0036!in_1[0] xfer_rel 04 0 read 4 0x55
*$l0036!in_1[1] xfer_rel 05 0 read 3 0x55
*$l0036!in_1[2] xfer_rel 06 0 read 2 0x55
*$l0036!in_1[3] xfer_rel 07 0 read 1 0x55
*$l0036!out_1[0] xfer_rel 06 0 write 6 0x4F
*$l0036!out_1[1] xfer_rel 07 0 write 5 0x4F
*$l0036!out_1[2] xfer_rel 08 0 write 4 0x4F
*$l0036!out_1[3] xfer_rel 09 0 write 3 0x4F
*$l0036!out_1[4] xfer_rel 0A 0 write 2 0x4F
*$l0036!out_1[5] xfer_rel 0B 0 write 1 0x4F
*$l0036!in_2[0] xfer_rel 08 0 read 4 0x4B
*$l0036!in_2[1] xfer_rel 09 0 read 3 0x4B
*$l0036!in_2[2] xfer_rel 0A 0 read 2 0x4B
*$l0036!in_2[3] xfer_rel 0B 0 read 1 0x4B
*$l0036!out_2[0] xfer_rel 0C 0 write 6 0x45
*$l0036!out_2[1] xfer_rel 0D 0 write 5 0x45
*$l0036!out_2[2] xfer_rel 0E 0 write 4 0x45
*$l0036!out_2[3] xfer_rel 0F 0 write 3 0x45
*$l0036!out_2[4] xfer_rel 10 0 write 2 0x45
*$l0036!out_2[5] xfer_rel 11 0 write 1 0x45
*$l0036!in_3[0] xfer_rel 0C 0 read 4 0x41
*$l0036!in_3[1] xfer_rel 0D 0 read 3 0x41
*$l0036!in_3[2] xfer_rel 0E 0 read 2 0x41
*$l0036!in_3[3] xfer_rel 0F 0 read 1 0x41
*$l0036!out_3[0] xfer_rel 12 0 write 6 0x3B
*$l0036!out_3[1] xfer_rel 13 0 write 5 0x3B
*$l0036!out_3[2] xfer_rel 14 0 write 4 0x3B
*$l0036!out_3[3] xfer_rel 15 0 write 3 0x3B
*$l0036!out_3[4] xfer_rel 16 0 write 2 0x3B
*$l0036!out_3[5] xfer_rel 17 0 write 1 0x3B
*$l0036!in_4[0] xfer_rel 10 0 read 4 0x37
*$l0036!in_4[1] xfer_rel 11 0 read 3 0x37
*$l0036!in_4[2] xfer_rel 12 0 read 2 0x37
*$l0036!in_4[3] xfer_rel 13 0 read 1 0x37
*$l0036!out_4[0] xfer_rel 18 0 write 6 0x31
*$l0036!out_4[1] xfer_rel 19 0 write 5 0x31
*$l0036!out_4[2] xfer_rel 1A 0 write 4 0x31
*$l0036!out_4[3] xfer_rel 1B 0 write 3 0x31
*$l0036!out_4[4] xfer_rel 1C 0 write 2 0x31
*$l0036!out_4[5] xfer_rel 1D 0 write 1 0x31
*l0036!g_sig_next_worker gpr_b_rel 02
*l0036!g_lm_qstate_mask gpr_b_rel 03
*l0036!g_cache_addr_lo_mask gpr_b_rel 04
*l0036!g_seq_mask gpr_a_rel 01
*l0036!g_seq_incr gpr_a_rel 02
*l0036!g_in_wq_hi gpr_a_rel 03
*l0036!g_in_wq_lo gpr_b_rel 05
*l0036!g_out_wq_hi gpr_a_rel 04
*l0036!g_out_wq_lo gpr_a_rel 05
;*l0036!ctx!!2 gpr_b_rel 06
*l0036!ctx gpr_b_rel 06
*l0036!next_ctx gpr_a_rel 06
*l0036!lma gpr_a_rel 07
*l0038!sigval gpr_a_rel 08
*l0039!sigval gpr_a_rel 09
*l0040!sigval gpr_a_rel 0A
*l0041!sigval gpr_a_rel 0B
*l0042!sigval gpr_b_rel 07
*l0043!lma gpr_b_rel 08
*l0043!addr_lo gpr_b_rel 09
;*l0043!out_word0!!2 gpr_b_rel 0A
*l0043!out_word0 gpr_a_rel 0C
*$l0043!buf_desc[0] xfer_rel 14 0 read 2 0x19
*$l0043!buf_desc[1] xfer_rel 15 0 read 1 0x19
*l0044!lma gpr_b_rel 0B
*l0044!addr_lo gpr_b_rel 0C
;*l0044!out_word0!!2 gpr_b_rel 0D
*l0044!out_word0 gpr_a_rel 0D
*$l0044!buf_desc[0] xfer_rel 14 0 read 2 0x13
*$l0044!buf_desc[1] xfer_rel 15 0 read 1 0x13
*l0045!lma gpr_b_rel 0E
*l0045!addr_lo gpr_b_rel 0F
;*l0045!out_word0!!2 gpr_b_rel 07
*l0045!out_word0 gpr_a_rel 0E
*$l0045!buf_desc[0] xfer_rel 14 0 read 2 0xD
*$l0045!buf_desc[1] xfer_rel 15 0 read 1 0xD
*l0046!lma gpr_b_rel 08
*l0046!addr_lo gpr_b_rel 09
;*l0046!out_word0!!2 gpr_b_rel 0A
*l0046!out_word0 gpr_a_rel 0F
*$l0046!buf_desc[0] xfer_rel 14 0 read 2 0x7
*$l0046!buf_desc[1] xfer_rel 15 0 read 1 0x7
*l0047!lma gpr_b_rel 0B
*l0047!addr_lo gpr_b_rel 0C
;*l0047!out_word0!!2 gpr_b_rel 0D
*l0047!out_word0 gpr_a_rel 06
*$l0047!buf_desc[0] xfer_rel 14 0 read 2 0x1
*$l0047!buf_desc[1] xfer_rel 15 0 read 1 0x1
*l0047!fl_read_sig signal 0B 0
*l0046!fl_read_sig signal 0B 0
*l0045!fl_read_sig signal 0B 0
*l0044!fl_read_sig signal 0B 0
*l0043!fl_read_sig signal 0B 0
*l0036!ordersig signal 0F 0
*l0036!outsig_4 signal 0A 0
*l0036!insig_4 signal 09 0
*l0036!outsig_3 signal 08 0
*l0036!insig_3 signal 07 0
*l0036!outsig_2 signal 06 0
*l0036!insig_2 signal 05 0
*l0036!outsig_1 signal 04 0
*l0036!insig_1 signal 03 0
*l0036!outsig_0 signal 02 0
*l0036!insig_0 signal 01 0
*l0034!out_sig signal 02 0
*l0034!out_sig!!2 signal 02 0
*l0030!bitmap_sig signal 02 0
*l0018!bitmap_sig signal 02 0
*l0006!read_sig signal 02 0
*l0005!put_sig signal 02 0
*l0005!get_sig signal 02 0
*l0005!get_sig!!3 signal 01 0
*l0005!get_sig!!2 signal 01 0
*l0004!iosig signal 02 0
*l0001!state_alarm_sig signal 01 0
*l0001!_nfd_cfg_sig_sb signal 0E 1 _nfd_cfg_sig_sb
*l0001!_nfd_credit_sig_sb signal 0D 1 _nfd_credit_sig_sb
.%lm_init_sym sb_ctx_base 0x0 0x400 0x4
.%lm_sym sb_debug_snapshot 0x400 0x400 0x4
.%lm_sym sb_wq_credits 0x800 0x4 0x4
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 110 emem0_queues global 0x400
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 121 emem1_queues global 0x400
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 162 cls_rings island 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 181 cls_apsignals island 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 197 cls_apfilters island 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 366 pcie0_cpp2pcie_bars global 0x8
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 367 pcie0_dma_cfg_regs global 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 369 pcie0_topci_hi global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 370 pcie0_topci_med global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 371 pcie0_topci_lo global 0x80
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 372 pcie0_frompci_hi global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 373 pcie0_frompci_med global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 374 pcie0_frompci_lo global 0x80
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 378 pcie1_cpp2pcie_bars global 0x8
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 379 pcie1_dma_cfg_regs global 0x10
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 381 pcie1_topci_hi global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 382 pcie1_topci_med global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 383 pcie1_topci_lo global 0x80
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 384 pcie1_frompci_hi global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 385 pcie1_frompci_med global 0x40
.%declare_resource "/opt/netronome/components/standardlibrary/include/nfp_chipres.h" 386 pcie1_frompci_lo global 0x80
.%alloc_mem nfd_cfg_base0 emem0 global 0x200000 0x200000 addr40
.%init sb_ctx_base+0 0
.%init sb_ctx_base+4 0
.%init sb_ctx_base+8 0
.%init sb_ctx_base+12 0
.%init sb_ctx_base+16 0
.%init sb_ctx_base+20 0
.%init sb_ctx_base+24 0
.%init sb_ctx_base+28 0
.%init sb_ctx_base+32 0
.%init sb_ctx_base+36 0
.%init sb_ctx_base+40 0
.%init sb_ctx_base+44 0
.%init sb_ctx_base+48 0
.%init sb_ctx_base+52 0
.%init sb_ctx_base+56 0
.%init sb_ctx_base+60 0
.%init sb_ctx_base+64 0
.%init sb_ctx_base+68 0
.%init sb_ctx_base+72 0
.%init sb_ctx_base+76 0
.%init sb_ctx_base+80 0
.%init sb_ctx_base+84 0
.%init sb_ctx_base+88 0
.%init sb_ctx_base+92 0
.%init sb_ctx_base+96 0
.%init sb_ctx_base+100 0
.%init sb_ctx_base+104 0
.%init sb_ctx_base+108 0
.%init sb_ctx_base+112 0
.%init sb_ctx_base+116 0
.%init sb_ctx_base+120 0
.%init sb_ctx_base+124 0
.%init sb_ctx_base+128 0
.%init sb_ctx_base+132 0
.%init sb_ctx_base+136 0
.%init sb_ctx_base+140 0
.%init sb_ctx_base+144 0
.%init sb_ctx_base+148 0
.%init sb_ctx_base+152 0
.%init sb_ctx_base+156 0
.%init sb_ctx_base+160 0
.%init sb_ctx_base+164 0
.%init sb_ctx_base+168 0
.%init sb_ctx_base+172 0
.%init sb_ctx_base+176 0
.%init sb_ctx_base+180 0
.%init sb_ctx_base+184 0
.%init sb_ctx_base+188 0
.%init sb_ctx_base+192 0
.%init sb_ctx_base+196 0
.%init sb_ctx_base+200 0
.%init sb_ctx_base+204 0
.%init sb_ctx_base+208 0
.%init sb_ctx_base+212 0
.%init sb_ctx_base+216 0
.%init sb_ctx_base+220 0
.%init sb_ctx_base+224 0
.%init sb_ctx_base+228 0
.%init sb_ctx_base+232 0
.%init sb_ctx_base+236 0
.%init sb_ctx_base+240 0
.%init sb_ctx_base+244 0
.%init sb_ctx_base+248 0
.%init sb_ctx_base+252 0
.%init sb_ctx_base+256 0
.%init sb_ctx_base+260 0
.%init sb_ctx_base+264 0
.%init sb_ctx_base+268 0
.%init sb_ctx_base+272 0
.%init sb_ctx_base+276 0
.%init sb_ctx_base+280 0
.%init sb_ctx_base+284 0
.%init sb_ctx_base+288 0
.%init sb_ctx_base+292 0
.%init sb_ctx_base+296 0
.%init sb_ctx_base+300 0
.%init sb_ctx_base+304 0
.%init sb_ctx_base+308 0
.%init sb_ctx_base+312 0
.%init sb_ctx_base+316 0
.%init sb_ctx_base+320 0
.%init sb_ctx_base+324 0
.%init sb_ctx_base+328 0
.%init sb_ctx_base+332 0
.%init sb_ctx_base+336 0
.%init sb_ctx_base+340 0
.%init sb_ctx_base+344 0
.%init sb_ctx_base+348 0
.%init sb_ctx_base+352 0
.%init sb_ctx_base+356 0
.%init sb_ctx_base+360 0
.%init sb_ctx_base+364 0
.%init sb_ctx_base+368 0
.%init sb_ctx_base+372 0
.%init sb_ctx_base+376 0
.%init sb_ctx_base+380 0
.%init sb_ctx_base+384 0
.%init sb_ctx_base+388 0
.%init sb_ctx_base+392 0
.%init sb_ctx_base+396 0
.%init sb_ctx_base+400 0
.%init sb_ctx_base+404 0
.%init sb_ctx_base+408 0
.%init sb_ctx_base+412 0
.%init sb_ctx_base+416 0
.%init sb_ctx_base+420 0
.%init sb_ctx_base+424 0
.%init sb_ctx_base+428 0
.%init sb_ctx_base+432 0
.%init sb_ctx_base+436 0
.%init sb_ctx_base+440 0
.%init sb_ctx_base+444 0
.%init sb_ctx_base+448 0
.%init sb_ctx_base+452 0
.%init sb_ctx_base+456 0
.%init sb_ctx_base+460 0
.%init sb_ctx_base+464 0
.%init sb_ctx_base+468 0
.%init sb_ctx_base+472 0
.%init sb_ctx_base+476 0
.%init sb_ctx_base+480 0
.%init sb_ctx_base+484 0
.%init sb_ctx_base+488 0
.%init sb_ctx_base+492 0
.%init sb_ctx_base+496 0
.%init sb_ctx_base+500 0
.%init sb_ctx_base+504 0
.%init sb_ctx_base+508 0
.%init sb_ctx_base+512 0
.%init sb_ctx_base+516 0
.%init sb_ctx_base+520 0
.%init sb_ctx_base+524 0
.%init sb_ctx_base+528 0
.%init sb_ctx_base+532 0
.%init sb_ctx_base+536 0
.%init sb_ctx_base+540 0
.%init sb_ctx_base+544 0
.%init sb_ctx_base+548 0
.%init sb_ctx_base+552 0
.%init sb_ctx_base+556 0
.%init sb_ctx_base+560 0
.%init sb_ctx_base+564 0
.%init sb_ctx_base+568 0
.%init sb_ctx_base+572 0
.%init sb_ctx_base+576 0
.%init sb_ctx_base+580 0
.%init sb_ctx_base+584 0
.%init sb_ctx_base+588 0
.%init sb_ctx_base+592 0
.%init sb_ctx_base+596 0
.%init sb_ctx_base+600 0
.%init sb_ctx_base+604 0
.%init sb_ctx_base+608 0
.%init sb_ctx_base+612 0
.%init sb_ctx_base+616 0
.%init sb_ctx_base+620 0
.%init sb_ctx_base+624 0
.%init sb_ctx_base+628 0
.%init sb_ctx_base+632 0
.%init sb_ctx_base+636 0
.%init sb_ctx_base+640 0
.%init sb_ctx_base+644 0
.%init sb_ctx_base+648 0
.%init sb_ctx_base+652 0
.%init sb_ctx_base+656 0
.%init sb_ctx_base+660 0
.%init sb_ctx_base+664 0
.%init sb_ctx_base+668 0
.%init sb_ctx_base+672 0
.%init sb_ctx_base+676 0
.%init sb_ctx_base+680 0
.%init sb_ctx_base+684 0
.%init sb_ctx_base+688 0
.%init sb_ctx_base+692 0
.%init sb_ctx_base+696 0
.%init sb_ctx_base+700 0
.%init sb_ctx_base+704 0
.%init sb_ctx_base+708 0
.%init sb_ctx_base+712 0
.%init sb_ctx_base+716 0
.%init sb_ctx_base+720 0
.%init sb_ctx_base+724 0
.%init sb_ctx_base+728 0
.%init sb_ctx_base+732 0
.%init sb_ctx_base+736 0
.%init sb_ctx_base+740 0
.%init sb_ctx_base+744 0
.%init sb_ctx_base+748 0
.%init sb_ctx_base+752 0
.%init sb_ctx_base+756 0
.%init sb_ctx_base+760 0
.%init sb_ctx_base+764 0
.%init sb_ctx_base+768 0
.%init sb_ctx_base+772 0
.%init sb_ctx_base+776 0
.%init sb_ctx_base+780 0
.%init sb_ctx_base+784 0
.%init sb_ctx_base+788 0
.%init sb_ctx_base+792 0
.%init sb_ctx_base+796 0
.%init sb_ctx_base+800 0
.%init sb_ctx_base+804 0
.%init sb_ctx_base+808 0
.%init sb_ctx_base+812 0
.%init sb_ctx_base+816 0
.%init sb_ctx_base+820 0
.%init sb_ctx_base+824 0
.%init sb_ctx_base+828 0
.%init sb_ctx_base+832 0
.%init sb_ctx_base+836 0
.%init sb_ctx_base+840 0
.%init sb_ctx_base+844 0
.%init sb_ctx_base+848 0
.%init sb_ctx_base+852 0
.%init sb_ctx_base+856 0
.%init sb_ctx_base+860 0
.%init sb_ctx_base+864 0
.%init sb_ctx_base+868 0
.%init sb_ctx_base+872 0
.%init sb_ctx_base+876 0
.%init sb_ctx_base+880 0
.%init sb_ctx_base+884 0
.%init sb_ctx_base+888 0
.%init sb_ctx_base+892 0
.%init sb_ctx_base+896 0
.%init sb_ctx_base+900 0
.%init sb_ctx_base+904 0
.%init sb_ctx_base+908 0
.%init sb_ctx_base+912 0
.%init sb_ctx_base+916 0
.%init sb_ctx_base+920 0
.%init sb_ctx_base+924 0
.%init sb_ctx_base+928 0
.%init sb_ctx_base+932 0
.%init sb_ctx_base+936 0
.%init sb_ctx_base+940 0
.%init sb_ctx_base+944 0
.%init sb_ctx_base+948 0
.%init sb_ctx_base+952 0
.%init sb_ctx_base+956 0
.%init sb_ctx_base+960 0
.%init sb_ctx_base+964 0
.%init sb_ctx_base+968 0
.%init sb_ctx_base+972 0
.%init sb_ctx_base+976 0
.%init sb_ctx_base+980 0
.%init sb_ctx_base+984 0
.%init sb_ctx_base+988 0
.%init sb_ctx_base+992 0
.%init sb_ctx_base+996 0
.%init sb_ctx_base+1000 0
.%init sb_ctx_base+1004 0
.%init sb_ctx_base+1008 0
.%init sb_ctx_base+1012 0
.%init sb_ctx_base+1016 0
.%init sb_ctx_base+1020 0
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb.uc" 177 nfd_out_ring_num00 emem0_queues global 0x1 0x1
.%alloc_mem nfd_out_ring_mem0 emem0 global 0x80000 0x80000 addr40
.%init_mu_ring "nfd_out_ring_num00 &v" nfd_out_ring_mem0 "0"
.%alloc_mem fl_cache_mem0 emem0.emem_cache_upper global 0x80000 0x80000 addr40
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb.uc" 187 nfd_cfg_ring_nums emem0_queues global 0x20 0
.%declare_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb.uc" 188 nfd_cfg_ring_nums0 global 0x8 nfd_cfg_ring_nums
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb.uc" 189 nfd_cfg_ring_num00 nfd_cfg_ring_nums0 global 0x1 0
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb.uc" 190 nfd_cfg_ring_num01 nfd_cfg_ring_nums0 global 0x1 0
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb.uc" 191 nfd_cfg_ring_num02 nfd_cfg_ring_nums0 global 0x1 0
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb.uc" 192 nfd_cfg_ring_num03 nfd_cfg_ring_nums0 global 0x1 0
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb.uc" 193 nfd_cfg_ring_num04 nfd_cfg_ring_nums0 global 0x1 0
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb.uc" 194 nfd_cfg_ring_num05 nfd_cfg_ring_nums0 global 0x1 0
.%alloc_mem nfd_out_sb_debug_state0 emem0 global 0x410 0x0 addr40
.%init_reg @B0 0
.%alloc_mem nfd_out_sb_release0 ctm island 0x400 0x400 addr40
.%alloc_mem nfd_out_sb_wq_credits0 ctm island 0x4 0x4 addr40
.%alloc_mem nfd_out_sb_wq_mem0 cls island 0x1000 0x1000 addr40
.%alloc_resource "/opt/netronome/components/ng_nfd/me/blocks/vnic/pci_out_sb_iface.uc" 65 nfd_out_sb_ring_num0 cls_rings island 0x1 0x1 0xf
.%type R
.%type SI
.%scope global
.%var $l0047!buf_desc[1] 0 R
.%liverange 0 $R21 369:377
.%liverange 0 ~$R21 261:272 282:284
.%var $l0047!buf_desc[0] 0 R
.%liverange 0 $R20 369:377
.%liverange 0 ~$R20 261:272 282:284
.%var l0047!out_word0 0 R
.%liverange 0 A6 367:373
.%liverange 0 B13 374:377
.%liverange 0 ~B13 261:301 306:308
.%var l0047!addr_lo 0 R
.%liverange 0 B12 368:377
.%liverange 0 ~B12 261:295 306:308
.%var l0047!lma 0 R
.%liverange 0 B11 361:377
.%liverange 0 ~B11 261:288 306:308
.%var $l0046!buf_desc[1] 0 R
.%liverange 0 $R21 345:353 357:368 378:380
.%var $l0046!buf_desc[0] 0 R
.%liverange 0 $R20 345:353 357:368 378:380
.%var l0046!out_word0 0 R
.%liverange 0 A15 343:349
.%liverange 0 B10 350:353 357:380
.%liverange 0 ~B10 261:277 282:284
.%var l0046!addr_lo 0 R
.%liverange 0 B9 344:353 357:380
.%liverange 0 ~B9 261:271 282:284
.%var l0046!lma 0 R
.%liverange 0 B8 337:353 357:380
.%liverange 0 ~B8 261:264 282:284
.%var $l0045!buf_desc[1] 0 R
.%liverange 0 $R21 321:329 333:344 354:356
.%var $l0045!buf_desc[0] 0 R
.%liverange 0 $R20 321:329 333:344 354:356
.%var l0045!out_word0 0 R
.%liverange 0 A14 319:325
.%liverange 0 B7 326:329 333:380
.%liverange 0 ~B7 261:318 330:332
.%var l0045!addr_lo 0 R
.%liverange 0 B15 320:329 333:380
.%liverange 0 ~B15 261:319 330:332
.%var l0045!lma 0 R
.%liverange 0 B14 313:329 333:380
.%liverange 0 ~B14 261:312 330:332
.%var $l0044!buf_desc[1] 0 R
.%liverange 0 $R21 297:305 309:320 330:332
.%var $l0044!buf_desc[0] 0 R
.%liverange 0 $R20 297:305 309:320 330:332
.%var l0044!out_word0 0 R
.%liverange 0 A13 295:301
.%liverange 0 B13 302:305 309:373 378:380
.%var l0044!addr_lo 0 R
.%liverange 0 B12 296:305 309:367 378:380
.%var l0044!lma 0 R
.%liverange 0 B11 289:305 309:360 378:380
.%var $l0043!buf_desc[1] 0 R
.%liverange 0 $R21 273:281 285:296 306:308
.%var $l0043!buf_desc[0] 0 R
.%liverange 0 $R20 273:281 285:296 306:308
.%var l0043!out_word0 0 R
.%liverange 0 A12 271:277
.%liverange 0 B10 278:281 285:349 354:356
.%var l0043!addr_lo 0 R
.%liverange 0 B9 272:281 285:343 354:356
.%var l0043!lma 0 R
.%liverange 0 B8 265:281 285:336 354:356
.%var l0042!sigval 0 R
.%liverange 0 B7 258:260
.%liverange 0 ~B7 261:325 330:332
.%var l0041!sigval 0 R
.%liverange 0 A11 253:380
.%var l0040!sigval 0 R
.%liverange 0 A10 248:380
.%var l0039!sigval 0 R
.%liverange 0 A9 243:380
.%var l0038!sigval 0 R
.%liverange 0 A8 238:380
.%var l0036!lma 0 R
.%liverange 0 A7 231:380
.%var l0036!next_ctx 0 R
.%liverange 0 A6 220:260
.%liverange 0 ~A6 261:366 378:380
.%var l0036!ctx 0 R
.%liverange 0 B6 210:380
.%var l0036!g_out_wq_lo 0 R
.%liverange 0 A5 209:380
.%var l0036!g_out_wq_hi 0 R
.%liverange 0 A4 209:380
.%var l0036!g_in_wq_lo 0 R
.%liverange 0 B5 209:380
.%var l0036!g_in_wq_hi 0 R
.%liverange 0 A3 209:380
.%var l0036!g_seq_incr 0 R
.%liverange 0 A2 209:380
.%var l0036!g_seq_mask 0 R
.%liverange 0 A1 209:380
.%var l0036!g_cache_addr_lo_mask 0 R
.%liverange 0 B4 209:380
.%var l0036!g_lm_qstate_mask 0 R
.%liverange 0 B3 209:380
.%var l0036!g_sig_next_worker 0 R
.%liverange 0 B2 209:380
.%var $l0036!out_4[5] 0 R
.%liverange 0 $W29 209:380
.%var $l0036!out_4[4] 0 R
.%liverange 0 $W28 209:380
.%var $l0036!out_4[3] 0 R
.%liverange 0 $W27 209:380
.%var $l0036!out_4[2] 0 R
.%liverange 0 $W26 209:380
.%var $l0036!out_4[1] 0 R
.%liverange 0 $W25 209:380
.%var $l0036!out_4[0] 0 R
.%liverange 0 $W24 209:380
.%var $l0036!in_4[3] 0 R
.%liverange 0 $R19 209:380
.%var $l0036!in_4[2] 0 R
.%liverange 0 $R18 209:380
.%var $l0036!in_4[1] 0 R
.%liverange 0 $R17 209:380
.%var $l0036!in_4[0] 0 R
.%liverange 0 $R16 209:380
.%var $l0036!out_3[5] 0 R
.%liverange 0 $W23 209:380
.%var $l0036!out_3[4] 0 R
.%liverange 0 $W22 209:380
.%var $l0036!out_3[3] 0 R
.%liverange 0 $W21 209:380
.%var $l0036!out_3[2] 0 R
.%liverange 0 $W20 209:380
.%var $l0036!out_3[1] 0 R
.%liverange 0 $W19 209:380
.%var $l0036!out_3[0] 0 R
.%liverange 0 $W18 209:380
.%var $l0036!in_3[3] 0 R
.%liverange 0 $R15 209:380
.%var $l0036!in_3[2] 0 R
.%liverange 0 $R14 209:380
.%var $l0036!in_3[1] 0 R
.%liverange 0 $R13 209:380
.%var $l0036!in_3[0] 0 R
.%liverange 0 $R12 209:380
.%var $l0036!out_2[5] 0 R
.%liverange 0 $W17 209:380
.%var $l0036!out_2[4] 0 R
.%liverange 0 $W16 209:380
.%var $l0036!out_2[3] 0 R
.%liverange 0 $W15 209:380
.%var $l0036!out_2[2] 0 R
.%liverange 0 $W14 209:380
.%var $l0036!out_2[1] 0 R
.%liverange 0 $W13 209:380
.%var $l0036!out_2[0] 0 R
.%liverange 0 $W12 209:380
.%var $l0036!in_2[3] 0 R
.%liverange 0 $R11 209:380
.%var $l0036!in_2[2] 0 R
.%liverange 0 $R10 209:380
.%var $l0036!in_2[1] 0 R
.%liverange 0 $R9 209:380
.%var $l0036!in_2[0] 0 R
.%liverange 0 $R8 209:380
.%var $l0036!out_1[5] 0 R
.%liverange 0 $W11 209:380
.%var $l0036!out_1[4] 0 R
.%liverange 0 $W10 209:380
.%var $l0036!out_1[3] 0 R
.%liverange 0 $W9 209:380
.%var $l0036!out_1[2] 0 R
.%liverange 0 $W8 209:380
.%var $l0036!out_1[1] 0 R
.%liverange 0 $W7 209:380
.%var $l0036!out_1[0] 0 R
.%liverange 0 $W6 209:380
.%var $l0036!in_1[3] 0 R
.%liverange 0 $R7 209:380
.%var $l0036!in_1[2] 0 R
.%liverange 0 $R6 209:380
.%var $l0036!in_1[1] 0 R
.%liverange 0 $R5 209:380
.%var $l0036!in_1[0] 0 R
.%liverange 0 $R4 209:380
.%var $l0036!out_0[5] 0 R
.%liverange 0 $W5 209:380
.%var $l0036!out_0[4] 0 R
.%liverange 0 $W4 209:380
.%var $l0036!out_0[3] 0 R
.%liverange 0 $W3 209:380
.%var $l0036!out_0[2] 0 R
.%liverange 0 $W2 209:380
.%var $l0036!out_0[1] 0 R
.%liverange 0 $W1 209:380
.%var $l0036!out_0[0] 0 R
.%liverange 0 $W0 209:380
.%var $l0036!in_0[3] 0 R
.%liverange 0 $R3 209:380
.%var $l0036!in_0[2] 0 R
.%liverange 0 $R2 209:380
.%var $l0036!in_0[1] 0 R
.%liverange 0 $R1 209:380
.%var $l0036!in_0[0] 0 R
.%liverange 0 $R0 209:380
.%var l0035!amt 0 R
.%liverange 0 B7 201:207
.%liverange 0 ~B7 16:106 135:200
.%var l0035!count 0 R
.%liverange 0 A0 203:203
.%liverange 0 B6 204:207
.%liverange 0 ~B6 16:101 135:202
.%var $l0034!out[15] 0 R
.%liverange 0 $W15 194:198
.%liverange 0 ~$W15 16:193 199:207
.%liverange 0 $R15 382:382
.%var $l0034!out[14] 0 R
.%liverange 0 $W14 193:198
.%liverange 0 ~$W14 16:192 199:207
.%liverange 0 $R14 382:382
.%var $l0034!out[13] 0 R
.%liverange 0 $W13 192:198
.%liverange 0 ~$W13 16:191 199:207
.%liverange 0 $R13 382:382
.%var $l0034!out[12] 0 R
.%liverange 0 $W12 191:198
.%liverange 0 ~$W12 16:190 199:207
.%liverange 0 $R12 382:382
.%var $l0034!out[11] 0 R
.%liverange 0 $W11 190:198
.%liverange 0 ~$W11 16:189 199:207
.%liverange 0 $R11 382:382
.%var $l0034!out[10] 0 R
.%liverange 0 $W10 189:198
.%liverange 0 ~$W10 16:188 199:207
.%liverange 0 $R10 382:382
.%var $l0034!out[9] 0 R
.%liverange 0 $W9 188:198
.%liverange 0 ~$W9 16:187 199:207
.%liverange 0 $R9 382:382
.%var $l0034!out[8] 0 R
.%liverange 0 $W8 187:198
.%liverange 0 ~$W8 16:186 199:207
.%liverange 0 $R8 382:382
.%var $l0034!out[7] 0 R
.%liverange 0 $W7 186:198
.%liverange 0 ~$W7 16:185 199:207
.%liverange 0 $R7 382:382
.%var $l0034!out[6] 0 R
.%liverange 0 $W6 185:198
.%liverange 0 ~$W6 16:135 148:184 199:207
.%liverange 0 $R6 382:382
.%var $l0034!out[5] 0 R
.%liverange 0 $W5 184:198
.%liverange 0 ~$W5 16:183 199:207
.%liverange 0 $R5 382:382
.%var $l0034!out[4] 0 R
.%liverange 0 $W4 183:198
.%liverange 0 ~$W4 16:182 199:207
.%liverange 0 $R4 382:382
.%var $l0034!out[3] 0 R
.%liverange 0 $W3 170:207
.%liverange 0 ~$W3 16:76 84:122 130:169
.%liverange 0 $R3 382:382
.%var $l0034!out[2] 0 R
.%liverange 0 $W2 169:207
.%liverange 0 ~$W2 16:75 84:121 130:168
.%liverange 0 $R2 382:382
.%var $l0034!out[1] 0 R
.%liverange 0 $W1 168:207
.%liverange 0 ~$W1 16:74 84:120 130:167
.%liverange 0 $R1 382:382
.%var $l0034!out[0] 0 R
.%liverange 0 $W0 167:207
.%liverange 0 ~$W0 16:20 25:73 84:119 130:166
.%liverange 0 $R0 382:382
.%var l0034!i 0 R
.%liverange 0 B14 156:207
.%liverange 0 ~B14 16:60 90:155
.%var l0034!lma 0 R
.%liverange 0 B3 150:207
.%liverange 0 ~B3 16:32 148:149
.%var l0034!addr_lo 0 R
.%liverange 0 B2 159:207
.%liverange 0 ~B2 16:30 148:158
.%var l0034!addr_hi 0 R
.%liverange 0 A15 157:207
.%liverange 0 ~A15 16:156
.%var l0033!tmp 0 R
.%liverange 0 B13 139:147
.%liverange 0 ~B13 16:138 148:207
.%var l0033!addr 0 R
.%liverange 0 A13 141:142 144:145
.%liverange 0 B12 143:143 146:147
.%liverange 0 ~B12 16:140 148:207
.%var l0033!meid 0 R
.%liverange 0 A12 138:147
.%liverange 0 ~A12 16:137 148:207
.%var $l0030!bitmap[3] 0 R
.%liverange 0 $W3 123:129
.%liverange 0 ~$W3 16:76 84:122 130:169
.%var $l0030!bitmap[2] 0 R
.%liverange 0 $W2 122:129
.%liverange 0 ~$W2 16:75 84:121 130:168
.%var $l0030!bitmap[1] 0 R
.%liverange 0 $W1 121:129
.%liverange 0 ~$W1 16:74 84:120 130:167
.%var $l0030!bitmap[0] 0 R
.%liverange 0 $W0 120:129
.%liverange 0 ~$W0 16:20 25:73 84:119 130:166
.%var l0030!addr_lo 0 R
.%liverange 0 B9 119:129
.%liverange 0 ~B9 16:118 130:207
.%var l0030!addr_hi 0 R
.%liverange 0 A9 117:129
.%liverange 0 ~A9 16:116 130:207
.%var l0021!base_addr 0 R
.%liverange 0 B8 126:129
.%liverange 0 ~B8 16:125 130:207
.%var l0021!currently_up 0 R
.%liverange 0 B7 107:134
.%liverange 0 ~B7 16:106 135:200
.%var l0021!lma 0 R
.%liverange 0 B6 102:134
.%liverange 0 ~B6 16:101 135:203
.%var l0021!qid 0 R
.%liverange 0 A8 101:134
.%liverange 0 ~A8 16:100 135:207
.%var $l0018!bitmap[3] 0 R
.%liverange 0 $W3 77:83
.%liverange 0 ~$W3 16:76 84:122 130:169
.%var $l0018!bitmap[2] 0 R
.%liverange 0 $W2 76:83
.%liverange 0 ~$W2 16:75 84:121 130:168
.%var $l0018!bitmap[1] 0 R
.%liverange 0 $W1 75:83
.%liverange 0 ~$W1 16:74 84:120 130:167
.%var $l0018!bitmap[0] 0 R
.%liverange 0 $W0 74:83
.%liverange 0 ~$W0 16:20 25:73 84:119 130:166
.%var l0018!addr_lo 0 R
.%liverange 0 A7 73:83
.%liverange 0 ~A7 16:72 84:207
.%var l0018!addr_hi 0 R
.%liverange 0 B5 71:83
.%liverange 0 ~B5 16:18 25:55 86:207
.%var l0009!base_addr 0 R
.%liverange 0 B15 80:83
.%liverange 0 ~B15 16:79 84:207
.%var l0009!currently_up 0 R
.%liverange 0 B14 61:89
.%liverange 0 ~B14 16:60 90:155
.%var l0009!lma 0 R
.%liverange 0 B5 56:70 84:85
.%liverange 0 ~B5 16:18 25:55 86:207
.%var l0009!qid 0 R
.%liverange 0 A5 55:89
.%liverange 0 ~A5 16:54 90:207
.%var l0007!off 0 R
.%liverange 0 B11 44:147
.%liverange 0 ~B11 16:43 148:207
.%var l0007!tmp_lo 0 R
.%liverange 0 A11 42:147
.%liverange 0 ~A11 16:41 148:207
.%var $l0006!bar[5] 0 R
.%liverange 0 $R5 46:147
.%liverange 0 ~$R5 16:45 148:207
.%var $l0006!bar[4] 0 R
.%liverange 0 $R4 46:147
.%liverange 0 ~$R4 16:45 148:207
.%var $l0006!bar[3] 0 R
.%liverange 0 $R3 46:147
.%liverange 0 ~$R3 16:45 148:207
.%var $l0006!bar[2] 0 R
.%liverange 0 $R2 46:147
.%liverange 0 ~$R2 16:45 148:207
.%var $l0006!bar[1] 0 R
.%liverange 0 $R1 46:147
.%liverange 0 ~$R1 16:45 148:207
.%var $l0006!bar[0] 0 R
.%liverange 0 $R0 46:147
.%liverange 0 ~$R0 16:21 25:45 148:207
.%var l0006!rid 0 R
.%liverange 0 A4 50:147
.%liverange 0 ~A4 16:49 148:207
.%var l0006!maxqs 0 R
.%liverange 0 A3 49:147
.%liverange 0 ~A3 16:48 148:207
.%var l0006!up 0 R
.%liverange 0 A2 54:89 97:97 100:134
.%liverange 0 ~A2 16:53 90:96 98:99 135:207
.%var l0006!q 0 R
.%liverange 0 B4 51:89 91:147
.%liverange 0 ~B4 16:50 90:90 148:207
.%var l0006!bar_addr_lo 0 R
.%liverange 0 B10 45:147
.%liverange 0 ~B10 16:44 148:207
.%var l0006!bar_addr_hi 0 R
.%liverange 0 A10 40:147
.%liverange 0 ~A10 16:39 148:207
.%var $l0005!cmsg[0] 0 R
.%liverange 0 $W6 136:147
.%liverange 0 ~$W6 16:135 148:184 199:207
.%liverange 0 $R6 35:147
.%liverange 0 ~$R6 16:34 148:207
.%var l0005!vid 0 R
.%liverange 0 A1 39:147
.%liverange 0 ~A1 16:38 148:207
.%var l0005!ring_out_addr_lo 0 R
.%liverange 0 B3 33:147
.%liverange 0 ~B3 16:32 148:149
.%var l0005!ring_in_addr_lo 0 R
.%liverange 0 B2 31:147
.%liverange 0 ~B2 16:30 148:158
.%var l0005!ring_addr_hi 0 R
.%liverange 0 A0 29:147
.%liverange 0 ~A0 16:28 148:202
.%var l0004!addr_lo 0 R
.%liverange 0 B5 19:24
.%liverange 0 ~B5 16:18 25:55 90:207
.%var $l0004!credits 0 R
.%liverange 0 $W0 21:24
.%liverange 0 ~$W0 16:20 25:73 84:119 130:166
.%liverange 0 $R0 22:24
.%liverange 0 ~$R0 16:21 25:45 148:207
.%var l0003!amt 0 R
.%liverange 0 B4 10:15
.%liverange 0 ~B4 16:50 90:90 148:207
.%var l0003!count 0 R
.%liverange 0 A14 12:12
.%liverange 0 B3 13:15
.%liverange 0 ~B3 16:32 148:149
.%var l0001!state_version 0 R
.%liverange 0 B1 7:207
.%var l0001!lma 0 R
.%liverange 0 B15 2:15
.%liverange 0 ~B15 16:79 84:207
.%var l0000!g_sbpd_wq_lo 0 R
.%liverange 0 B1 215:380
.%var l0000!g_sbpd_wq_hi 0 R
.%liverange 0 A0 214:380
.%var @l0000!nconfigs 0 R
.%liverange 0 @B0 0:381
.%var l0047!fl_read_sig 1 R
.%liverange 0 G11 369:374
.%var l0046!fl_read_sig 1 R
.%liverange 0 G11 345:350
.%var l0045!fl_read_sig 1 R
.%liverange 0 G11 321:326
.%var l0044!fl_read_sig 1 R
.%liverange 0 G11 297:302
.%var l0043!fl_read_sig 1 R
.%liverange 0 G11 273:278
.%var l0036!ordersig 1 R
.%liverange 0 G15 208:212 216:380
.%var l0036!outsig_4 1 R
.%liverange 0 G10 208:212 216:233 236:380
.%var l0036!insig_4 1 R
.%liverange 0 G9 208:212 216:233 236:380
.%var l0036!outsig_3 1 R
.%liverange 0 G8 208:212 216:233 236:380
.%var l0036!insig_3 1 R
.%liverange 0 G7 208:212 216:233 236:380
.%var l0036!outsig_2 1 R
.%liverange 0 G6 208:212 216:233 236:380
.%var l0036!insig_2 1 R
.%liverange 0 G5 208:212 216:233 236:380
.%var l0036!outsig_1 1 R
.%liverange 0 G4 208:212 216:233 236:380
.%var l0036!insig_1 1 R
.%liverange 0 G3 208:212 216:233 236:380
.%var l0036!outsig_0 1 R
.%liverange 0 G2 208:212 216:233 236:380
.%var l0036!insig_0 1 R
.%liverange 0 G1 208:212 216:233 236:380
.%var l0034!out_sig 1 R
.%liverange 0 G2 171:171 195:195
.%var l0030!bitmap_sig 1 R
.%liverange 0 G2 124:128
.%var l0018!bitmap_sig 1 R
.%liverange 0 G2 78:82
.%var l0006!read_sig 1 R
.%liverange 0 G2 46:46
.%var l0005!put_sig 1 R
.%liverange 0 G2 137:137
.%var l0005!get_sig 1 R
.%liverange 0 D2 35:36
.%liverange 0 G1 382:382
.%var l0004!iosig 1 R
.%liverange 0 D2 22:23
.%var l0001!state_alarm_sig 1 R
.%liverange 0 G1 1:5 7:23 25:47 50:52 54:78 82:124 128:176 178:197 199:205
.%var l0001!_nfd_cfg_sig_sb 1 R
.%liverange 0 G14 1:5 7:23 25:47 50:52 54:78 82:124 128:176 178:197 199:205
.%var l0001!_nfd_credit_sig_sb 1 R
.%liverange 0 G13 1:5 7:23 25:47 50:52 54:78 82:124 128:176 178:197 199:205
.%scope end
.%import_expr common_code 18 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0xFFFF &
.%import_expr common_code 19 <27:20:8,7:0:0> nfd_out_sb_wq_credits0 &v 0x10 >> 0xFFFF &
.%import_expr common_code 28 <27:20:8,17:10:0> __addr_emem0 &i 0x8 >> 0xFFFF &
.%import_expr common_code 29 <27:20:8,17:10:0> __addr_emem0 &i 0x8 >> 0x10 >> 0xFFFF &
.%import_expr common_code 30 <27:20:8,7:0:0> nfd_cfg_ring_num03 &v 0xFFFF &
.%import_expr common_code 31 <27:20:8,7:0:0> nfd_cfg_ring_num03 &v 0x10 >> 0xFFFF &
.%import_expr common_code 32 <27:20:8,7:0:0> nfd_cfg_ring_num04 &v 0xFFFF &
.%import_expr common_code 33 <27:20:8,7:0:0> nfd_cfg_ring_num04 &v 0x10 >> 0xFFFF &
.%import_expr common_code 39 <27:20:8,17:10:0> nfd_cfg_base0 &v 0x8 >> 0xFF000000 & 0xFFFF &
.%import_expr common_code 40 <27:20:8,17:10:0> nfd_cfg_base0 &v 0x8 >> 0xFF000000 & 0x10 >> 0xFFFF &
.%import_expr common_code 41 <27:20:8,17:10:0> nfd_cfg_base0 &v 0xFFFFFFFF & 0xFFFF &
.%import_expr common_code 42 <27:20:8,17:10:0> nfd_cfg_base0 &v 0xFFFFFFFF & 0x10 >> 0xFFFF &
.%import_expr common_code 79 <27:20:8,7:0:0> fl_cache_mem0 &v 0x8 >> 0xFFFF &
.%import_expr common_code 80 <27:20:8,7:0:0> fl_cache_mem0 &v 0x8 >> 0x10 >> 0xFFFF &
.%import_expr common_code 70 <27:20:8,7:0:0> nfd_out_sb_release0 &v 0x8 >> 0xFFFF &
.%import_expr common_code 71 <27:20:8,7:0:0> nfd_out_sb_release0 &v 0x8 >> 0x10 >> 0xFFFF &
.%import_expr common_code 125 <27:20:8,7:0:0> fl_cache_mem0 &v 0x8 >> 0xFFFF &
.%import_expr common_code 126 <27:20:8,7:0:0> fl_cache_mem0 &v 0x8 >> 0x10 >> 0xFFFF &
.%import_expr common_code 116 <27:20:8,17:10:0> nfd_out_sb_release0 &v 0x8 >> 0xFFFF &
.%import_expr common_code 117 <27:20:8,17:10:0> nfd_out_sb_release0 &v 0x8 >> 0x10 >> 0xFFFF &
.%import_expr common_code 144 <17:10:0> 0x306 _nfd_cfg_sig_svc_me0 &r
.%import_expr common_code 156 <27:20:8,17:10:0> nfd_out_sb_debug_state0 &v 0x8 >> 0xFF000000 & 0xFFFF &
.%import_expr common_code 157 <27:20:8,17:10:0> nfd_out_sb_debug_state0 &v 0x8 >> 0xFF000000 & 0x10 >> 0xFFFF &
.%import_expr common_code 158 <27:20:8,7:0:0> nfd_out_sb_debug_state0 &v 0xFFFFFFFF & 0xFFFF &
.%import_expr common_code 159 <27:20:8,7:0:0> nfd_out_sb_debug_state0 &v 0xFFFFFFFF & 0x10 >> 0xFFFF &
.%import_expr common_code 214 <27:20:8,7:0:0> nfd_out_sb_ring_num0 &v 0x2 << 0xFFFF &
.%import_expr common_code 215 <27:20:8,7:0:0> nfd_out_sb_ring_num0 &v 0x2 << 0x10 >> 0xFFFF &
.%import_expr common_code 228 <27:20:8,17:10:0> nfd_out_ring_mem0 &v 0x8 >> 0xFF000000 & 0xFFFF &
.%import_expr common_code 229 <27:20:8,17:10:0> nfd_out_ring_mem0 &v 0x8 >> 0xFF000000 & 0x10 >> 0xFFFF &
.%import_expr common_code 234 <27:20:8,7:0:0> nfd_out_ring_num00 &v 0xFFFF &
.%import_expr common_code 235 <27:20:8,7:0:0> nfd_out_ring_num00 &v 0x10 >> 0xFFFF &
.%import_expr common_code 378 <40:40:13,34:22:0> 357 &bp +
.%import_expr common_code 375 <40:40:13,34:22:0> 261 &bp +
.%import_expr common_code 358 <40:40:13,34:22:0> 378 &bp +
.%import_expr common_code 354 <40:40:13,34:22:0> 333 &bp +
.%import_expr common_code 351 <40:40:13,34:22:0> 357 &bp +
.%import_expr common_code 334 <40:40:13,34:22:0> 354 &bp +
.%import_expr common_code 330 <40:40:13,34:22:0> 309 &bp +
.%import_expr common_code 327 <40:40:13,34:22:0> 333 &bp +
.%import_expr common_code 310 <40:40:13,34:22:0> 330 &bp +
.%import_expr common_code 306 <40:40:13,34:22:0> 285 &bp +
.%import_expr common_code 303 <40:40:13,34:22:0> 309 &bp +
.%import_expr common_code 286 <40:40:13,34:22:0> 306 &bp +
.%import_expr common_code 282 <40:40:13,34:22:0> 261 &bp +
.%import_expr common_code 279 <40:40:13,34:22:0> 285 &bp +
.%import_expr common_code 262 <40:40:13,34:22:0> 282 &bp +
.%import_expr common_code 221 <40:40:13,34:22:0> 223 &bp +
.%import_expr common_code 217 <40:40:13,34:22:0> 219 &bp +
.%import_expr common_code 212 <40:40:13,34:22:0> 218 &bp +
.%import_expr common_code 205 <40:40:13,34:22:0> 16 &bp +
.%import_expr common_code 197 <40:40:13,34:22:0> 178 &bp +
.%import_expr common_code 176 <40:40:13,34:22:0> 199 &bp +
.%import_expr common_code 162 <40:40:13,34:22:0> 160 &bp +
.%import_expr common_code 148 <40:40:13,34:22:0> 16 &bp +
.%import_expr common_code 147 <40:40:13,34:22:0> 34 &bp +
.%import_expr common_code 134 <40:40:13,34:22:0> 93 &bp +
.%import_expr common_code 129 <40:40:13,34:22:0> 132 &bp +
.%import_expr common_code 128 <40:40:13,34:22:0> 128 &bp +
.%import_expr common_code 124 <40:40:13,34:22:0> 132 &bp +
.%import_expr common_code 110 <40:40:13,34:22:0> 130 &bp +
.%import_expr common_code 108 <40:40:13,34:22:0> 132 &bp +
.%import_expr common_code 97 <40:40:13,34:22:0> 100 &bp +
.%import_expr common_code 94 <40:40:13,34:22:0> 98 &bp +
.%import_expr common_code 92 <40:40:13,34:22:0> 135 &bp +
.%import_expr common_code 89 <40:40:13,34:22:0> 135 &bp +
.%import_expr common_code 88 <40:40:13,34:22:0> 54 &bp +
.%import_expr common_code 83 <40:40:13,34:22:0> 86 &bp +
.%import_expr common_code 82 <40:40:13,34:22:0> 82 &bp +
.%import_expr common_code 78 <40:40:13,34:22:0> 86 &bp +
.%import_expr common_code 64 <40:40:13,34:22:0> 84 &bp +
.%import_expr common_code 62 <40:40:13,34:22:0> 86 &bp +
.%import_expr common_code 52 <40:40:13,34:22:0> 135 &bp +
.%import_expr common_code 47 <40:40:13,34:22:0> 90 &bp +
.%import_expr common_code 37 <40:40:13,34:22:0> 16 &bp +
.%import_expr common_code 36 <40:40:13,34:22:0> 37 &bp +
.%import_expr common_code 25 <40:40:13,34:22:0> 148 &bp +
.%import_expr common_code 23 <40:40:13,34:22:0> 16 &bp +
.%import_expr common_code 17 <40:40:13,34:22:0> 25 &bp +
.%import_expr common_code 0 <40:40:13,34:22:0> 208 &bp +
.0 00D834000031 common_code
	.page
	        .declare_resource emem0_queues global 1024
	        .declare_resource emem1_queues global 1024
	.declare_resource cls_rings island 16
	    .declare_resource cls_apsignals island 16
	.declare_resource cls_apfilters island 16
	    .declare_resource pcie0_cpp2pcie_bars global 8
	    .declare_resource pcie0_dma_cfg_regs global 16
	    .declare_resource pcie0_topci_hi global 64
	    .declare_resource pcie0_topci_med global 64
	    .declare_resource pcie0_topci_lo global 128
	    .declare_resource pcie0_frompci_hi global 64
	    .declare_resource pcie0_frompci_med global 64
	    .declare_resource pcie0_frompci_lo global 128
	    .declare_resource pcie1_cpp2pcie_bars global 8
	    .declare_resource pcie1_dma_cfg_regs global 16
	    .declare_resource pcie1_topci_hi global 64
	    .declare_resource pcie1_topci_med global 64
	    .declare_resource pcie1_topci_lo global 128
	    .declare_resource pcie1_frompci_hi global 64
	    .declare_resource pcie1_frompci_med global 64
	    .declare_resource pcie1_frompci_lo global 128
	.macro_ref nfd_cfg_define_bars(0)
	.alloc_mem nfd_cfg_base0 emem0 global     2097152 0x200000
	.end_macro_ref nfd_cfg_define_bars
	.alloc_mem sb_ctx_base lmem+0 me 1024
	.alloc_mem sb_wq_credits lmem me 4
	.alloc_mem sb_debug_snapshot lmem me 1024
	    .init sb_ctx_base+0 0
	    .init sb_ctx_base+4 0
	    .init sb_ctx_base+8 0
	    .init sb_ctx_base+12 0
	    .init sb_ctx_base+16 0
	    .init sb_ctx_base+20 0
	    .init sb_ctx_base+24 0
	    .init sb_ctx_base+28 0
	    .init sb_ctx_base+32 0
	    .init sb_ctx_base+36 0
	    .init sb_ctx_base+40 0
	    .init sb_ctx_base+44 0
	    .init sb_ctx_base+48 0
	    .init sb_ctx_base+52 0
	    .init sb_ctx_base+56 0
	    .init sb_ctx_base+60 0
	    .init sb_ctx_base+64 0
	    .init sb_ctx_base+68 0
	    .init sb_ctx_base+72 0
	    .init sb_ctx_base+76 0
	    .init sb_ctx_base+80 0
	    .init sb_ctx_base+84 0
	    .init sb_ctx_base+88 0
	    .init sb_ctx_base+92 0
	    .init sb_ctx_base+96 0
	    .init sb_ctx_base+100 0
	    .init sb_ctx_base+104 0
	    .init sb_ctx_base+108 0
	    .init sb_ctx_base+112 0
	    .init sb_ctx_base+116 0
	    .init sb_ctx_base+120 0
	    .init sb_ctx_base+124 0
	    .init sb_ctx_base+128 0
	    .init sb_ctx_base+132 0
	    .init sb_ctx_base+136 0
	    .init sb_ctx_base+140 0
	    .init sb_ctx_base+144 0
	    .init sb_ctx_base+148 0
	    .init sb_ctx_base+152 0
	    .init sb_ctx_base+156 0
	    .init sb_ctx_base+160 0
	    .init sb_ctx_base+164 0
	    .init sb_ctx_base+168 0
	    .init sb_ctx_base+172 0
	    .init sb_ctx_base+176 0
	    .init sb_ctx_base+180 0
	    .init sb_ctx_base+184 0
	    .init sb_ctx_base+188 0
	    .init sb_ctx_base+192 0
	    .init sb_ctx_base+196 0
	    .init sb_ctx_base+200 0
	    .init sb_ctx_base+204 0
	    .init sb_ctx_base+208 0
	    .init sb_ctx_base+212 0
	    .init sb_ctx_base+216 0
	    .init sb_ctx_base+220 0
	    .init sb_ctx_base+224 0
	    .init sb_ctx_base+228 0
	    .init sb_ctx_base+232 0
	    .init sb_ctx_base+236 0
	    .init sb_ctx_base+240 0
	    .init sb_ctx_base+244 0
	    .init sb_ctx_base+248 0
	    .init sb_ctx_base+252 0
	    .init sb_ctx_base+256 0
	    .init sb_ctx_base+260 0
	    .init sb_ctx_base+264 0
	    .init sb_ctx_base+268 0
	    .init sb_ctx_base+272 0
	    .init sb_ctx_base+276 0
	    .init sb_ctx_base+280 0
	    .init sb_ctx_base+284 0
	    .init sb_ctx_base+288 0
	    .init sb_ctx_base+292 0
	    .init sb_ctx_base+296 0
	    .init sb_ctx_base+300 0
	    .init sb_ctx_base+304 0
	    .init sb_ctx_base+308 0
	    .init sb_ctx_base+312 0
	    .init sb_ctx_base+316 0
	    .init sb_ctx_base+320 0
	    .init sb_ctx_base+324 0
	    .init sb_ctx_base+328 0
	    .init sb_ctx_base+332 0
	    .init sb_ctx_base+336 0
	    .init sb_ctx_base+340 0
	    .init sb_ctx_base+344 0
	    .init sb_ctx_base+348 0
	    .init sb_ctx_base+352 0
	    .init sb_ctx_base+356 0
	    .init sb_ctx_base+360 0
	    .init sb_ctx_base+364 0
	    .init sb_ctx_base+368 0
	    .init sb_ctx_base+372 0
	    .init sb_ctx_base+376 0
	    .init sb_ctx_base+380 0
	    .init sb_ctx_base+384 0
	    .init sb_ctx_base+388 0
	    .init sb_ctx_base+392 0
	    .init sb_ctx_base+396 0
	    .init sb_ctx_base+400 0
	    .init sb_ctx_base+404 0
	    .init sb_ctx_base+408 0
	    .init sb_ctx_base+412 0
	    .init sb_ctx_base+416 0
	    .init sb_ctx_base+420 0
	    .init sb_ctx_base+424 0
	    .init sb_ctx_base+428 0
	    .init sb_ctx_base+432 0
	    .init sb_ctx_base+436 0
	    .init sb_ctx_base+440 0
	    .init sb_ctx_base+444 0
	    .init sb_ctx_base+448 0
	    .init sb_ctx_base+452 0
	    .init sb_ctx_base+456 0
	    .init sb_ctx_base+460 0
	    .init sb_ctx_base+464 0
	    .init sb_ctx_base+468 0
	    .init sb_ctx_base+472 0
	    .init sb_ctx_base+476 0
	    .init sb_ctx_base+480 0
	    .init sb_ctx_base+484 0
	    .init sb_ctx_base+488 0
	    .init sb_ctx_base+492 0
	    .init sb_ctx_base+496 0
	    .init sb_ctx_base+500 0
	    .init sb_ctx_base+504 0
	    .init sb_ctx_base+508 0
	    .init sb_ctx_base+512 0
	    .init sb_ctx_base+516 0
	    .init sb_ctx_base+520 0
	    .init sb_ctx_base+524 0
	    .init sb_ctx_base+528 0
	    .init sb_ctx_base+532 0
	    .init sb_ctx_base+536 0
	    .init sb_ctx_base+540 0
	    .init sb_ctx_base+544 0
	    .init sb_ctx_base+548 0
	    .init sb_ctx_base+552 0
	    .init sb_ctx_base+556 0
	    .init sb_ctx_base+560 0
	    .init sb_ctx_base+564 0
	    .init sb_ctx_base+568 0
	    .init sb_ctx_base+572 0
	    .init sb_ctx_base+576 0
	    .init sb_ctx_base+580 0
	    .init sb_ctx_base+584 0
	    .init sb_ctx_base+588 0
	    .init sb_ctx_base+592 0
	    .init sb_ctx_base+596 0
	    .init sb_ctx_base+600 0
	    .init sb_ctx_base+604 0
	    .init sb_ctx_base+608 0
	    .init sb_ctx_base+612 0
	    .init sb_ctx_base+616 0
	    .init sb_ctx_base+620 0
	    .init sb_ctx_base+624 0
	    .init sb_ctx_base+628 0
	    .init sb_ctx_base+632 0
	    .init sb_ctx_base+636 0
	    .init sb_ctx_base+640 0
	    .init sb_ctx_base+644 0
	    .init sb_ctx_base+648 0
	    .init sb_ctx_base+652 0
	    .init sb_ctx_base+656 0
	    .init sb_ctx_base+660 0
	    .init sb_ctx_base+664 0
	    .init sb_ctx_base+668 0
	    .init sb_ctx_base+672 0
	    .init sb_ctx_base+676 0
	    .init sb_ctx_base+680 0
	    .init sb_ctx_base+684 0
	    .init sb_ctx_base+688 0
	    .init sb_ctx_base+692 0
	    .init sb_ctx_base+696 0
	    .init sb_ctx_base+700 0
	    .init sb_ctx_base+704 0
	    .init sb_ctx_base+708 0
	    .init sb_ctx_base+712 0
	    .init sb_ctx_base+716 0
	    .init sb_ctx_base+720 0
	    .init sb_ctx_base+724 0
	    .init sb_ctx_base+728 0
	    .init sb_ctx_base+732 0
	    .init sb_ctx_base+736 0
	    .init sb_ctx_base+740 0
	    .init sb_ctx_base+744 0
	    .init sb_ctx_base+748 0
	    .init sb_ctx_base+752 0
	    .init sb_ctx_base+756 0
	    .init sb_ctx_base+760 0
	    .init sb_ctx_base+764 0
	    .init sb_ctx_base+768 0
	    .init sb_ctx_base+772 0
	    .init sb_ctx_base+776 0
	    .init sb_ctx_base+780 0
	    .init sb_ctx_base+784 0
	    .init sb_ctx_base+788 0
	    .init sb_ctx_base+792 0
	    .init sb_ctx_base+796 0
	    .init sb_ctx_base+800 0
	    .init sb_ctx_base+804 0
	    .init sb_ctx_base+808 0
	    .init sb_ctx_base+812 0
	    .init sb_ctx_base+816 0
	    .init sb_ctx_base+820 0
	    .init sb_ctx_base+824 0
	    .init sb_ctx_base+828 0
	    .init sb_ctx_base+832 0
	    .init sb_ctx_base+836 0
	    .init sb_ctx_base+840 0
	    .init sb_ctx_base+844 0
	    .init sb_ctx_base+848 0
	    .init sb_ctx_base+852 0
	    .init sb_ctx_base+856 0
	    .init sb_ctx_base+860 0
	    .init sb_ctx_base+864 0
	    .init sb_ctx_base+868 0
	    .init sb_ctx_base+872 0
	    .init sb_ctx_base+876 0
	    .init sb_ctx_base+880 0
	    .init sb_ctx_base+884 0
	    .init sb_ctx_base+888 0
	    .init sb_ctx_base+892 0
	    .init sb_ctx_base+896 0
	    .init sb_ctx_base+900 0
	    .init sb_ctx_base+904 0
	    .init sb_ctx_base+908 0
	    .init sb_ctx_base+912 0
	    .init sb_ctx_base+916 0
	    .init sb_ctx_base+920 0
	    .init sb_ctx_base+924 0
	    .init sb_ctx_base+928 0
	    .init sb_ctx_base+932 0
	    .init sb_ctx_base+936 0
	    .init sb_ctx_base+940 0
	    .init sb_ctx_base+944 0
	    .init sb_ctx_base+948 0
	    .init sb_ctx_base+952 0
	    .init sb_ctx_base+956 0
	    .init sb_ctx_base+960 0
	    .init sb_ctx_base+964 0
	    .init sb_ctx_base+968 0
	    .init sb_ctx_base+972 0
	    .init sb_ctx_base+976 0
	    .init sb_ctx_base+980 0
	    .init sb_ctx_base+984 0
	    .init sb_ctx_base+988 0
	    .init sb_ctx_base+992 0
	    .init sb_ctx_base+996 0
	    .init sb_ctx_base+1000 0
	    .init sb_ctx_base+1004 0
	    .init sb_ctx_base+1008 0
	    .init sb_ctx_base+1012 0
	    .init sb_ctx_base+1016 0
	    .init sb_ctx_base+1020 0
	.alloc_resource nfd_out_ring_num00 emem0_queues global 1 1
	.alloc_mem nfd_out_ring_mem0 emem0 global 524288 524288
	.init_mu_ring nfd_out_ring_num00 nfd_out_ring_mem0
	.alloc_mem fl_cache_mem0 emem0.emem_cache_upper global 524288 524288
	.alloc_resource nfd_cfg_ring_nums emem0_queues global 32
	.declare_resource nfd_cfg_ring_nums0 global 8 nfd_cfg_ring_nums
	.alloc_resource nfd_cfg_ring_num00 nfd_cfg_ring_nums0 global 1
	.alloc_resource nfd_cfg_ring_num01 nfd_cfg_ring_nums0 global 1
	.alloc_resource nfd_cfg_ring_num02 nfd_cfg_ring_nums0 global 1
	.alloc_resource nfd_cfg_ring_num03 nfd_cfg_ring_nums0 global 1
	.alloc_resource nfd_cfg_ring_num04 nfd_cfg_ring_nums0 global 1
	.alloc_resource nfd_cfg_ring_num05 nfd_cfg_ring_nums0 global 1
	.alloc_mem nfd_out_sb_debug_state0 emem0 global     1040
	    .reg @l0000!nconfigs
	    .init @l0000!nconfigs 0
	main#:
	.macro_ref     pci_out_sb_iface_declare()
	        .alloc_mem nfd_out_sb_release0 ctm island         1024 1024
	        .alloc_mem nfd_out_sb_wq_credits0 ctm island 4 4
	            .alloc_mem nfd_out_sb_wq_mem0 cls             island 4096 4096
	            .alloc_resource nfd_out_sb_ring_num0             cls_rings+15 island 1 1
	            .init_csr cls:Rings.RingBase15             (((nfd_out_sb_wq_mem0 >> 7) << 0) |              ((log2(1024) - 5) << 16))
	            .init_csr cls:Rings.RingPtrs15 0
	        .reg l0000!g_sbpd_wq_hi
	        .reg l0000!g_sbpd_wq_lo
	.end_macro_ref     pci_out_sb_iface_declare
	    .if (ctx() == STAGE_BATCH_MANAGER_CTX)
	    br!=ctx[0,l000_01#]
.1 00F000803F00 common_code
	.macro_ref         manager_main_loop()
	        .begin
	            .reg l0001!lma
	            .reg l0001!state_version
	            .sig volatile visible l0001!_nfd_credit_sig_sb
	            .addr l0001!_nfd_credit_sig_sb 13
	            .sig volatile visible l0001!_nfd_cfg_sig_sb
	            .addr l0001!_nfd_cfg_sig_sb 14
	            .sig volatile l0001!state_alarm_sig
	.macro_ref             move(l0001!state_version, 0)
	.macro_ref                     immed32(l0001!state_version, 0)
	.end_macro_ref                     immed32
	.end_macro_ref             move
	.macro_ref             move(l0001!lma, sb_wq_credits)
	.macro_ref                     immed32(l0001!lma, sb_wq_credits)
	                                immed[l0001!lma, 2048]
.2 00F440003F00 common_code
	                                immed_w1[l0001!lma, 0]
.3 00FC06E03F00 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	            local_csr_wr[active_lm_addr_1, l0001!lma]
.4 00F0000C0300 common_code
	            nop
.5 00F0000C0300 common_code
	            nop
.6 00F000000700 common_code
	;             nop
	; NOP REPLACEMENT OPTIMIZATION:  the uword below was "pushed" down 6 positions
	                            immed[l0001!state_version, 0]
.7 00F0000F3220 common_code
	.macro_ref             move(*l$index1, (1024 / 5))
	.macro_ref                     immed32(*l$index1, (1024 / 5))
	                            immed[*l$index1, 204]
.8 00FC10ADE779 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	.macro_ref             signal_ctx(1, 15)
	            .begin
	                    local_csr_wr[same_me_signal, 121]
.9 00F004001300 common_code
	            .end
	.end_macro_ref             signal_ctx
	.macro_ref             set_alarm(l0001!state_alarm_sig, 16384)
	            .begin
	                .reg l0003!count
	                .reg l0003!amt
	.macro_ref                 move(l0003!amt, 16384)
	.macro_ref                         immed32(l0003!amt, 16384)
	                                immed[l0003!amt, 16384]
.10 00FC0C0C0000 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	                local_csr_rd[timestamp_low]
.11 00F0000C000E common_code
	                immed[l0003!count, 0]
.12 00B08030100E common_code
	                alu[l0003!count, l0003!count, +, l0003!amt]
.13 00F440000F00 common_code
	                immed_w1[l0003!count, 0]
.14 00FC07EC0701 common_code
	                local_csr_wr[active_future_count_signal, 1]
.15 00FC05E00F00 common_code
	                local_csr_wr[active_ctx_future_count, l0003!count]
.16 00E000016002 common_code
	                .set_sig l0001!state_alarm_sig
	            .end
	.end_macro_ref             set_alarm
	            .while (1)
	            l001_start#: 
	                .set_sig l0001!_nfd_credit_sig_sb
	                .set_sig l0001!_nfd_cfg_sig_sb
	                ctx_arb[l0001!_nfd_credit_sig_sb, l0001!_nfd_cfg_sig_sb, l0001!state_alarm_sig], any
.17 00D806434233 common_code
	                .if (SIGNAL(_nfd_credit_sig_sb))
	                br_!signal[l0001!_nfd_credit_sig_sb,l002_01#]
.18 00F000001700 common_code
	.macro_ref                     update_wq_credits()
	                    .begin
	                        .reg $l0004!credits
	                        .reg l0004!addr_lo
	                        .sig l0004!iosig
	.macro_ref                         move(l0004!addr_lo, nfd_out_sb_wq_credits0)
	.macro_ref                                 immed32(l0004!addr_lo, nfd_out_sb_wq_credits0)
	                                            immed[l0004!addr_lo, ((nfd_out_sb_wq_credits0) & 0xFFFF)]
.19 00F440001700 common_code
	                                            immed_w1[l0004!addr_lo, (((nfd_out_sb_wq_credits0) >> 16) & 0xFFFF)]
.20 00F0800C0180 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	.macro_ref                         move($l0004!credits, 0xFFFFFFFF)
	.macro_ref                                 immed32($l0004!credits, 0xFFFFFFFF)
	                                        immed[$l0004!credits, 4294967295]
.21 104620041720 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        mem[test_and_clr, $l0004!credits, 0, l0004!addr_lo, 1], sig_done[l0004!iosig]
.22 00E00000000C common_code
	                        ctx_arb[l0004!iosig, l0004!iosig+1]
.23 00D804108038 common_code
	                    .end
	.end_macro_ref                     update_wq_credits
	                    .continue
	; BRANCH TARGET OPTIMIZATION:  changed branch label from l001_cont# to l001_start#.
	                    br[l001_start#], defer[1]
.24 00A0A2060220 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                        alu[*l$index1, *l$index1, +, $l0004!credits]
.25 00D825038233 common_code
	                .endif
	                .if (SIGNAL(_nfd_cfg_sig_sb))
	                l002_01#: 
	                l002_end#: 
	                br_!signal[l0001!_nfd_cfg_sig_sb,l003_01#]
.26 00B0C8020301 common_code
	                    alu[@l0000!nconfigs, @l0000!nconfigs, +, 1]
.27 00FC17220300 common_code
	                    local_csr_wr[mailbox0, @l0000!nconfigs]
.28 00F0000C0000 common_code
	.macro_ref                     process_reconfig()
	                    .begin
	                        .reg l0005!ring_addr_hi
	                        .reg l0005!ring_in_addr_lo
	                        .reg l0005!ring_out_addr_lo
	                        .reg l0005!vid
	                        .reg $l0005!cmsg[1]
	                        .xfer_order $l0005!cmsg[0]
	                        .sig l0005!get_sig
	                        .sig l0005!put_sig
	.macro_ref                         move(l0005!ring_addr_hi, ((streq('emem0','emem0') ? __ADDR_EMEM0 :                        (streq('emem0','emem1') ? __ADDR_EMEM1 :                        (streq('emem0','emem2') ? __ADDR_EMEM2 : NOEMEM))) >> 8))
	.macro_ref                                 immed32(l0005!ring_addr_hi, ((streq('emem0','emem0') ? __ADDR_EMEM0 :                        (streq('emem0','emem1') ? __ADDR_EMEM1 :                        (streq('emem0','emem2') ? __ADDR_EMEM2 : NOEMEM))) >> 8))
	                                            immed[l0005!ring_addr_hi, ((((streq('emem0','emem0') ? __ADDR_EMEM0 :                        (streq('emem0','emem1') ? __ADDR_EMEM1 :                        (streq('emem0','emem2') ? __ADDR_EMEM2 : NOEMEM))) >> 8)) & 0xFFFF)]
.29 00F4400C0000 common_code
	                                            immed_w1[l0005!ring_addr_hi, (((((streq('emem0','emem0') ? __ADDR_EMEM0 :                        (streq('emem0','emem1') ? __ADDR_EMEM1 :                        (streq('emem0','emem2') ? __ADDR_EMEM2 : NOEMEM))) >> 8)) >> 16) & 0xFFFF)]
.30 00F000000B00 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	.macro_ref                         move(l0005!ring_in_addr_lo, nfd_cfg_ring_num03)
	.macro_ref                                 immed32(l0005!ring_in_addr_lo, nfd_cfg_ring_num03)
	                                            immed[l0005!ring_in_addr_lo, ((nfd_cfg_ring_num03) & 0xFFFF)]
.31 00F440000B00 common_code
	                                            immed_w1[l0005!ring_in_addr_lo, (((nfd_cfg_ring_num03) >> 16) & 0xFFFF)]
.32 00F000000F00 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	.macro_ref                         move(l0005!ring_out_addr_lo, nfd_cfg_ring_num04)
	.macro_ref                                 immed32(l0005!ring_out_addr_lo, nfd_cfg_ring_num04)
	                                            immed[l0005!ring_out_addr_lo, ((nfd_cfg_ring_num04) & 0xFFFF)]
.33 00F440000F00 common_code
	                                            immed_w1[l0005!ring_out_addr_lo, (((nfd_cfg_ring_num04) >> 16) & 0xFFFF)]
.34 005520600B00 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        .while (1)
	                        l004_start#: 
	                            .io_completed l0005!get_sig
	                            mem[get, $l0005!cmsg[0], l0005!ring_addr_hi, <<8, l0005!ring_in_addr_lo, 1], sig_done[l0005!get_sig]
.35 00E000000004 common_code
	                            ctx_arb[l0005!get_sig[0]]
.36 00D80940C233 common_code
	                            .if (SIGNAL(get_sig[1]))
	                            br_!signal[l0005!get_sig[1],l005_01#]
.37 00D004021820 common_code
	                            .endif
	                            .if (BIT($cmsg[0], NFD_CFG_MSG_VALID_bit) == 0)
	; BRANCH TARGET OPTIMIZATION:  changed branch label from l004_end# to l001_start#.
	                            l005_01#: 
	                            l005_end#: 
	                            br_bclr[$l0005!cmsg[0],31,l001_start#]
.38 0084001618FF common_code
	                                .break
	; CONDITIONAL BRANCH OPTIMIZATION :  Branch changed to fallthrough.
	;                                 br[l004_end#]
	                            .endif
	                            l006_01#: 
	                            l006_end#: 
	.macro_ref                             wsm_extract(l0005!vid, $l0005!cmsg, NFD_CFG_MSG_VID)
	.macro_ref                                 wsm_extract(l0005!vid, $l0005!cmsg, NFD_CFG_MSG_VID, 0)
	.macro_ref                                     sm_extract(l0005!vid, $l0005!cmsg[0], NFD_CFG_MSG_VID, 0)
	.macro_ref                                     __WSM_GET_MASKLEN(NFD_CFG_MSG_VID)
	.end_macro_ref                                     __WSM_GET_MASKLEN
	.macro_ref                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                             _wsm_validate_size
	                                            alu_shf[l0005!vid, 0xFF, and, $l0005!cmsg[0], >>0]
.39 00F0000C000A common_code
	.end_macro_ref                                     sm_extract
	.end_macro_ref                                 wsm_extract
	.end_macro_ref                             wsm_extract
	.macro_ref                             _check_vnic_state(l0005!vid)
	                            .begin
	                                .reg l0006!bar_addr_hi
	                                .reg l0006!bar_addr_lo
	                                .reg l0006!q
	                                .reg l0006!up
	                                .reg l0006!maxqs
	                                .reg l0006!rid
	                                .reg read $l0006!bar[6]
	                                .xfer_order $l0006!bar[0]
	                                .sig l0006!read_sig
	.macro_ref                                 nfd_cfg_get_bar_addr(l0006!bar_addr_hi, l0006!bar_addr_lo, l0005!vid, 0)
	                                .begin
	                                    .reg l0007!tmp_lo
	                                    .reg l0007!off
	.macro_ref                                     move(l0006!bar_addr_hi, ((nfd_cfg_base0 >> 8) & 0xFF000000))
	.macro_ref                                             immed32(l0006!bar_addr_hi, ((nfd_cfg_base0 >> 8) & 0xFF000000))
	                                                        immed[l0006!bar_addr_hi, ((((nfd_cfg_base0 >> 8) & 0xFF000000)) & 0xFFFF)]
.40 00F4400C000A common_code
	                                                        immed_w1[l0006!bar_addr_hi, (((((nfd_cfg_base0 >> 8) & 0xFF000000)) >> 16) & 0xFFFF)]
.41 00F0000C000B common_code
	.end_macro_ref                                             immed32
	.end_macro_ref                                     move
	.macro_ref                                     move(l0007!tmp_lo, (nfd_cfg_base0 & 0xFFFFFFFF))
	.macro_ref                                             immed32(l0007!tmp_lo, (nfd_cfg_base0 & 0xFFFFFFFF))
	                                                        immed[l0007!tmp_lo, (((nfd_cfg_base0 & 0xFFFFFFFF)) & 0xFFFF)]
.42 00F4400C000B common_code
	                                                        immed_w1[l0007!tmp_lo, ((((nfd_cfg_base0 & 0xFFFFFFFF)) >> 16) & 0xFFFF)]
.43 009110B80201 common_code
	.end_macro_ref                                             immed32
	.end_macro_ref                                     move
	                                    alu_shf[l0007!off, --, b, l0005!vid, <<15]
.44 00B080A02C0B common_code
	                                    alu[l0006!bar_addr_lo, l0007!tmp_lo, +, l0007!off]
.45 005C2A00280A common_code
	                                .end
	.end_macro_ref                                 nfd_cfg_get_bar_addr
	                                mem[read32, $l0006!bar[0], l0006!bar_addr_hi, <<8, l0006!bar_addr_lo, 6], ctx_swap[l0006!read_sig]
.46 00A4300C0180 common_code
	.macro_ref                                 nfd_vid_maxqs(l0006!maxqs, l0005!vid)
	.macro_ref                                     nfd_vid_maxqs(l0006!maxqs, l0005!vid, --, --, --)
	                                    .begin
	.macro_ref                                                 nfd_vf_maxqs(l0006!maxqs, l0005!vid, --)
	.end_macro_ref                                                 nfd_vf_maxqs
	                                    .end
	.end_macro_ref                                     nfd_vid_maxqs
	.end_macro_ref                                 nfd_vid_maxqs
	                                .if (NFD_VID_IS_VF(in_vid))
	                                .endif
	                                .if ($bar[NFP_NET_CFG_CTRL] & NFP_NET_CFG_CTRL_ENABLE == 0)
	                                l007_01#: 
	                                l007_end#: 
	                                alu[--,$l0006!bar[0],and,0]
.47 00D816A08120 common_code
	                                beq[l008_01#], defer[2]
.48 00A0003C0700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                                    alu[l0006!maxqs, --, b, 1]
.49 00A0804D0001 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 2 positions
	                                    alu[l0006!rid, l0005!vid, +, 64]
.50 00F000001300 common_code
	.macro_ref                                     move(l0006!up, 0)
	.macro_ref                                             immed32(l0006!up, 0)
	.end_macro_ref                                             immed32
	.end_macro_ref                                     move
	.macro_ref                                     move(l0006!q, 0)
	.macro_ref                                             immed32(l0006!q, 0)
	                                                    immed[l0006!q, 0]
.51 00AAF0001003 common_code
	.end_macro_ref                                             immed32
	.end_macro_ref                                     move
	                                    .while (q < maxqs)
	                                    alu[--,l0006!q,-,l0006!maxqs]
.52 00D821D08128 common_code
	; BRANCH TARGET OPTIMIZATION:  changed branch label from l009_end# to l008_end#.
	                                    bge[l008_end#], defer[1]
.53 00F0000C0002 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 3 positions
	                                                    immed[l0006!up, 0]
.54 008A00581001 common_code
	                                    l009_start#: 
	.macro_ref                                         _set_queue_state(l0005!vid, l0006!q, l0006!up, l0006!rid)
	                                        .begin
	                                            .reg l0009!qid
	                                            .reg l0009!lma
	                                            .reg l0009!changed
	                                            .reg l0009!currently_up
	                                            .reg l0009!base_addr
	                                            .reg l0009!tmp
	.macro_ref                                             nfd_vid2qid(l0009!qid, l0005!vid, l0006!q)
	.macro_ref                                                 nfd_vid2natq(l0009!qid, l0005!vid, l0006!q)
	                                                .begin
	                                                        .reg l0010!vnic
	.macro_ref                                                                 nfd_build_vf_q(l0009!qid, l0005!vid, l0006!q)
	                                                                .begin
	                                                                            alu_shf[l0009!qid, l0006!q, or, l0005!vid, <<0]
.55 0091C0580205 common_code
	                                                                .end
	.end_macro_ref                                                                 nfd_build_vf_q
	                                                .end
	.end_macro_ref                                                 nfd_vid2natq
	.end_macro_ref                                             nfd_vid2qid
	                                            alu_shf[l0009!lma, --, b, l0009!qid, <<4]
.56 00FC06601700 common_code
	                                            local_csr_wr[active_lm_addr_0, l0009!lma]
.57 00F0000C0300 common_code
	                                            nop
.58 00F0000C0300 common_code
	                                            nop
.59 00F0000C0300 common_code
	                                            nop
.60 009480E14521 common_code
	.macro_ref                                             wsm_extract(l0009!currently_up, *l$index0, LM_QSTATE_ENABLED)
	.macro_ref                                                 wsm_extract(l0009!currently_up, *l$index0, LM_QSTATE_ENABLED, 0)
	.macro_ref                                                     sm_extract(l0009!currently_up, *l$index0[1], LM_QSTATE_ENABLED, 0)
	.macro_ref                                                     __WSM_GET_MASKLEN(LM_QSTATE_ENABLED)
	.end_macro_ref                                                     __WSM_GET_MASKLEN
	.macro_ref                                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                             _wsm_validate_size
	                                                            alu_shf[l0009!currently_up, 0x1, and, *l$index0[1], >>8]
.61 00AAB0003802 common_code
	.end_macro_ref                                                     sm_extract
	.end_macro_ref                                                 wsm_extract
	.end_macro_ref                                             wsm_extract
	                                            .if (in_up != currently_up)
	                                            alu[--,l0006!up,-,l0009!currently_up]
.62 00D815808120 common_code
	                                            beq[l010_01#]
.63 00A0700C0002 common_code
	                                                .if (in_up != 0)
	                                                alu[--,--,b,l0006!up]
.64 00D815008120 common_code
	                                                beq[l011_01#]
.65 00880517FC51 common_code
	.macro_ref                                                     wsm_set(*l$index0, LM_QSTATE_RID, l0006!rid)
	.macro_ref                                                         wsm_set(*l$index0, LM_QSTATE_RID, l0006!rid, 0)
	.macro_ref                                                             sm_set(*l$index0[1], LM_QSTATE_RID, l0006!rid, 0)
	.macro_ref                                                                 sm_set_to(*l$index0[1], *l$index0[1], LM_QSTATE_RID, l0006!rid, 0)
	                                                                .begin
	.macro_ref                                                                     sm_clear_to(*l$index0[1], *l$index0[1], LM_QSTATE_RID, 0)
	.macro_ref                                                                     __WSM_GET_MASKLEN(LM_QSTATE_RID)
	.end_macro_ref                                                                     __WSM_GET_MASKLEN
	                                                                    .begin
	.macro_ref                                                                             _wsm_validate_size('sm_clear', 0, 1)
	.end_macro_ref                                                                             _wsm_validate_size
	                                                                            alu_shf[*l$index0[1], *l$index0[1], and~, 0xFF, <<0]
.66 008A05194404 common_code
	                                                                    .end
	.end_macro_ref                                                                     sm_clear_to
	.macro_ref                                                                     sm_set_noclr_to(*l$index0[1], *l$index0[1], LM_QSTATE_RID, l0006!rid, 1)
	                                                                    .begin
	.macro_ref                                                                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                                                         _wsm_validate_size
	                                                                        alu_shf[*l$index0[1], *l$index0[1], or, l0006!rid, <<0]
.67 008985108651 common_code
	                                                                    .end
	.end_macro_ref                                                                     sm_set_noclr_to
	                                                                .end
	.end_macro_ref                                                                 sm_set_to
	.end_macro_ref                                                             sm_set
	.end_macro_ref                                                         wsm_set
	.end_macro_ref                                                     wsm_set
	.macro_ref                                                     wsm_set(*l$index0, LM_QSTATE_ENABLED, 1)
	.macro_ref                                                         wsm_set(*l$index0, LM_QSTATE_ENABLED, 1, 0)
	.macro_ref                                                             sm_set(*l$index0[1], LM_QSTATE_ENABLED, 1, 0)
	.macro_ref                                                                 sm_set_to(*l$index0[1], *l$index0[1], LM_QSTATE_ENABLED, 1, 0)
	                                                                .begin
	.macro_ref                                                                     sm_clear_to(*l$index0[1], *l$index0[1], LM_QSTATE_ENABLED, 0)
	.macro_ref                                                                     __WSM_GET_MASKLEN(LM_QSTATE_ENABLED)
	.end_macro_ref                                                                     __WSM_GET_MASKLEN
	                                                                    .begin
	.macro_ref                                                                             _wsm_validate_size('sm_clear', 0, 1)
	.end_macro_ref                                                                             _wsm_validate_size
	                                                                            alu_shf[*l$index0[1], *l$index0[1], and~, 0x1, <<8]
.68 008B85108651 common_code
	                                                                    .end
	.end_macro_ref                                                                     sm_clear_to
	.macro_ref                                                                     sm_set_noclr_to(*l$index0[1], *l$index0[1], LM_QSTATE_ENABLED, 1, 1)
	                                                                    .begin
	.macro_ref                                                                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                                                         _wsm_validate_size
	                                                                        alu_shf[*l$index0[1], *l$index0[1], or, 1, <<8]
.69 00F0000C0200 common_code
	                                                                    .end
	.end_macro_ref                                                                     sm_set_noclr_to
	                                                                .end
	.end_macro_ref                                                                 sm_set_to
	.end_macro_ref                                                             sm_set
	.end_macro_ref                                                         wsm_set
	.end_macro_ref                                                     wsm_set
	.macro_ref                                                     move(*l$index0[0], 0)
	.macro_ref                                                             immed32(*l$index0[0], 0)
	                                                                    immed[*l$index0[0], 0]
.70 00F000001700 common_code
	.end_macro_ref                                                             immed32
	.end_macro_ref                                                     move
	.macro_ref                                                     move(l0009!base_addr, (fl_cache_mem0 >> 8))
	.macro_ref                                                             immed32(l0009!base_addr, (fl_cache_mem0 >> 8))
	.end_macro_ref                                                             immed32
	.end_macro_ref                                                     move
	.macro_ref                                                     _reset_ticket_bitmap(l0009!qid)
	                                                    .begin
	                                                        .reg l0018!addr_hi
	                                                        .reg l0018!addr_lo
	                                                        .reg write $l0018!bitmap[4]
	                                                        .xfer_order $l0018!bitmap[0]
	                                                        .sig l0018!bitmap_sig
	.macro_ref                                                         move(l0018!addr_hi, (nfd_out_sb_release0 >> 8))
	.macro_ref                                                                 immed32(l0018!addr_hi, (nfd_out_sb_release0 >> 8))
	                                                                            immed[l0018!addr_hi, (((nfd_out_sb_release0 >> 8)) & 0xFFFF)]
.71 00F440001700 common_code
	                                                                            immed_w1[l0018!addr_hi, ((((nfd_out_sb_release0 >> 8)) >> 16) & 0xFFFF)]
.72 0081C0780205 common_code
	.end_macro_ref                                                                 immed32
	.end_macro_ref                                                         move
	                                                        alu_shf[l0018!addr_lo, --, b, l0009!qid, <<4]    ; addr_lo = qid * sizeof(bitmap)
.73 00F0000C0180 common_code
	.macro_ref                                                         aggregate_zero($l0018!bitmap, 4)
	.macro_ref                                                             aggregate_set($l0018!bitmap, 0, 0, 4)
	.macro_ref                                                                         move($l0018!bitmap[0], 0)
	.macro_ref                                                                                 immed32($l0018!bitmap[0], 0)
	                                                                                        immed[$l0018!bitmap[0], 0]
.74 00F0000C0181 common_code
	.end_macro_ref                                                                                 immed32
	.end_macro_ref                                                                         move
	.macro_ref                                                                         move($l0018!bitmap[1], 0)
	.macro_ref                                                                                 immed32($l0018!bitmap[1], 0)
	                                                                                        immed[$l0018!bitmap[1], 0]
.75 00F0000C0182 common_code
	.end_macro_ref                                                                                 immed32
	.end_macro_ref                                                                         move
	.macro_ref                                                                         move($l0018!bitmap[2], 0)
	.macro_ref                                                                                 immed32($l0018!bitmap[2], 0)
	                                                                                        immed[$l0018!bitmap[2], 0]
.76 00F0000C0183 common_code
	.end_macro_ref                                                                                 immed32
	.end_macro_ref                                                                         move
	.macro_ref                                                                         move($l0018!bitmap[3], 0)
	.macro_ref                                                                                 immed32($l0018!bitmap[3], 0)
	                                                                                        immed[$l0018!bitmap[3], 0]
.77 045F26001707 common_code
	.end_macro_ref                                                                                 immed32
	.end_macro_ref                                                                         move
	.end_macro_ref                                                             aggregate_set
	.end_macro_ref                                                         aggregate_zero
	                                                        mem[write32, $l0018!bitmap[0], l0018!addr_hi, <<8, l0018!addr_lo, 4], sig_done[l0018!bitmap_sig]
.78 00D815B08232 common_code
	                                                        .while (!SIGNAL(bitmap_sig))
	; BRANCH TARGET OPTIMIZATION:  changed branch label from l012_end# to l011_end#.
	                                                        br_signal[l0018!bitmap_sig,l011_end#], defer[3]
.79 00F000003F00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 9 positions
	                                                                        immed[l0009!base_addr, (((fl_cache_mem0 >> 8)) & 0xFFFF)]
.80 00F440003F00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 9 positions
	                                                                        immed_w1[l0009!base_addr, ((((fl_cache_mem0 >> 8)) >> 16) & 0xFFFF)]
.81 008BB5283E05 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 9 positions
	                                                    alu_shf[*l$index0[2], l0009!base_addr, or, l0009!qid, <<5]
.82 00D814808233 common_code
	                                                        .endw
	                                                        l012_start#: 
	                                                        l012_cont#: 
	                                                        br_!signal[l0018!bitmap_sig,l012_start#]
.83 00D815808038 common_code
	                                                    .end
	.end_macro_ref                                                     _reset_ticket_bitmap
	                                                .else
	                                                        l012_end#: 
	                                                br[l011_end#]
.84 00880517FC51 common_code
	                                                l011_01#: 
	.macro_ref                                                     wsm_clear(*l$index0, LM_QSTATE_RID)
	.macro_ref                                                         wsm_clear(*l$index0, LM_QSTATE_RID, 0)
	.macro_ref                                                             sm_clear(*l$index0[1], LM_QSTATE_RID, 0)
	.macro_ref                                                                 sm_clear_to(*l$index0[1], *l$index0[1], LM_QSTATE_RID, 0)
	.macro_ref                                                                 __WSM_GET_MASKLEN(LM_QSTATE_RID)
	.end_macro_ref                                                                 __WSM_GET_MASKLEN
	                                                                .begin
	.macro_ref                                                                         _wsm_validate_size('sm_clear', 0, 1)
	.end_macro_ref                                                                         _wsm_validate_size
	                                                                        alu_shf[*l$index0[1], *l$index0[1], and~, 0xFF, <<0]
.85 008985108651 common_code
	                                                                .end
	.end_macro_ref                                                                 sm_clear_to
	.end_macro_ref                                                             sm_clear
	.end_macro_ref                                                         wsm_clear
	.end_macro_ref                                                     wsm_clear
	.macro_ref                                                     wsm_clear(*l$index0, LM_QSTATE_ENABLED)
	.macro_ref                                                         wsm_clear(*l$index0, LM_QSTATE_ENABLED, 0)
	.macro_ref                                                             sm_clear(*l$index0[1], LM_QSTATE_ENABLED, 0)
	.macro_ref                                                                 sm_clear_to(*l$index0[1], *l$index0[1], LM_QSTATE_ENABLED, 0)
	.macro_ref                                                                 __WSM_GET_MASKLEN(LM_QSTATE_ENABLED)
	.end_macro_ref                                                                 __WSM_GET_MASKLEN
	                                                                .begin
	.macro_ref                                                                         _wsm_validate_size('sm_clear', 0, 1)
	.end_macro_ref                                                                         _wsm_validate_size
	                                                                        alu_shf[*l$index0[1], *l$index0[1], and~, 0x1, <<8]
.86 00B0C0401301 common_code
	                                                                .end
	.end_macro_ref                                                                 sm_clear_to
	.end_macro_ref                                                             sm_clear
	.end_macro_ref                                                         wsm_clear
	.end_macro_ref                                                     wsm_clear
	                                                .endif
	                                            .endif
	                                        .end
	.end_macro_ref                                         _set_queue_state
	                                                l011_end#: 
	                                            l010_01#: 
	                                            l010_end#: 
	                                        alu[l0006!q, l0006!q, +, 1]
.87 00AAF0001003 common_code
	                                    .endw
	                                    l009_cont#: 
	                                    alu[--,l0006!q,-,l0006!maxqs]
.88 00D80D808129 common_code
	                                    blt[l009_start#]
.89 00D821C08038 common_code
	                                .else
	                                    l009_end#: 
	                                br[l008_end#]
.90 00F000001300 common_code
	                                l008_01#: 
	.macro_ref                                     move(l0006!q, 0)
	.macro_ref                                             immed32(l0006!q, 0)
	                                                    immed[l0006!q, 0]
.91 00AAF0001003 common_code
	.end_macro_ref                                             immed32
	.end_macro_ref                                     move
	                                    .while (q < maxqs)
	                                    alu[--,l0006!q,-,l0006!maxqs]
.92 00D821C08128 common_code
	                                    bge[l013_end#]
.93 00AAF0001320 common_code
	                                        .if (q < 32)
	                                    l013_start#: 
	                                        alu[--,l0006!q,-,32]
.94 00D818808128 common_code
	                                        bge[l014_01#]
.95 00AA70001300 common_code
	                                            alu[--, l0006!q, or, 0]
.96 008400221121 common_code
	                                            alu_shf[l0006!up, 1, and, $l0006!bar[4], >>indirect]
.97 00D819008038 common_code
	                                        .else
	                                        br[l014_end#]
.98 00AA70001300 common_code
	                                        l014_01#: 
	                                            alu[--, l0006!q, or, 0]       ; only 5 least significant bits are used
.99 008400221521 common_code
	                                            alu_shf[l0006!up, 1, and, $l0006!bar[5], >>indirect]
.100 008A00881001 common_code
	                                        .endif
	                                        l014_end#: 
	.macro_ref                                         _set_queue_state(l0005!vid, l0006!q, l0006!up, l0006!rid)
	                                        .begin
	                                            .reg l0021!qid
	                                            .reg l0021!lma
	                                            .reg l0021!changed
	                                            .reg l0021!currently_up
	                                            .reg l0021!base_addr
	                                            .reg l0021!tmp
	.macro_ref                                             nfd_vid2qid(l0021!qid, l0005!vid, l0006!q)
	.macro_ref                                                 nfd_vid2natq(l0021!qid, l0005!vid, l0006!q)
	                                                .begin
	                                                        .reg l0022!vnic
	.macro_ref                                                                 nfd_build_vf_q(l0021!qid, l0005!vid, l0006!q)
	                                                                .begin
	                                                                            alu_shf[l0021!qid, l0006!q, or, l0005!vid, <<0]
.101 0091C0680208 common_code
	                                                                .end
	.end_macro_ref                                                                 nfd_build_vf_q
	                                                .end
	.end_macro_ref                                                 nfd_vid2natq
	.end_macro_ref                                             nfd_vid2qid
	                                            alu_shf[l0021!lma, --, b, l0021!qid, <<4]
.102 00FC06601B00 common_code
	                                            local_csr_wr[active_lm_addr_0, l0021!lma]
.103 00F0000C0300 common_code
	                                            nop
.104 00F0000C0300 common_code
	                                            nop
.105 00F0000C0300 common_code
	                                            nop
.106 009480714521 common_code
	.macro_ref                                             wsm_extract(l0021!currently_up, *l$index0, LM_QSTATE_ENABLED)
	.macro_ref                                                 wsm_extract(l0021!currently_up, *l$index0, LM_QSTATE_ENABLED, 0)
	.macro_ref                                                     sm_extract(l0021!currently_up, *l$index0[1], LM_QSTATE_ENABLED, 0)
	.macro_ref                                                     __WSM_GET_MASKLEN(LM_QSTATE_ENABLED)
	.end_macro_ref                                                     __WSM_GET_MASKLEN
	.macro_ref                                                             _wsm_validate_size('sm_extract', 0, 1)
	.end_macro_ref                                                             _wsm_validate_size
	                                                            alu_shf[l0021!currently_up, 0x1, and, *l$index0[1], >>8]
.107 00AAB0001C02 common_code
	.end_macro_ref                                                     sm_extract
	.end_macro_ref                                                 wsm_extract
	.end_macro_ref                                             wsm_extract
	                                            .if (in_up != currently_up)
	                                            alu[--,l0006!up,-,l0021!currently_up]
.108 00D821008120 common_code
	                                            beq[l015_01#]
.109 00A0700C0002 common_code
	                                                .if (in_up != 0)
	                                                alu[--,--,b,l0006!up]
.110 00D820808120 common_code
	                                                beq[l016_01#]
.111 00880517FC51 common_code
	.macro_ref                                                     wsm_set(*l$index0, LM_QSTATE_RID, l0006!rid)
	.macro_ref                                                         wsm_set(*l$index0, LM_QSTATE_RID, l0006!rid, 0)
	.macro_ref                                                             sm_set(*l$index0[1], LM_QSTATE_RID, l0006!rid, 0)
	.macro_ref                                                                 sm_set_to(*l$index0[1], *l$index0[1], LM_QSTATE_RID, l0006!rid, 0)
	                                                                .begin
	.macro_ref                                                                     sm_clear_to(*l$index0[1], *l$index0[1], LM_QSTATE_RID, 0)
	.macro_ref                                                                     __WSM_GET_MASKLEN(LM_QSTATE_RID)
	.end_macro_ref                                                                     __WSM_GET_MASKLEN
	                                                                    .begin
	.macro_ref                                                                             _wsm_validate_size('sm_clear', 0, 1)
	.end_macro_ref                                                                             _wsm_validate_size
	                                                                            alu_shf[*l$index0[1], *l$index0[1], and~, 0xFF, <<0]
.112 008A05194404 common_code
	                                                                    .end
	.end_macro_ref                                                                     sm_clear_to
	.macro_ref                                                                     sm_set_noclr_to(*l$index0[1], *l$index0[1], LM_QSTATE_RID, l0006!rid, 1)
	                                                                    .begin
	.macro_ref                                                                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                                                         _wsm_validate_size
	                                                                        alu_shf[*l$index0[1], *l$index0[1], or, l0006!rid, <<0]
.113 008985108651 common_code
	                                                                    .end
	.end_macro_ref                                                                     sm_set_noclr_to
	                                                                .end
	.end_macro_ref                                                                 sm_set_to
	.end_macro_ref                                                             sm_set
	.end_macro_ref                                                         wsm_set
	.end_macro_ref                                                     wsm_set
	.macro_ref                                                     wsm_set(*l$index0, LM_QSTATE_ENABLED, 1)
	.macro_ref                                                         wsm_set(*l$index0, LM_QSTATE_ENABLED, 1, 0)
	.macro_ref                                                             sm_set(*l$index0[1], LM_QSTATE_ENABLED, 1, 0)
	.macro_ref                                                                 sm_set_to(*l$index0[1], *l$index0[1], LM_QSTATE_ENABLED, 1, 0)
	                                                                .begin
	.macro_ref                                                                     sm_clear_to(*l$index0[1], *l$index0[1], LM_QSTATE_ENABLED, 0)
	.macro_ref                                                                     __WSM_GET_MASKLEN(LM_QSTATE_ENABLED)
	.end_macro_ref                                                                     __WSM_GET_MASKLEN
	                                                                    .begin
	.macro_ref                                                                             _wsm_validate_size('sm_clear', 0, 1)
	.end_macro_ref                                                                             _wsm_validate_size
	                                                                            alu_shf[*l$index0[1], *l$index0[1], and~, 0x1, <<8]
.114 008B85108651 common_code
	                                                                    .end
	.end_macro_ref                                                                     sm_clear_to
	.macro_ref                                                                     sm_set_noclr_to(*l$index0[1], *l$index0[1], LM_QSTATE_ENABLED, 1, 1)
	                                                                    .begin
	.macro_ref                                                                         _wsm_validate_size('sm_set_noclr_to', 1, 1)
	.end_macro_ref                                                                         _wsm_validate_size
	                                                                        alu_shf[*l$index0[1], *l$index0[1], or, 1, <<8]
.115 00F0000C0200 common_code
	                                                                    .end
	.end_macro_ref                                                                     sm_set_noclr_to
	                                                                .end
	.end_macro_ref                                                                 sm_set_to
	.end_macro_ref                                                             sm_set
	.end_macro_ref                                                         wsm_set
	.end_macro_ref                                                     wsm_set
	.macro_ref                                                     move(*l$index0[0], 0)
	.macro_ref                                                             immed32(*l$index0[0], 0)
	                                                                    immed[*l$index0[0], 0]
.116 00F0000C0009 common_code
	.end_macro_ref                                                             immed32
	.end_macro_ref                                                     move
	.macro_ref                                                     move(l0021!base_addr, (fl_cache_mem0 >> 8))
	.macro_ref                                                             immed32(l0021!base_addr, (fl_cache_mem0 >> 8))
	.end_macro_ref                                                             immed32
	.end_macro_ref                                                     move
	.macro_ref                                                     _reset_ticket_bitmap(l0021!qid)
	                                                    .begin
	                                                        .reg l0030!addr_hi
	                                                        .reg l0030!addr_lo
	                                                        .reg write $l0030!bitmap[4]
	                                                        .xfer_order $l0030!bitmap[0]
	                                                        .sig l0030!bitmap_sig
	.macro_ref                                                         move(l0030!addr_hi, (nfd_out_sb_release0 >> 8))
	.macro_ref                                                                 immed32(l0030!addr_hi, (nfd_out_sb_release0 >> 8))
	                                                                            immed[l0030!addr_hi, (((nfd_out_sb_release0 >> 8)) & 0xFFFF)]
.117 00F4400C0009 common_code
	                                                                            immed_w1[l0030!addr_hi, ((((nfd_out_sb_release0 >> 8)) >> 16) & 0xFFFF)]
.118 0091C0980208 common_code
	.end_macro_ref                                                                 immed32
	.end_macro_ref                                                         move
	                                                        alu_shf[l0030!addr_lo, --, b, l0021!qid, <<4]    ; addr_lo = qid * sizeof(bitmap)
.119 00F0000C0180 common_code
	.macro_ref                                                         aggregate_zero($l0030!bitmap, 4)
	.macro_ref                                                             aggregate_set($l0030!bitmap, 0, 0, 4)
	.macro_ref                                                                         move($l0030!bitmap[0], 0)
	.macro_ref                                                                                 immed32($l0030!bitmap[0], 0)
	                                                                                        immed[$l0030!bitmap[0], 0]
.120 00F0000C0181 common_code
	.end_macro_ref                                                                                 immed32
	.end_macro_ref                                                                         move
	.macro_ref                                                                         move($l0030!bitmap[1], 0)
	.macro_ref                                                                                 immed32($l0030!bitmap[1], 0)
	                                                                                        immed[$l0030!bitmap[1], 0]
.121 00F0000C0182 common_code
	.end_macro_ref                                                                                 immed32
	.end_macro_ref                                                                         move
	.macro_ref                                                                         move($l0030!bitmap[2], 0)
	.macro_ref                                                                                 immed32($l0030!bitmap[2], 0)
	                                                                                        immed[$l0030!bitmap[2], 0]
.122 00F0000C0183 common_code
	.end_macro_ref                                                                                 immed32
	.end_macro_ref                                                                         move
	.macro_ref                                                                         move($l0030!bitmap[3], 0)
	.macro_ref                                                                                 immed32($l0030!bitmap[3], 0)
	                                                                                        immed[$l0030!bitmap[3], 0]
.123 005F26002709 common_code
	.end_macro_ref                                                                                 immed32
	.end_macro_ref                                                                         move
	.end_macro_ref                                                             aggregate_set
	.end_macro_ref                                                         aggregate_zero
	                                                        mem[write32, $l0030!bitmap[0], l0030!addr_hi, <<8, l0030!addr_lo, 4], sig_done[l0030!bitmap_sig]
.124 00D821308232 common_code
	                                                        .while (!SIGNAL(bitmap_sig))
	; BRANCH TARGET OPTIMIZATION:  changed branch label from l017_end# to l016_end#.
	                                                        br_signal[l0030!bitmap_sig,l016_end#], defer[3]
.125 00F000002300 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 9 positions
	                                                                        immed[l0021!base_addr, (((fl_cache_mem0 >> 8)) & 0xFFFF)]
.126 00F440002300 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 9 positions
	                                                                        immed_w1[l0021!base_addr, ((((fl_cache_mem0 >> 8)) >> 16) & 0xFFFF)]
.127 008BB5282208 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 9 positions
	                                                    alu_shf[*l$index0[2], l0021!base_addr, or, l0021!qid, <<5]
.128 00D820008233 common_code
	                                                        .endw
	                                                        l017_start#: 
	                                                        l017_cont#: 
	                                                        br_!signal[l0030!bitmap_sig,l017_start#]
.129 00D821008038 common_code
	                                                    .end
	.end_macro_ref                                                     _reset_ticket_bitmap
	                                                .else
	                                                        l017_end#: 
	                                                br[l016_end#]
.130 00880517FC51 common_code
	                                                l016_01#: 
	.macro_ref                                                     wsm_clear(*l$index0, LM_QSTATE_RID)
	.macro_ref                                                         wsm_clear(*l$index0, LM_QSTATE_RID, 0)
	.macro_ref                                                             sm_clear(*l$index0[1], LM_QSTATE_RID, 0)
	.macro_ref                                                                 sm_clear_to(*l$index0[1], *l$index0[1], LM_QSTATE_RID, 0)
	.macro_ref                                                                 __WSM_GET_MASKLEN(LM_QSTATE_RID)
	.end_macro_ref                                                                 __WSM_GET_MASKLEN
	                                                                .begin
	.macro_ref                                                                         _wsm_validate_size('sm_clear', 0, 1)
	.end_macro_ref                                                                         _wsm_validate_size
	                                                                        alu_shf[*l$index0[1], *l$index0[1], and~, 0xFF, <<0]
.131 008985108651 common_code
	                                                                .end
	.end_macro_ref                                                                 sm_clear_to
	.end_macro_ref                                                             sm_clear
	.end_macro_ref                                                         wsm_clear
	.end_macro_ref                                                     wsm_clear
	.macro_ref                                                     wsm_clear(*l$index0, LM_QSTATE_ENABLED)
	.macro_ref                                                         wsm_clear(*l$index0, LM_QSTATE_ENABLED, 0)
	.macro_ref                                                             sm_clear(*l$index0[1], LM_QSTATE_ENABLED, 0)
	.macro_ref                                                                 sm_clear_to(*l$index0[1], *l$index0[1], LM_QSTATE_ENABLED, 0)
	.macro_ref                                                                 __WSM_GET_MASKLEN(LM_QSTATE_ENABLED)
	.end_macro_ref                                                                 __WSM_GET_MASKLEN
	                                                                .begin
	.macro_ref                                                                         _wsm_validate_size('sm_clear', 0, 1)
	.end_macro_ref                                                                         _wsm_validate_size
	                                                                        alu_shf[*l$index0[1], *l$index0[1], and~, 0x1, <<8]
.132 00B0C0401301 common_code
	                                                                .end
	.end_macro_ref                                                                 sm_clear_to
	.end_macro_ref                                                             sm_clear
	.end_macro_ref                                                         wsm_clear
	.end_macro_ref                                                     wsm_clear
	                                                .endif
	                                            .endif
	                                        .end
	.end_macro_ref                                         _set_queue_state
	                                                l016_end#: 
	                                            l015_01#: 
	                                            l015_end#: 
	                                        alu[l0006!q, l0006!q, +, 1]
.133 00AAF0001003 common_code
	                                    .endw
	                                    l013_cont#: 
	                                    alu[--,l0006!q,-,l0006!maxqs]
.134 00D817408129 common_code
	                                    blt[l013_start#]
.135 00A018661B00 common_code
	                                .endif
	                            .end
	.end_macro_ref                             _check_vnic_state
	                                    l013_end#: 
	                                l008_end#: 
	.macro_ref                             move($l0005!cmsg[0], $l0005!cmsg[0])
	                                    alu[$l0005!cmsg[0], --, b, $l0005!cmsg[0]]
.136 005420680C00 common_code
	.end_macro_ref                             move
	                            mem[journal, $l0005!cmsg[0], l0005!ring_addr_hi, <<8, l0005!ring_out_addr_lo, 1], ctx_swap[l0005!put_sig]
.137 00F0003C180C common_code
	.macro_ref                             signal_next_cfg_me()
	                            .begin
	                                .reg l0033!meid
	                                .reg l0033!addr
	                                .reg l0033!tmp
	                                .sig remote _nfd_cfg_sig_svc_me0!
	.macro_ref                                 move(l0033!meid, (__nfp_idstr2meid("i48.me2")))
	.macro_ref                                         immed32(l0033!meid, (__nfp_idstr2meid("i48.me2")))
	                                                immed[l0033!meid, 774]
.138 00F0003037F0 common_code
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	.macro_ref                                 move(l0033!tmp, 0x3F0)
	.macro_ref                                         immed32(l0033!tmp, 0x3F0)
	                                                immed[l0033!tmp, 1008]
.139 00B440D0340C common_code
	.end_macro_ref                                         immed32
	.end_macro_ref                                 move
	                                alu[l0033!tmp, l0033!tmp, and, l0033!meid]
.140 0080C0D03600 common_code
	                                alu_shf[l0033!addr, --, b, l0033!tmp, <<20]
.141 00B440DC3C0C common_code
	                                alu[l0033!tmp, 0xF, and, l0033!meid]
.142 009B70C0360D common_code
	                                alu_shf[l0033!addr, l0033!addr, or, l0033!tmp, <<9]
.143 008BA0D83220 common_code
	                                alu_shf[l0033!addr, l0033!addr, or, 0, <<6]
.144 00B000DC0300 common_code
	.macro_ref                                 move(l0033!tmp, (&remote(_nfd_cfg_sig_svc_me0, __nfp_idstr2meid("i48.me2"))))
	                                        alu[l0033!tmp, --, b, (&remote(_nfd_cfg_sig_svc_me0, __nfp_idstr2meid("i48.me2")))]
.145 009BE0C0360D common_code
	.end_macro_ref                                 move
	                                alu_shf[l0033!addr, l0033!addr, or, l0033!tmp, <<2]
.146 101C00083320 common_code
	                                ct[interthread_signal, --, 0, l0033!addr,1]
.147 00D808808038 common_code
	                            .end
	.end_macro_ref                             signal_next_cfg_me
	                        .endw
	                        l004_cont#: 
	                        br[l004_start#]
.148 00D804004233 common_code
	                        .unreachable
	                    .end
	.end_macro_ref                     process_reconfig
	                    .continue
	; BRANCH TARGET OPTIMIZATION:  the following uword was rendered unreachable.
	; 
	; ; BRANCH TARGET OPTIMIZATION:  changed branch label from l001_cont# to l001_start#.
	;                         l004_end#: 
	;                     br[l001_start#]
	                .endif
	                .if (SIGNAL(state_alarm_sig))
	; BRANCH TARGET OPTIMIZATION:  changed branch label from l018_01# to l001_start#.
	                l003_01#: 
	                l003_end#: 
	                br_!signal[l0001!state_alarm_sig,l001_start#]
.149 00F000000F00 common_code
	.macro_ref                     dump_state(l0001!state_version)
	                    .begin
	                        .reg l0034!addr_hi
	                        .reg l0034!addr_lo
	                        .reg l0034!lma
	                        .reg l0034!i
	                        .reg $l0034!out[16]
	                        .xfer_order $l0034!out[0]
	                        .sig l0034!out_sig
	.macro_ref                         move(l0034!lma, sb_ctx_base)
	.macro_ref                                 immed32(l0034!lma, sb_ctx_base)
	                                            immed[l0034!lma, 0]
.150 00F440000F00 common_code
	                                            immed_w1[l0034!lma, 0]
.151 00FC06600F00 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        local_csr_wr[active_lm_addr_0, l0034!lma]
.152 00F000400F00 common_code
	.macro_ref                         move(l0034!lma, sb_debug_snapshot)
	.macro_ref                                 immed32(l0034!lma, sb_debug_snapshot)
	                                            immed[l0034!lma, 1024]
.153 00F440000F00 common_code
	                                            immed_w1[l0034!lma, 0]
.154 00FC09600F00 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        local_csr_wr[active_lm_addr_2, l0034!lma]
.155 00F000103B00 common_code
	.macro_ref                         move(l0034!i, ((16 / 4) * 64))
	.macro_ref                                 immed32(l0034!i, ((16 / 4) * 64))
	                                        immed[l0034!i, 256]
.156 00F0000C000F common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	.macro_ref                         move(l0034!addr_hi, ((nfd_out_sb_debug_state0 >> 8) & 0xFF000000))
	.macro_ref                                 immed32(l0034!addr_hi, ((nfd_out_sb_debug_state0 >> 8) & 0xFF000000))
	                                            immed[l0034!addr_hi, ((((nfd_out_sb_debug_state0 >> 8) & 0xFF000000)) & 0xFFFF)]
.157 00F4400C000F common_code
	                                            immed_w1[l0034!addr_hi, (((((nfd_out_sb_debug_state0 >> 8) & 0xFF000000)) >> 16) & 0xFFFF)]
.158 00F000000B00 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	.macro_ref                         move(l0034!addr_lo, (nfd_out_sb_debug_state0 & 0xFFFFFFFF))
	.macro_ref                                 immed32(l0034!addr_lo, (nfd_out_sb_debug_state0 & 0xFFFFFFFF))
	                                            immed[l0034!addr_lo, (((nfd_out_sb_debug_state0 & 0xFFFFFFFF)) & 0xFFFF)]
.159 00F440000B00 common_code
	                                            immed_w1[l0034!addr_lo, ((((nfd_out_sb_debug_state0 & 0xFFFFFFFF)) >> 16) & 0xFFFF)]
.160 08A021084300 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                    M164_copy_loop#:
	.macro_ref                         move(*l$index2++, *l$index0++)
	M175#:
	                                alu[*l$index2++, --, b, *l$index0++]
.161 00BAC0E03B04 common_code
	.end_macro_ref                         move
	                        alu[l0034!i, l0034!i, -, 4]
.162 00D82830812B common_code
	                        bgt[M164_copy_loop#], defer[3]
.163 08A021084300 common_code
	.macro_ref                         move(*l$index2++, *l$index0++)
	                                alu[*l$index2++, --, b, *l$index0++]
.164 08A021084300 common_code
	.end_macro_ref                         move
	.macro_ref                         move(*l$index2++, *l$index0++)
	                                alu[*l$index2++, --, b, *l$index0++]
.165 08A021084300 common_code
	.end_macro_ref                         move
	.macro_ref                         move(*l$index2++, *l$index0++)
	                                alu[*l$index2++, --, b, *l$index0++]
.166 00A018000700 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0034!out[0], l0001!state_version)
	                                alu[$l0034!out[0], --, b, l0001!state_version]
.167 00A018188300 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0034!out[1], *l$index1)
	                                alu[$l0034!out[1], --, b, *l$index1]
.168 00F0000C0182 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0034!out[2], 0)
	.macro_ref                                 immed32($l0034!out[2], 0)
	                                        immed[$l0034!out[2], 0]
.169 00F0000C0183 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	.macro_ref                         move($l0034!out[3], 0)
	.macro_ref                                 immed32($l0034!out[3], 0)
	                                        immed[$l0034!out[3], 0]
.170 00412200080F common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        mem[write, $l0034!out[0], l0034!addr_hi, <<8, l0034!addr_lo, 2], ctx_swap[l0034!out_sig]
.171 00F000400F00 common_code
	.macro_ref                         move(l0034!lma, sb_debug_snapshot)
	.macro_ref                                 immed32(l0034!lma, sb_debug_snapshot)
	                                            immed[l0034!lma, 1024]
.172 00F440000F00 common_code
	                                            immed_w1[l0034!lma, 0]
.173 00FC09600F00 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        local_csr_wr[active_lm_addr_2, l0034!lma]
.174 00F000003B40 common_code
	.macro_ref                         move(l0034!i, 64)
	.macro_ref                                 immed32(l0034!i, 64)
	                                        immed[l0034!i, 64]
.175 00A030003B00 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        .while (i > 0)
	                        alu[--,--,b,l0034!i]
.176 00D831D0812A common_code
	                        ble[l019_end#], defer[1]
.177 00B0C0200B10 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 3 positions
	                        alu[l0034!addr_lo, l0034!addr_lo, +, 16]
.178 04A018084300 common_code
	                        l019_start#: 
	.macro_ref                             move($l0034!out[0], *l$index2++)
	                                    alu[$l0034!out[0], --, b, *l$index2++]
.179 04A018184300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[1], *l$index2++)
	                                    alu[$l0034!out[1], --, b, *l$index2++]
.180 04A018284300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[2], *l$index2++)
	                                    alu[$l0034!out[2], --, b, *l$index2++]
.181 04A018384300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[3], *l$index2++)
	                                    alu[$l0034!out[3], --, b, *l$index2++]
.182 04A018484300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[4], *l$index2++)
	                                    alu[$l0034!out[4], --, b, *l$index2++]
.183 04A018584300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[5], *l$index2++)
	                                    alu[$l0034!out[5], --, b, *l$index2++]
.184 04A018684300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[6], *l$index2++)
	                                    alu[$l0034!out[6], --, b, *l$index2++]
.185 04A018784300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[7], *l$index2++)
	                                    alu[$l0034!out[7], --, b, *l$index2++]
.186 04A018884300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[8], *l$index2++)
	                                    alu[$l0034!out[8], --, b, *l$index2++]
.187 04A018984300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[9], *l$index2++)
	                                    alu[$l0034!out[9], --, b, *l$index2++]
.188 04A018A84300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[10], *l$index2++)
	                                    alu[$l0034!out[10], --, b, *l$index2++]
.189 04A018B84300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[11], *l$index2++)
	                                    alu[$l0034!out[11], --, b, *l$index2++]
.190 04A018C84300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[12], *l$index2++)
	                                    alu[$l0034!out[12], --, b, *l$index2++]
.191 04A018D84300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[13], *l$index2++)
	                                    alu[$l0034!out[13], --, b, *l$index2++]
.192 04A018E84300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[14], *l$index2++)
	                                    alu[$l0034!out[14], --, b, *l$index2++]
.193 04A018F84300 common_code
	.end_macro_ref                             move
	.macro_ref                             move($l0034!out[15], *l$index2++)
	                                    alu[$l0034!out[15], --, b, *l$index2++]
.194 00412E00080F common_code
	.end_macro_ref                             move
	                            mem[write, $l0034!out[0], l0034!addr_hi, <<8, l0034!addr_lo, 8], ctx_swap[l0034!out_sig]
.195 00BAC0E03B04 common_code
	                            alu[l0034!i, l0034!i, -, 4]
.196 00A030003B00 common_code
	                        .endw
	                        l019_cont#: 
	                        alu[--,--,b,l0034!i]
.197 00D82C90812B common_code
	                        bgt[l019_start#], defer[1]
.198 00B0C0200B40 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 3 positions
	                            alu[l0034!addr_lo, l0034!addr_lo, +, 64]
.199 00B0C0100701 common_code
	                        l019_end#: 
	                        alu[l0001!state_version, l0001!state_version, +, 1]
.200 00F004001F00 common_code
	                    .end
	.end_macro_ref                     dump_state
	.macro_ref                     set_alarm(l0001!state_alarm_sig, 16384)
	                    .begin
	                        .reg l0035!count
	                        .reg l0035!amt
	.macro_ref                         move(l0035!amt, 16384)
	.macro_ref                                 immed32(l0035!amt, 16384)
	                                        immed[l0035!amt, 16384]
.201 00FC0C0C0000 common_code
	.end_macro_ref                                 immed32
	.end_macro_ref                         move
	                        local_csr_rd[timestamp_low]
.202 00F0000C0000 common_code
	                        immed[l0035!count, 0]
.203 00B080601C00 common_code
	                        alu[l0035!count, l0035!count, +, l0035!amt]
.204 00F440001B00 common_code
	                        immed_w1[l0035!count, 0]
.205 00D804208038 common_code
	                        .set_sig l0001!state_alarm_sig
	                    .end
	.end_macro_ref                     set_alarm
	                    .continue
	; BRANCH TARGET OPTIMIZATION:  changed branch label from l001_cont# to l001_start#.
	                    br[l001_start#], defer[2]
.206 00FC07EC0701 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                        local_csr_wr[active_future_count_signal, 1]
.207 00FC05E01B00 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 1 positions
	                        local_csr_wr[active_ctx_future_count, l0035!count]
.208 00FC044C0000 common_code
	                .endif
	            .endw
	; BRANCH TARGET OPTIMIZATION:  the following uword was rendered unreachable.
	;                 l018_01#: 
	;                 l018_end#: 
	;             l001_cont#: 
	;             br[l001_start#]
	            .unreachable
	        .end
	.end_macro_ref         manager_main_loop
	    .else
	; The following uwords are unreachable and have been commented out
	;     br[l000_end#]
	; End commenting out unreachable code
	    l000_01#: 
	.macro_ref         die_if_debug()
	.end_macro_ref         die_if_debug
	.macro_ref         worker_main_loop()
	        .begin
	                .reg volatile read $l0036!in_0[4]
	                .xfer_order $l0036!in_0[0]
	                .reg volatile write $l0036!out_0[6]
	                .xfer_order $l0036!out_0[0]
	                .sig volatile l0036!insig_0
	                .sig volatile l0036!outsig_0
	                .reg volatile read $l0036!in_1[4]
	                .xfer_order $l0036!in_1[0]
	                .reg volatile write $l0036!out_1[6]
	                .xfer_order $l0036!out_1[0]
	                .sig volatile l0036!insig_1
	                .sig volatile l0036!outsig_1
	                .reg volatile read $l0036!in_2[4]
	                .xfer_order $l0036!in_2[0]
	                .reg volatile write $l0036!out_2[6]
	                .xfer_order $l0036!out_2[0]
	                .sig volatile l0036!insig_2
	                .sig volatile l0036!outsig_2
	                .reg volatile read $l0036!in_3[4]
	                .xfer_order $l0036!in_3[0]
	                .reg volatile write $l0036!out_3[6]
	                .xfer_order $l0036!out_3[0]
	                .sig volatile l0036!insig_3
	                .sig volatile l0036!outsig_3
	                .reg volatile read $l0036!in_4[4]
	                .xfer_order $l0036!in_4[0]
	                .reg volatile write $l0036!out_4[6]
	                .xfer_order $l0036!out_4[0]
	                .sig volatile l0036!insig_4
	                .sig volatile l0036!outsig_4
	            .reg volatile l0036!g_sig_next_worker
	            .reg volatile l0036!g_lm_qstate_mask
	            .reg volatile l0036!g_cache_addr_lo_mask
	            .reg volatile l0036!g_seq_mask
	            .reg volatile l0036!g_seq_incr
	            .reg volatile l0036!g_in_wq_hi
	            .reg volatile l0036!g_in_wq_lo
	            .reg volatile l0036!g_out_wq_hi
	            .reg volatile l0036!g_out_wq_lo
	            .reg l0036!ctx
	            .reg l0036!next_ctx
	            .reg l0036!lma
	            .sig volatile l0036!ordersig
	            .addr l0036!ordersig 15
	.macro_ref             pci_out_sb_iface_init()
	            .begin
	.macro_ref                     move(l0000!g_sbpd_wq_hi, 0)
	.macro_ref                             immed32(l0000!g_sbpd_wq_hi, 0)
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	.macro_ref                     move(l0000!g_sbpd_wq_lo, ((nfd_out_sb_ring_num0) << 2))
	.macro_ref                             immed32(l0000!g_sbpd_wq_lo, ((nfd_out_sb_ring_num0) << 2))
	.end_macro_ref                             immed32
	.end_macro_ref                     move
	            .end
	.end_macro_ref             pci_out_sb_iface_init
	            local_csr_rd[active_ctx_sts]
.209 00F000001B00 common_code
	            immed[l0036!ctx, 0]
.210 00B440601B07 common_code
	            alu[l0036!ctx, l0036!ctx, and, 7]
.211 00AAF0001B01 common_code
	            .if (ctx < STAGE_BATCH_FIRST_WORKER || ctx > STAGE_BATCH_LAST_WORKER)
	            alu[--,l0036!ctx,-,1]
.212 00D836B08129 common_code
	            blt[l020_010_t#], defer[3]
.213 00F0000C0000 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 5 positions
	                                    immed[l0000!g_sbpd_wq_hi, 0]
.214 00F000000700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 5 positions
	                                        immed[l0000!g_sbpd_wq_lo, ((((nfd_out_sb_ring_num0) << 2)) & 0xFFFF)]
.215 00F440000700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 5 positions
	                                        immed_w1[l0000!g_sbpd_wq_lo, (((((nfd_out_sb_ring_num0) << 2)) >> 16) & 0xFFFF)]
.216 00AAF0001B07 common_code
	            alu[--,l0036!ctx,-,7]
.217 00D836C0812A common_code
	            ble[l020_01#]
.218 00E000010000 common_code
	            l020_010_t#:
	                ctx_arb[kill], any
.219 00A0C0601B01 common_code
	            .endif
	            l020_01#: 
	            l020_end#: 
	            alu[l0036!next_ctx, l0036!ctx, +, 1]
.220 00AAB00C1C06 common_code
	            .if (next_ctx > STAGE_BATCH_LAST_WORKER)
	            alu[--,l0036!next_ctx,-,7]
.221 00D837C0812A common_code
	            ble[l021_01#]
.222 00F0000C0406 common_code
	.macro_ref                 move(l0036!next_ctx, 1)
	.macro_ref                         immed32(l0036!next_ctx, 1)
	                                immed[l0036!next_ctx, 1]
.223 009BD020BE06 common_code
	.end_macro_ref                         immed32
	.end_macro_ref                 move
	            .endif
	            l021_01#: 
	            l021_end#: 
	            alu_shf[l0036!g_sig_next_worker, l0036!next_ctx, or, 15, <<3]
.224 00F000300FF0 common_code
	.macro_ref             move(l0036!g_lm_qstate_mask, ((64 - 1) << (log2(16))))
	.macro_ref                     immed32(l0036!g_lm_qstate_mask, ((64 - 1) << (log2(16))))
	                            immed[l0036!g_lm_qstate_mask, 1008]
.225 00F001F013F8 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	.macro_ref             move(l0036!g_cache_addr_lo_mask, ((1024 - 1) << (log2(8))))
	.macro_ref                     immed32(l0036!g_cache_addr_lo_mask, ((1024 - 1) << (log2(8))))
	                            immed[l0036!g_cache_addr_lo_mask, 8184]
.226 00F2003FFC01 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	.macro_ref             move(l0036!g_seq_mask, (0x3FF << (8)))
	.macro_ref                     immed32(l0036!g_seq_mask, (0x3FF << (8)))
	                            immed[l0036!g_seq_mask, 1023, <<8]
.227 00F0001C0002 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	.macro_ref             move(l0036!g_seq_incr, (1 << (8)))
	.macro_ref                     immed32(l0036!g_seq_incr, (1 << (8)))
	                            immed[l0036!g_seq_incr, 256]
.228 00F0000C0003 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	.macro_ref             move(l0036!g_in_wq_hi, ((nfd_out_ring_mem0 >> 8) & 0xFF000000))
	.macro_ref                     immed32(l0036!g_in_wq_hi, ((nfd_out_ring_mem0 >> 8) & 0xFF000000))
	                                immed[l0036!g_in_wq_hi, ((((nfd_out_ring_mem0 >> 8) & 0xFF000000)) & 0xFFFF)]
.229 00F4400C0003 common_code
	                                immed_w1[l0036!g_in_wq_hi, (((((nfd_out_ring_mem0 >> 8) & 0xFF000000)) >> 16) & 0xFFFF)]
.230 00F0008C0007 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	.macro_ref             move(l0036!g_in_wq_lo, nfd_out_ring_num00)
	.macro_ref                     immed32(l0036!g_in_wq_lo, nfd_out_ring_num00)
	.end_macro_ref                     immed32
	.end_macro_ref             move
	.macro_ref             move(l0036!lma, sb_wq_credits)
	.macro_ref                     immed32(l0036!lma, sb_wq_credits)
	                                immed[l0036!lma, 2048]
.231 00F4400C0007 common_code
	                                immed_w1[l0036!lma, 0]
.232 00FC06EC0007 common_code
	.end_macro_ref                     immed32
	.end_macro_ref             move
	            local_csr_wr[active_lm_addr_1, l0036!lma]
.233 00E000208000 common_code
	                .set_sig l0036!ordersig
	                ctx_arb[l0036!ordersig], defer[2]
.234 00F000001700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                                immed[l0036!g_in_wq_lo, ((nfd_out_ring_num00) & 0xFFFF)]
.235 00F440001700 common_code
	; BRANCH LATENCY FILL OPTIMIZATION:  the uword below was "pushed" down 4 positions
	                                immed_w1[l0036!g_in_wq_lo, (((nfd_out_ring_num00) >> 16) & 0xFFFF)]
.236 005316041703 common_code
	                mem[qadd_thread, $l0036!in_0[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_0]
.237 008BD0881A22 common_code
	.macro_ref                 signal_ctx(l0036!ctx, (&outsig_0))
	                .begin
	                        .reg l0038!sigval
	                        alu_shf[l0038!sigval, l0036!ctx, or, 2, <<3]
.238 00FC10AC0008 common_code
	                        local_csr_wr[same_me_signal, l0038!sigval]
.239 00FC10A00B00 common_code
	                .end
	.end_macro_ref                 signal_ctx
	                local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.240 00E000008000 common_code
	                .set_sig l0036!ordersig
	                ctx_arb[l0036!ordersig]
.241 005336441703 common_code
	                mem[qadd_thread, $l0036!in_1[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_1]
.242 008BD0981A24 common_code
	.macro_ref                 signal_ctx(l0036!ctx, (&outsig_1))
	                .begin
	                        .reg l0039!sigval
	                        alu_shf[l0039!sigval, l0036!ctx, or, 4, <<3]
.243 00FC10AC0009 common_code
	                        local_csr_wr[same_me_signal, l0039!sigval]
.244 00FC10A00B00 common_code
	                .end
	.end_macro_ref                 signal_ctx
	                local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.245 00E000008000 common_code
	                .set_sig l0036!ordersig
	                ctx_arb[l0036!ordersig]
.246 005356841703 common_code
	                mem[qadd_thread, $l0036!in_2[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_2]
.247 008BD0A81A26 common_code
	.macro_ref                 signal_ctx(l0036!ctx, (&outsig_2))
	                .begin
	                        .reg l0040!sigval
	                        alu_shf[l0040!sigval, l0036!ctx, or, 6, <<3]
.248 00FC10AC000A common_code
	                        local_csr_wr[same_me_signal, l0040!sigval]
.249 00FC10A00B00 common_code
	                .end
	.end_macro_ref                 signal_ctx
	                local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.250 00E000008000 common_code
	                .set_sig l0036!ordersig
	                ctx_arb[l0036!ordersig]
.251 005376C41703 common_code
	                mem[qadd_thread, $l0036!in_3[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_3]
.252 008BD0B81A28 common_code
	.macro_ref                 signal_ctx(l0036!ctx, (&outsig_3))
	                .begin
	                        .reg l0041!sigval
	                        alu_shf[l0041!sigval, l0036!ctx, or, 8, <<3]
.253 00FC10AC000B common_code
	                        local_csr_wr[same_me_signal, l0041!sigval]
.254 00FC10A00B00 common_code
	                .end
	.end_macro_ref                 signal_ctx
	                local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.255 00E000008000 common_code
	                .set_sig l0036!ordersig
	                ctx_arb[l0036!ordersig]
.256 005397041703 common_code
	                mem[qadd_thread, $l0036!in_4[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_4]
.257 009BD0781A2A common_code
	.macro_ref                 signal_ctx(l0036!ctx, (&outsig_4))
	                .begin
	                        .reg l0042!sigval
	                        alu_shf[l0042!sigval, l0036!ctx, or, 10, <<3]
.258 00FC10A01F00 common_code
	                        local_csr_wr[same_me_signal, l0042!sigval]
.259 00FC10A00B00 common_code
	                .end
	.end_macro_ref                 signal_ctx
	                local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.260 00E000008006 common_code
	            .set_sig l0036!ordersig
	            .set_sig l0036!outsig_0
	            ctx_arb[l0036!insig_0, l0036!outsig_0, l0036!ordersig]
.261 00AAA20C0620 common_code
	        M209_worker_loop#:
	                M209_process_request_0#:
	.macro_ref                     process_request($l0036!in_0, $l0036!out_0, l0036!insig_0, l0036!outsig_0, l0036!insig_1, l0036!outsig_1, l0036!ordersig, M209_process_request_1#)
	                    .begin
	                        .reg l0043!lma
	                        .reg l0043!credits
	                        .reg l0043!addr_lo
	                        .reg l0043!out_word0
	                        .reg read $l0043!buf_desc[2]
	                        .xfer_order $l0043!buf_desc[0]
	                        .sig l0043!fl_read_sig
	M236#:
	                    M209_process_request_0_test_ready_to_send#:
	                        alu[*l$index1, *l$index1, -, 1]
.262 00D846808129 common_code
	                        blt[M209_process_request_0_flow_controlled#]
.263 00FC10A00B00 common_code
	                        local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.264 0094C0880D82 common_code
	                        alu_shf[l0043!lma, l0036!g_lm_qstate_mask, and, $l0036!in_0[2],
	                            >>12]
.265 00FC06602300 common_code
	                        local_csr_wr[active_lm_addr_0, l0043!lma]
.266 00A018260300 common_code
	.macro_ref                         move($l0036!out_0[2], $l0036!in_0[0])
	                                alu[$l0036!out_0[2], --, b, $l0036!in_0[0]]
.267 00A018360700 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_0[3], $l0036!in_0[1])
	                                alu[$l0036!out_0[3], --, b, $l0036!in_0[1]]
.268 00A018460B00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_0[4], $l0036!in_0[2])
	                                alu[$l0036!out_0[4], --, b, $l0036!in_0[2]]
.269 00A018560F00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_0[5], $l0036!in_0[3])
	                                alu[$l0036!out_0[5], --, b, $l0036!in_0[3]]
.270 00A400C80001 common_code
	.end_macro_ref                         move
	                        alu[l0043!out_word0, l0036!g_seq_mask, and, *l$index0[0]]
.271 009450981150 common_code
	                        alu_shf[l0043!addr_lo, l0036!g_cache_addr_lo_mask, and, *l$index0[0], >>5]
.272 0040B1402752 common_code
	                        mem[read, $l0043!buf_desc[0], *l$index0[2], <<8, l0043!addr_lo, 1], sig_done[l0043!fl_read_sig]
.273 004120402752 common_code
	                        mem[write, $l0036!out_0[4], *l$index0[2], <<8, l0043!addr_lo, 1], sig_done[l0036!outsig_0]
.274 005316041703 common_code
	                        mem[qadd_thread, $l0036!in_0[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_0]
.275 00E000200804 common_code
	                        ctx_arb[l0043!fl_read_sig, l0036!outsig_0], defer[2]
.276 00A0E0080002 common_code
	                        alu[*l$index0[0], *l$index0[0], +, l0036!g_seq_incr]
.277 009A90A1460C common_code
	                        alu_shf[l0043!out_word0, l0043!out_word0, or, *l$index0[1], <<23]
.278 007928040700 common_code
	.macro_ref                         pci_out_sb_add_work($l0036!out_0[0], l0036!outsig_0)
	                                cls[ring_workq_add_work, $l0036!out_0[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                                    sig_done[l0036!outsig_0]
.279 00E047648018 common_code
	.end_macro_ref                         pci_out_sb_add_work
	                        .set_sig l0036!ordersig
	#pragma warningdisable:5009
	                        ctx_arb[l0036!insig_1, l0036!outsig_1, l0036!ordersig], defer[2], br[M209_process_request_1#]
.280 00A4D80029C4 common_code
	                        alu[$l0036!out_0[0], l0043!out_word0, +8, $l0043!buf_desc[0]]
.281 00A018171700 common_code
	.macro_ref                         move($l0036!out_0[1], $l0043!buf_desc[1])
	                                alu[$l0036!out_0[1], --, b, $l0043!buf_desc[1]]
.282 00E041640001 common_code
	.end_macro_ref                         move
	#pragma warningdefault:5009
	                    M209_process_request_0_flow_controlled#:
	                        ctx_arb[voluntary], defer[2], br[M209_process_request_0_test_ready_to_send#]
.283 00A0A20C0620 common_code
	                        alu[*l$index1, *l$index1, +, 1]
.284 00F0000C0300 common_code
	                        nop
.285 00AAA20C0620 common_code
	                    .end
	.end_macro_ref                     process_request
	                M209_process_request_1#:
	.macro_ref                     process_request($l0036!in_1, $l0036!out_1, l0036!insig_1, l0036!outsig_1, l0036!insig_2, l0036!outsig_2, l0036!ordersig, M209_process_request_2#)
	                    .begin
	                        .reg l0044!lma
	                        .reg l0044!credits
	                        .reg l0044!addr_lo
	                        .reg l0044!out_word0
	                        .reg read $l0044!buf_desc[2]
	                        .xfer_order $l0044!buf_desc[0]
	                        .sig l0044!fl_read_sig
	M243#:
	                    M209_process_request_1_test_ready_to_send#:
	                        alu[*l$index1, *l$index1, -, 1]
.286 00D84C808129 common_code
	                        blt[M209_process_request_1_flow_controlled#]
.287 00FC10A00B00 common_code
	                        local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.288 0094C0B80D86 common_code
	                        alu_shf[l0044!lma, l0036!g_lm_qstate_mask, and, $l0036!in_1[2],
	                            >>12]
.289 00FC06602F00 common_code
	                        local_csr_wr[active_lm_addr_0, l0044!lma]
.290 00A018861300 common_code
	.macro_ref                         move($l0036!out_1[2], $l0036!in_1[0])
	                                alu[$l0036!out_1[2], --, b, $l0036!in_1[0]]
.291 00A018961700 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_1[3], $l0036!in_1[1])
	                                alu[$l0036!out_1[3], --, b, $l0036!in_1[1]]
.292 00A018A61B00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_1[4], $l0036!in_1[2])
	                                alu[$l0036!out_1[4], --, b, $l0036!in_1[2]]
.293 00A018B61F00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_1[5], $l0036!in_1[3])
	                                alu[$l0036!out_1[5], --, b, $l0036!in_1[3]]
.294 00A400D80001 common_code
	.end_macro_ref                         move
	                        alu[l0044!out_word0, l0036!g_seq_mask, and, *l$index0[0]]
.295 009450C81150 common_code
	                        alu_shf[l0044!addr_lo, l0036!g_cache_addr_lo_mask, and, *l$index0[0], >>5]
.296 0040B1403352 common_code
	                        mem[read, $l0044!buf_desc[0], *l$index0[2], <<8, l0044!addr_lo, 1], sig_done[l0044!fl_read_sig]
.297 004140A03352 common_code
	                        mem[write, $l0036!out_1[4], *l$index0[2], <<8, l0044!addr_lo, 1], sig_done[l0036!outsig_1]
.298 005336441703 common_code
	                        mem[qadd_thread, $l0036!in_1[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_1]
.299 00E000200810 common_code
	                        ctx_arb[l0044!fl_read_sig, l0036!outsig_1], defer[2]
.300 00A0E0080002 common_code
	                        alu[*l$index0[0], *l$index0[0], +, l0036!g_seq_incr]
.301 009A90D1460D common_code
	                        alu_shf[l0044!out_word0, l0044!out_word0, or, *l$index0[1], <<23]
.302 007948640700 common_code
	.macro_ref                         pci_out_sb_add_work($l0036!out_1[0], l0036!outsig_1)
	                                cls[ring_workq_add_work, $l0036!out_1[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                                    sig_done[l0036!outsig_1]
.303 00E04D648060 common_code
	.end_macro_ref                         pci_out_sb_add_work
	                        .set_sig l0036!ordersig
	#pragma warningdisable:5009
	                        ctx_arb[l0036!insig_2, l0036!outsig_2, l0036!ordersig], defer[2], br[M209_process_request_2#]
.304 00A4D86035C4 common_code
	                        alu[$l0036!out_1[0], l0044!out_word0, +8, $l0044!buf_desc[0]]
.305 00A018771700 common_code
	.macro_ref                         move($l0036!out_1[1], $l0044!buf_desc[1])
	                                alu[$l0036!out_1[1], --, b, $l0044!buf_desc[1]]
.306 00E047640001 common_code
	.end_macro_ref                         move
	#pragma warningdefault:5009
	                    M209_process_request_1_flow_controlled#:
	                        ctx_arb[voluntary], defer[2], br[M209_process_request_1_test_ready_to_send#]
.307 00A0A20C0620 common_code
	                        alu[*l$index1, *l$index1, +, 1]
.308 00F0000C0300 common_code
	                        nop
.309 00AAA20C0620 common_code
	                    .end
	.end_macro_ref                     process_request
	                M209_process_request_2#:
	.macro_ref                     process_request($l0036!in_2, $l0036!out_2, l0036!insig_2, l0036!outsig_2, l0036!insig_3, l0036!outsig_3, l0036!ordersig, M209_process_request_3#)
	                    .begin
	                        .reg l0045!lma
	                        .reg l0045!credits
	                        .reg l0045!addr_lo
	                        .reg l0045!out_word0
	                        .reg read $l0045!buf_desc[2]
	                        .xfer_order $l0045!buf_desc[0]
	                        .sig l0045!fl_read_sig
	M250#:
	                    M209_process_request_2_test_ready_to_send#:
	                        alu[*l$index1, *l$index1, -, 1]
.310 00D852808129 common_code
	                        blt[M209_process_request_2_flow_controlled#]
.311 00FC10A00B00 common_code
	                        local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.312 0094C0E80D8A common_code
	                        alu_shf[l0045!lma, l0036!g_lm_qstate_mask, and, $l0036!in_2[2],
	                            >>12]
.313 00FC06603B00 common_code
	                        local_csr_wr[active_lm_addr_0, l0045!lma]
.314 00A018E62300 common_code
	.macro_ref                         move($l0036!out_2[2], $l0036!in_2[0])
	                                alu[$l0036!out_2[2], --, b, $l0036!in_2[0]]
.315 00A018F62700 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_2[3], $l0036!in_2[1])
	                                alu[$l0036!out_2[3], --, b, $l0036!in_2[1]]
.316 00A01C062B00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_2[4], $l0036!in_2[2])
	                                alu[$l0036!out_2[4], --, b, $l0036!in_2[2]]
.317 00A01C162F00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_2[5], $l0036!in_2[3])
	                                alu[$l0036!out_2[5], --, b, $l0036!in_2[3]]
.318 00A400E80001 common_code
	.end_macro_ref                         move
	                        alu[l0045!out_word0, l0036!g_seq_mask, and, *l$index0[0]]
.319 009450F81150 common_code
	                        alu_shf[l0045!addr_lo, l0036!g_cache_addr_lo_mask, and, *l$index0[0], >>5]
.320 0040B1403F52 common_code
	                        mem[read, $l0045!buf_desc[0], *l$index0[2], <<8, l0045!addr_lo, 1], sig_done[l0045!fl_read_sig]
.321 004161003F52 common_code
	                        mem[write, $l0036!out_2[4], *l$index0[2], <<8, l0045!addr_lo, 1], sig_done[l0036!outsig_2]
.322 005356841703 common_code
	                        mem[qadd_thread, $l0036!in_2[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_2]
.323 00E000200840 common_code
	                        ctx_arb[l0045!fl_read_sig, l0036!outsig_2], defer[2]
.324 00A0E0080002 common_code
	                        alu[*l$index0[0], *l$index0[0], +, l0036!g_seq_incr]
.325 009A9071460E common_code
	                        alu_shf[l0045!out_word0, l0045!out_word0, or, *l$index0[1], <<23]
.326 007968C40700 common_code
	.macro_ref                         pci_out_sb_add_work($l0036!out_2[0], l0036!outsig_2)
	                                cls[ring_workq_add_work, $l0036!out_2[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                                    sig_done[l0036!outsig_2]
.327 00E053648180 common_code
	.end_macro_ref                         pci_out_sb_add_work
	                        .set_sig l0036!ordersig
	#pragma warningdisable:5009
	                        ctx_arb[l0036!insig_3, l0036!outsig_3, l0036!ordersig], defer[2], br[M209_process_request_3#]
.328 00A4D8C01DC4 common_code
	                        alu[$l0036!out_2[0], l0045!out_word0, +8, $l0045!buf_desc[0]]
.329 00A018D71700 common_code
	.macro_ref                         move($l0036!out_2[1], $l0045!buf_desc[1])
	                                alu[$l0036!out_2[1], --, b, $l0045!buf_desc[1]]
.330 00E04D640001 common_code
	.end_macro_ref                         move
	#pragma warningdefault:5009
	                    M209_process_request_2_flow_controlled#:
	                        ctx_arb[voluntary], defer[2], br[M209_process_request_2_test_ready_to_send#]
.331 00A0A20C0620 common_code
	                        alu[*l$index1, *l$index1, +, 1]
.332 00F0000C0300 common_code
	                        nop
.333 00AAA20C0620 common_code
	                    .end
	.end_macro_ref                     process_request
	                M209_process_request_3#:
	.macro_ref                     process_request($l0036!in_3, $l0036!out_3, l0036!insig_3, l0036!outsig_3, l0036!insig_4, l0036!outsig_4, l0036!ordersig, M209_process_request_4#)
	                    .begin
	                        .reg l0046!lma
	                        .reg l0046!credits
	                        .reg l0046!addr_lo
	                        .reg l0046!out_word0
	                        .reg read $l0046!buf_desc[2]
	                        .xfer_order $l0046!buf_desc[0]
	                        .sig l0046!fl_read_sig
	M257#:
	                    M209_process_request_3_test_ready_to_send#:
	                        alu[*l$index1, *l$index1, -, 1]
.334 00D858808129 common_code
	                        blt[M209_process_request_3_flow_controlled#]
.335 00FC10A00B00 common_code
	                        local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.336 0094C0880D8E common_code
	                        alu_shf[l0046!lma, l0036!g_lm_qstate_mask, and, $l0036!in_3[2],
	                            >>12]
.337 00FC06602300 common_code
	                        local_csr_wr[active_lm_addr_0, l0046!lma]
.338 00A01C463300 common_code
	.macro_ref                         move($l0036!out_3[2], $l0036!in_3[0])
	                                alu[$l0036!out_3[2], --, b, $l0036!in_3[0]]
.339 00A01C563700 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_3[3], $l0036!in_3[1])
	                                alu[$l0036!out_3[3], --, b, $l0036!in_3[1]]
.340 00A01C663B00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_3[4], $l0036!in_3[2])
	                                alu[$l0036!out_3[4], --, b, $l0036!in_3[2]]
.341 00A01C763F00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_3[5], $l0036!in_3[3])
	                                alu[$l0036!out_3[5], --, b, $l0036!in_3[3]]
.342 00A400F80001 common_code
	.end_macro_ref                         move
	                        alu[l0046!out_word0, l0036!g_seq_mask, and, *l$index0[0]]
.343 009450981150 common_code
	                        alu_shf[l0046!addr_lo, l0036!g_cache_addr_lo_mask, and, *l$index0[0], >>5]
.344 0040B1402752 common_code
	                        mem[read, $l0046!buf_desc[0], *l$index0[2], <<8, l0046!addr_lo, 1], sig_done[l0046!fl_read_sig]
.345 004181602752 common_code
	                        mem[write, $l0036!out_3[4], *l$index0[2], <<8, l0046!addr_lo, 1], sig_done[l0036!outsig_3]
.346 005376C41703 common_code
	                        mem[qadd_thread, $l0036!in_3[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_3]
.347 00E000200900 common_code
	                        ctx_arb[l0046!fl_read_sig, l0036!outsig_3], defer[2]
.348 00A0E0080002 common_code
	                        alu[*l$index0[0], *l$index0[0], +, l0036!g_seq_incr]
.349 009A90A1460F common_code
	                        alu_shf[l0046!out_word0, l0046!out_word0, or, *l$index0[1], <<23]
.350 007989240700 common_code
	.macro_ref                         pci_out_sb_add_work($l0036!out_3[0], l0036!outsig_3)
	                                cls[ring_workq_add_work, $l0036!out_3[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                                    sig_done[l0036!outsig_3]
.351 00E059648600 common_code
	.end_macro_ref                         pci_out_sb_add_work
	                        .set_sig l0036!ordersig
	#pragma warningdisable:5009
	                        ctx_arb[l0036!insig_4, l0036!outsig_4, l0036!ordersig], defer[2], br[M209_process_request_4#]
.352 00A4DC2029C4 common_code
	                        alu[$l0036!out_3[0], l0046!out_word0, +8, $l0046!buf_desc[0]]
.353 00A01C371700 common_code
	.macro_ref                         move($l0036!out_3[1], $l0046!buf_desc[1])
	                                alu[$l0036!out_3[1], --, b, $l0046!buf_desc[1]]
.354 00E053640001 common_code
	.end_macro_ref                         move
	#pragma warningdefault:5009
	                    M209_process_request_3_flow_controlled#:
	                        ctx_arb[voluntary], defer[2], br[M209_process_request_3_test_ready_to_send#]
.355 00A0A20C0620 common_code
	                        alu[*l$index1, *l$index1, +, 1]
.356 00F0000C0300 common_code
	                        nop
.357 00AAA20C0620 common_code
	                    .end
	.end_macro_ref                     process_request
	                M209_process_request_4#:
	.macro_ref                     process_request($l0036!in_4, $l0036!out_4, l0036!insig_4, l0036!outsig_4, l0036!insig_0, l0036!outsig_0, l0036!ordersig, M209_process_request_0#)
	                    .begin
	                        .reg l0047!lma
	                        .reg l0047!credits
	                        .reg l0047!addr_lo
	                        .reg l0047!out_word0
	                        .reg read $l0047!buf_desc[2]
	                        .xfer_order $l0047!buf_desc[0]
	                        .sig l0047!fl_read_sig
	M264#:
	                    M209_process_request_4_test_ready_to_send#:
	                        alu[*l$index1, *l$index1, -, 1]
.358 00D85E808129 common_code
	                        blt[M209_process_request_4_flow_controlled#]
.359 00FC10A00B00 common_code
	                        local_csr_wr[same_me_signal, l0036!g_sig_next_worker]
.360 0094C0B80DC2 common_code
	                        alu_shf[l0047!lma, l0036!g_lm_qstate_mask, and, $l0036!in_4[2],
	                            >>12]
.361 00FC06602F00 common_code
	                        local_csr_wr[active_lm_addr_0, l0047!lma]
.362 00A01CA70300 common_code
	.macro_ref                         move($l0036!out_4[2], $l0036!in_4[0])
	                                alu[$l0036!out_4[2], --, b, $l0036!in_4[0]]
.363 00A01CB70700 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_4[3], $l0036!in_4[1])
	                                alu[$l0036!out_4[3], --, b, $l0036!in_4[1]]
.364 00A01CC70B00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_4[4], $l0036!in_4[2])
	                                alu[$l0036!out_4[4], --, b, $l0036!in_4[2]]
.365 00A01CD70F00 common_code
	.end_macro_ref                         move
	.macro_ref                         move($l0036!out_4[5], $l0036!in_4[3])
	                                alu[$l0036!out_4[5], --, b, $l0036!in_4[3]]
.366 00A400680001 common_code
	.end_macro_ref                         move
	                        alu[l0047!out_word0, l0036!g_seq_mask, and, *l$index0[0]]
.367 009450C81150 common_code
	                        alu_shf[l0047!addr_lo, l0036!g_cache_addr_lo_mask, and, *l$index0[0], >>5]
.368 0040B1403352 common_code
	                        mem[read, $l0047!buf_desc[0], *l$index0[2], <<8, l0047!addr_lo, 1], sig_done[l0047!fl_read_sig]
.369 0041A1C03352 common_code
	                        mem[write, $l0036!out_4[4], *l$index0[2], <<8, l0047!addr_lo, 1], sig_done[l0036!outsig_4]
.370 005397041703 common_code
	                        mem[qadd_thread, $l0036!in_4[0], l0036!g_in_wq_hi, <<8, l0036!g_in_wq_lo, 4], sig_done[l0036!insig_4]
.371 00E000200C00 common_code
	                        ctx_arb[l0047!fl_read_sig, l0036!outsig_4], defer[2]
.372 00A0E0080002 common_code
	                        alu[*l$index0[0], *l$index0[0], +, l0036!g_seq_incr]
.373 009A90D14606 common_code
	                        alu_shf[l0047!out_word0, l0047!out_word0, or, *l$index0[1], <<23]
.374 0079A9840700 common_code
	.macro_ref                         pci_out_sb_add_work($l0036!out_4[0], l0036!outsig_4)
	                                cls[ring_workq_add_work, $l0036!out_4[0], l0000!g_sbpd_wq_hi, <<8, l0000!g_sbpd_wq_lo, 5],
	                                    sig_done[l0036!outsig_4]
.375 00E041648006 common_code
	.end_macro_ref                         pci_out_sb_add_work
	                        .set_sig l0036!ordersig
	#pragma warningdisable:5009
	                        ctx_arb[l0036!insig_0, l0036!outsig_0, l0036!ordersig], defer[2], br[M209_process_request_0#]
.376 00A4DC8035C4 common_code
	                        alu[$l0036!out_4[0], l0047!out_word0, +8, $l0047!buf_desc[0]]
.377 00A01C971700 common_code
	.macro_ref                         move($l0036!out_4[1], $l0047!buf_desc[1])
	                                alu[$l0036!out_4[1], --, b, $l0047!buf_desc[1]]
.378 00E059640001 common_code
	.end_macro_ref                         move
	#pragma warningdefault:5009
	                    M209_process_request_4_flow_controlled#:
	                        ctx_arb[voluntary], defer[2], br[M209_process_request_4_test_ready_to_send#]
.379 00A0A20C0620 common_code
	                        alu[*l$index1, *l$index1, +, 1]
.380 00F0000C0300 common_code
	                        nop
.381 00F0000C0300 common_code
	                    .end
	.end_macro_ref                     process_request
	        .end
	.end_macro_ref         worker_main_loop
	    .endif
	    l000_end#: 
	    nop
+ucode_end

